{"version":3,"sources":["paths.ts","actions/settingsActions.ts","components/TablePaginationActions.tsx","api.ts","utils.ts","actions/queuesActions.ts","actions/queueStatsActions.ts","components/QueueSizeChart.tsx","components/ProcessedTasksChart.tsx","components/DeleteQueueConfirmationDialog.tsx","types/table.ts","components/QueuesOverviewTable.tsx","components/Tooltip.tsx","components/SplitButton.tsx","hooks/index.tsx","components/DailyStatsChart.tsx","views/DashboardView.tsx","reducers/settingsReducer.ts","theme.tsx","actions/snackbarActions.ts","components/ListItemLink.tsx","components/SyntaxHighlighter.tsx","actions/schedulerEntriesActions.ts","reducers/schedulerEntriesReducer.ts","components/SchedulerEnqueueEventsTable.tsx","components/SchedulerEntriesTable.tsx","views/SchedulersView.tsx","actions/tasksActions.ts","components/TableActions.tsx","components/ActiveTasksTable.tsx","components/PendingTasksTable.tsx","components/ScheduledTasksTable.tsx","components/RetryTasksTable.tsx","components/ArchivedTasksTable.tsx","components/CompletedTasksTable.tsx","components/TasksTable.tsx","components/QueueInfoBanner.tsx","components/QueueBreadcrumb.tsx","views/TasksView.tsx","views/TaskDetailsView.tsx","views/SettingsView.tsx","components/ServersTable.tsx","actions/serversActions.ts","views/ServersView.tsx","actions/redisInfoActions.ts","components/QueueLocationTable.tsx","views/RedisInfoView.tsx","actions/metricsActions.ts","components/QueueMetricsChart.tsx","components/MetricsFetchControls.tsx","views/MetricsView.tsx","views/PageNotFoundView.tsx","images/logo-color.svg","images/logo-white.svg","App.tsx","reducers/queuesReducer.ts","reducers/tasksReducer.ts","reducers/serversReducer.ts","reducers/snackbarReducer.ts","reducers/queueStatsReducer.ts","reducers/redisInfoReducer.ts","reducers/metricsReducer.ts","localStorage.ts","store.ts","serviceWorker.ts","parseFlags.ts","index.tsx"],"names":["paths","HOME","window","ROOT_PATH","SETTINGS","SERVERS","SCHEDULERS","QUEUE_DETAILS","REDIS","TASK_DETAILS","QUEUE_METRICS","queueDetailsPath","qname","taskStatus","path","replace","taskDetailsPath","taskId","POLL_INTERVAL_CHANGE","THEME_PREFERENCE_CHANGE","TOGGLE_DRAWER","TASK_ROWS_PER_PAGE_CHANGE","DAILY_STATS_KEY_CHANGE","taskRowsPerPageChange","value","type","useStyles","makeStyles","theme","createStyles","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onPageChange","className","IconButton","onClick","event","disabled","direction","Math","ceil","max","rowsPerPageOptions","getBaseUrl","listQueues","a","axios","method","url","resp","data","deleteQueue","pauseQueue","resumeQueue","listQueueStats","getTaskInfo","id","listActiveTasks","pageOpts","queryString","stringify","cancelActiveTask","cancelAllActiveTasks","batchCancelActiveTasks","taskIds","task_ids","listPendingTasks","listScheduledTasks","listRetryTasks","listArchivedTasks","listCompletedTasks","archivePendingTask","batchArchivePendingTasks","archiveAllPendingTasks","deletePendingTask","batchDeletePendingTasks","deleteAllPendingTasks","runScheduledTask","archiveScheduledTask","deleteScheduledTask","batchDeleteScheduledTasks","deleteAllScheduledTasks","batchRunScheduledTasks","runAllScheduledTasks","batchArchiveScheduledTasks","archiveAllScheduledTasks","runRetryTask","archiveRetryTask","deleteRetryTask","batchDeleteRetryTasks","deleteAllRetryTasks","batchRunRetryTasks","runAllRetryTasks","batchArchiveRetryTasks","archiveAllRetryTasks","runArchivedTask","deleteArchivedTask","batchDeleteArchivedTasks","deleteAllArchivedTasks","batchRunArchivedTasks","runAllArchivedTasks","deleteCompletedTask","batchDeleteCompletedTasks","deleteAllCompletedTasks","listServers","listSchedulerEntries","listSchedulerEnqueueEvents","entryId","getRedisInfo","getMetrics","endTime","duration","queues","params","endtime","length","join","toErrorStringWithHttpStatus","error","response","status","statusText","toErrorString","durationFromSeconds","totalSeconds","hour","floor","minute","second","durationBetween","start","end","durationInMillisec","stringifyDuration","d","n","durationBefore","timestamp","Date","parse","now","timeAgo","timeAgoUnix","console","unixtime","uuidPrefix","uuid","idx","indexOf","substr","percentage","numerator","denominator","perc","toFixed","prettifyPayload","p","JSON","isJsonPayload","currentUnixtime","durationRegex","LIST_QUEUES_BEGIN","LIST_QUEUES_SUCCESS","LIST_QUEUES_ERROR","DELETE_QUEUE_BEGIN","DELETE_QUEUE_SUCCESS","DELETE_QUEUE_ERROR","PAUSE_QUEUE_BEGIN","PAUSE_QUEUE_SUCCESS","PAUSE_QUEUE_ERROR","RESUME_QUEUE_BEGIN","RESUME_QUEUE_SUCCESS","RESUME_QUEUE_ERROR","listQueuesAsync","dispatch","payload","deleteQueueAsync","queue","LIST_QUEUE_STATS_BEGIN","LIST_QUEUE_STATS_SUCCESS","LIST_QUEUE_STATS_ERROR","QueueSizeChart","history","useHistory","ResponsiveContainer","maxBarSize","allQueues","map","b","activeLabel","includes","push","style","cursor","CartesianGrid","strokeDasharray","XAxis","dataKey","stroke","palette","text","secondary","YAxis","Tooltip","Legend","Bar","stackId","fill","ProcessedTasksChart","success","light","connector","SortDirection","connect","state","ownProps","requestPending","q","find","name","undefined","Dialog","open","onClose","size","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","autoFocus","SortBy","table","minWidth","fixedCell","position","zIndex","left","background","paper","colConfigs","label","key","sortBy","Queue","align","State","Size","MemoryUsage","Latency","Processed","Failed","ErrorRate","None","sortQueues","cmpFn","copy","sort","QueuesOverviewTable","useState","setSortBy","Asc","sortDir","setSortDir","queueToDelete","setQueueToDelete","Fragment","TableContainer","Table","TableHead","TableRow","filter","cfg","READ_ONLY","i","TableCell","clsx","TableSortLabel","active","sortKey","e","nextSortDir","Desc","TableBody","q1","q2","isQ1Smaller","paused","memory_usage_bytes","latency_msec","processed","failed","q1ErrorRate","q2ErrorRate","Row","onPauseClick","onResumeClick","onDeleteClick","useRowStyles","row","borderBottomWidth","linkText","textDecoration","primary","textGreen","dark","textRed","boldCell","fontWeight","actionIconsContainer","display","justifyContent","showIcons","setShowIcons","component","scope","to","prettyBytes","display_latency","onMouseEnter","onMouseLeave","title","fontSize","withStyles","tooltip","backgroundColor","maxWidth","typography","pxToRem","border","popper","buttonContained","isDarkTheme","default","action","hover","SplitButton","React","setOpen","anchorRef","useRef","initialSelectedKey","selectedKey","setSelectedKey","handleClose","current","contains","target","selectedOpt","options","opt","ButtonGroup","variant","ref","disableElevation","contained","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","MenuItem","selected","onSelect","usePolling","doFn","interval","useEffect","setInterval","clearInterval","useQuery","search","useLocation","useMemo","URLSearchParams","DailyStatsChart","queueStats","numDays","dataByDate","stat","hasOwnProperty","date","succeeded","Object","values","sortByDate","slice","makeChartData","LineChart","minTickGap","Line","main","x","y","container","paddingTop","paddingBottom","padding","overflow","flexDirection","chartHeader","alignItems","marginBottom","chartHeaderTitle","chartContainer","width","height","infoIcon","grey","tooltipSection","tableContainer","mapDispatchToProps","pauseQueueAsync","resumeQueueAsync","listQueueStatsAsync","dailyStatsKeyChange","ThemePreference","loading","currentStats","pollInterval","settings","dailyStatsKey","dailyStatsChartType","qnames","processedStats","Container","Grid","item","xs","Alert","severity","AlertTitle","Typography","initialState","themePreference","SystemDefault","isDrawerOpen","taskRowsPerPage","settingsReducer","CLOSE_SNACKBAR","listItem","borderTopRightRadius","borderBottomRightRadius","selectedText","selectedIcon","ListItemLink","icon","isMatch","useRouteMatch","strict","sensitive","exact","renderLink","forwardRef","itemProps","ListItem","button","ListItemIcon","ListItemText","SyntaxHighlighter","styleDark","styleLight","language","customStyle","children","LIST_SCHEDULER_ENTRIES_BEGIN","LIST_SCHEDULER_ENTRIES_SUCCESS","LIST_SCHEDULER_ENTRIES_ERROR","LIST_SCHEDULER_ENQUEUE_EVENTS_BEGIN","LIST_SCHEDULER_ENQUEUE_EVENTS_SUCCESS","LIST_SCHEDULER_ENQUEUE_EVENTS_ERROR","getEnqueueEventsEntry","enqueueEventsByEntryId","schedulerEntriesReducer","entries","entry","sortByEnqueuedAt","e1","e2","enqueued_at","newData","uniqBy","events","stickyHeaderCell","schedulerEntries","listSchedulerEnqueueEventsAsync","stickyHeader","task_id","noBorder","modal","modalContent","outline","borderRadius","shape","eventsTable","maxHeight","EntryId","Spec","Type","Payload","Options","NextEnqueue","PrevEnqueue","sortEntries","SchedulerEntriesTable","activeEntryId","setActiveEntryId","isE1Smaller","spec","task_type","task_payload","next_enqueue_at","e1PrevEnqueueAt","prev_enqueue_at","e2PrevEnqueueAt","isLastRow","onShowHistoryClick","Modal","gutterBottom","rowRoot","borderBottom","heading","paddingLeft","listSchedulerEntriesAsync","GET_TASK_INFO_BEGIN","GET_TASK_INFO_SUCCESS","GET_TASK_INFO_ERROR","LIST_ACTIVE_TASKS_BEGIN","LIST_ACTIVE_TASKS_SUCCESS","LIST_ACTIVE_TASKS_ERROR","LIST_PENDING_TASKS_BEGIN","LIST_PENDING_TASKS_SUCCESS","LIST_PENDING_TASKS_ERROR","LIST_SCHEDULED_TASKS_BEGIN","LIST_SCHEDULED_TASKS_SUCCESS","LIST_SCHEDULED_TASKS_ERROR","LIST_RETRY_TASKS_BEGIN","LIST_RETRY_TASKS_SUCCESS","LIST_RETRY_TASKS_ERROR","LIST_ARCHIVED_TASKS_BEGIN","LIST_ARCHIVED_TASKS_SUCCESS","LIST_ARCHIVED_TASKS_ERROR","LIST_COMPLETED_TASKS_BEGIN","LIST_COMPLETED_TASKS_SUCCESS","LIST_COMPLETED_TASKS_ERROR","CANCEL_ACTIVE_TASK_BEGIN","CANCEL_ACTIVE_TASK_SUCCESS","CANCEL_ACTIVE_TASK_ERROR","CANCEL_ALL_ACTIVE_TASKS_BEGIN","CANCEL_ALL_ACTIVE_TASKS_SUCCESS","CANCEL_ALL_ACTIVE_TASKS_ERROR","BATCH_CANCEL_ACTIVE_TASKS_BEGIN","BATCH_CANCEL_ACTIVE_TASKS_SUCCESS","BATCH_CANCEL_ACTIVE_TASKS_ERROR","RUN_SCHEDULED_TASK_BEGIN","RUN_SCHEDULED_TASK_SUCCESS","RUN_SCHEDULED_TASK_ERROR","RUN_RETRY_TASK_BEGIN","RUN_RETRY_TASK_SUCCESS","RUN_RETRY_TASK_ERROR","RUN_ARCHIVED_TASK_BEGIN","RUN_ARCHIVED_TASK_SUCCESS","RUN_ARCHIVED_TASK_ERROR","DELETE_PENDING_TASK_BEGIN","DELETE_PENDING_TASK_SUCCESS","DELETE_PENDING_TASK_ERROR","ARCHIVE_PENDING_TASK_BEGIN","ARCHIVE_PENDING_TASK_SUCCESS","ARCHIVE_PENDING_TASK_ERROR","DELETE_SCHEDULED_TASK_BEGIN","DELETE_SCHEDULED_TASK_SUCCESS","DELETE_SCHEDULED_TASK_ERROR","ARCHIVE_SCHEDULED_TASK_BEGIN","ARCHIVE_SCHEDULED_TASK_SUCCESS","ARCHIVE_SCHEDULED_TASK_ERROR","ARCHIVE_RETRY_TASK_BEGIN","ARCHIVE_RETRY_TASK_SUCCESS","ARCHIVE_RETRY_TASK_ERROR","BATCH_ARCHIVE_PENDING_TASKS_BEGIN","BATCH_ARCHIVE_PENDING_TASKS_SUCCESS","BATCH_ARCHIVE_PENDING_TASKS_ERROR","BATCH_DELETE_PENDING_TASKS_BEGIN","BATCH_DELETE_PENDING_TASKS_SUCCESS","BATCH_DELETE_PENDING_TASKS_ERROR","DELETE_ALL_PENDING_TASKS_BEGIN","DELETE_ALL_PENDING_TASKS_SUCCESS","DELETE_ALL_PENDING_TASKS_ERROR","ARCHIVE_ALL_PENDING_TASKS_BEGIN","ARCHIVE_ALL_PENDING_TASKS_SUCCESS","ARCHIVE_ALL_PENDING_TASKS_ERROR","BATCH_RUN_SCHEDULED_TASKS_BEGIN","BATCH_RUN_SCHEDULED_TASKS_SUCCESS","BATCH_RUN_SCHEDULED_TASKS_ERROR","BATCH_ARCHIVE_SCHEDULED_TASKS_BEGIN","BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS","BATCH_ARCHIVE_SCHEDULED_TASKS_ERROR","BATCH_DELETE_SCHEDULED_TASKS_BEGIN","BATCH_DELETE_SCHEDULED_TASKS_SUCCESS","BATCH_DELETE_SCHEDULED_TASKS_ERROR","RUN_ALL_SCHEDULED_TASKS_BEGIN","RUN_ALL_SCHEDULED_TASKS_SUCCESS","RUN_ALL_SCHEDULED_TASKS_ERROR","ARCHIVE_ALL_SCHEDULED_TASKS_BEGIN","ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS","ARCHIVE_ALL_SCHEDULED_TASKS_ERROR","DELETE_ALL_SCHEDULED_TASKS_BEGIN","DELETE_ALL_SCHEDULED_TASKS_SUCCESS","DELETE_ALL_SCHEDULED_TASKS_ERROR","DELETE_RETRY_TASK_BEGIN","DELETE_RETRY_TASK_SUCCESS","DELETE_RETRY_TASK_ERROR","BATCH_RUN_RETRY_TASKS_BEGIN","BATCH_RUN_RETRY_TASKS_SUCCESS","BATCH_RUN_RETRY_TASKS_ERROR","BATCH_ARCHIVE_RETRY_TASKS_BEGIN","BATCH_ARCHIVE_RETRY_TASKS_SUCCESS","BATCH_ARCHIVE_RETRY_TASKS_ERROR","BATCH_DELETE_RETRY_TASKS_BEGIN","BATCH_DELETE_RETRY_TASKS_SUCCESS","BATCH_DELETE_RETRY_TASKS_ERROR","RUN_ALL_RETRY_TASKS_BEGIN","RUN_ALL_RETRY_TASKS_SUCCESS","RUN_ALL_RETRY_TASKS_ERROR","ARCHIVE_ALL_RETRY_TASKS_BEGIN","ARCHIVE_ALL_RETRY_TASKS_SUCCESS","ARCHIVE_ALL_RETRY_TASKS_ERROR","DELETE_ALL_RETRY_TASKS_BEGIN","DELETE_ALL_RETRY_TASKS_SUCCESS","DELETE_ALL_RETRY_TASKS_ERROR","DELETE_ARCHIVED_TASK_BEGIN","DELETE_ARCHIVED_TASK_SUCCESS","DELETE_ARCHIVED_TASK_ERROR","BATCH_RUN_ARCHIVED_TASKS_BEGIN","BATCH_RUN_ARCHIVED_TASKS_SUCCESS","BATCH_RUN_ARCHIVED_TASKS_ERROR","BATCH_DELETE_ARCHIVED_TASKS_BEGIN","BATCH_DELETE_ARCHIVED_TASKS_SUCCESS","BATCH_DELETE_ARCHIVED_TASKS_ERROR","RUN_ALL_ARCHIVED_TASKS_BEGIN","RUN_ALL_ARCHIVED_TASKS_SUCCESS","RUN_ALL_ARCHIVED_TASKS_ERROR","DELETE_ALL_ARCHIVED_TASKS_BEGIN","DELETE_ALL_ARCHIVED_TASKS_SUCCESS","DELETE_ALL_ARCHIVED_TASKS_ERROR","DELETE_COMPLETED_TASK_BEGIN","DELETE_COMPLETED_TASK_SUCCESS","DELETE_COMPLETED_TASK_ERROR","DELETE_ALL_COMPLETED_TASKS_BEGIN","DELETE_ALL_COMPLETED_TASKS_SUCCESS","DELETE_ALL_COMPLETED_TASKS_ERROR","BATCH_DELETE_COMPLETED_TASKS_BEGIN","BATCH_DELETE_COMPLETED_TASKS_SUCCESS","BATCH_DELETE_COMPLETED_TASKS_ERROR","actionsContainer","moreIcon","marginRight","iconGroup","borderLeft","TableActions","menuAnchor","setMenuAnchor","closeMenu","currentTarget","keepMounted","Boolean","menuItemActions","showIconButtons","iconButtonActions","alert","borderTopLeftRadius","pagination","listActiveTasksAsync","cancelActiveTaskAsync","batchCancelActiveTasksAsync","cancelAllActiveTasksAsync","columns","tasks","activeTasks","batchActionPending","allActionPending","pageSize","boxShadow","shadows","borderBottomColor","idCell","copyButton","IdGroup","task","isSelected","stopPropagation","Checkbox","onChange","onSelectChange","checked","navigator","clipboard","writeText","margin","canceling","is_orphaned","start_time","deadline","onActionCellEnter","onActionCellLeave","showActions","onCancelClick","setPage","selectedIds","setSelectedIds","activeTaskId","setActiveTaskId","useCallback","rowCount","numSelected","then","indeterminate","newSelected","t","inputProps","col","concat","TableFooter","TablePagination","colSpan","totalTaskCount","SelectProps","native","newPage","onRowsPerPageChange","parseInt","ActionsComponent","listPendingTasksAsync","deletePendingTaskAsync","batchDeletePendingTasksAsync","deleteAllPendingTasksAsync","deleted","archivePendingTaskAsync","batchArchivePendingTasksAsync","archiveAllPendingTasksAsync","pendingTasks","actionCell","actionButton","retried","max_retry","onArchiveClick","listScheduledTasksAsync","batchDeleteScheduledTasksAsync","batchRunScheduledTasksAsync","batchArchiveScheduledTasksAsync","deleteAllScheduledTasksAsync","runAllScheduledTasksAsync","archiveAllScheduledTasksAsync","deleteScheduledTaskAsync","runScheduledTaskAsync","archiveScheduledTaskAsync","scheduledTasks","next_process_at","onRunClick","batchDeleteRetryTasksAsync","batchRunRetryTasksAsync","batchArchiveRetryTasksAsync","deleteAllRetryTasksAsync","runAllRetryTasksAsync","archiveAllRetryTasksAsync","listRetryTasksAsync","deleteRetryTaskAsync","runRetryTaskAsync","archiveRetryTaskAsync","retryTasks","error_message","listArchivedTasksAsync","runArchivedTaskAsync","runAllArchivedTasksAsync","deleteArchivedTaskAsync","deleteAllArchivedTasksAsync","batchRunArchivedTasksAsync","batchDeleteArchivedTasksAsync","archivedTasks","last_failed_at","listCompletedTasksAsync","deleteCompletedTaskAsync","deleteAllCompletedTasksAsync","batchDeleteCompletedTasksAsync","completedTasks","completed_at","result","ttl_seconds","TabPanel","other","hidden","flex","overflowY","queueInfo","pending","scheduled","retry","archived","completed","header","paddingRight","chip","taskcount","textAlign","searchbar","searchIcon","pointerEvents","inputRoot","inputInput","chips","searchQuery","setSearchQuery","c","Chip","InputBase","placeholder","input","onKeyDown","trim","banner","bannerItem","flexGrow","divider","StyledBreadcrumb","emphasize","QueueBreadcrumbs","setAnchorEl","getPaths","handleClick","preventDefault","Breadcrumbs","Link","queueName","deleteIcon","onDelete","breadcrumbs","tasksTable","validStatus","useParams","get","taskInfo","getTaskInfoAsync","marginTop","infoRow","infoKeyCell","infoValueCell","footer","md","timeout_seconds","startIcon","goBack","formControl","selectEmpty","select","pollIntervalChange","selectTheme","sliderValue","setSliderValue","justify","Slider","val","onChangeCommitted","valueLabelDisplay","step","marks","min","Select","labelId","Always","Never","HostPID","Started","Status","Queues","ActiveWorkers","sortServerInfos","ServersTable","servers","s1","s2","isS1Smaller","host","pid","s1StartTime","s2StartTime","s1Queues","keys","queue_priorities","s2Queues","active_workers","srv","server","link","concurrency","Collapse","in","timeout","unmountOnExit","worker","Box","strict_priority_enabled","LIST_SERVERS_BEGIN","LIST_SERVERS_SUCCESS","LIST_SERVERS_ERROR","listServersAsync","GET_REDIS_INFO_BEGIN","GET_REDIS_INFO_SUCCESS","GET_REDIS_INFO_ERROR","QueueLocationTable","queueLocations","loc","keyslot","nodes","redis","redisInfo","redisAddress","address","redisInfoRaw","rawData","redisClusterEnabled","cluster","redisClusterNodesRaw","rawClusterNodes","getRedisInfoAsync","RedisMetricCards","MetricCard","content","redis_version","uptime_in_days","used_memory_human","used_memory_peak_human","mem_fragmentation_ratio","connected_clients","connected_slaves","rdb_last_save_time","rdb_changes_since_last_save","Card","CardContent","href","GET_METRICS_BEGIN","GET_METRICS_SUCCESS","GET_METRICS_ERROR","lineColors","QueueMetricsChart","metrics","byTimestamp","ts","metric","parseFloat","toChartData","domain","startTime","tickFormatter","toLocaleTimeString","scale","yAxisTickFormatter","labelFormatter","dot","defaultProps","toString","mapStateToProps","endTimeCaption","shiftButtons","buttonGroupRoot","top","endTimeShiftControls","borderBottomStyle","leftShiftButtons","rightShiftButtons","controlsContainer","controlSelectorBox","controlEndTimeSelector","controlDurationSelector","radioButtonRoot","formControlLabel","buttonLabel","textTransform","formControlRoot","formLabel","customInputField","filterButton","queueFilters","checkbox","day","formatTime","tz","timeZoneName","split","dayjs","unix","format","RadioInput","FormControlLabel","control","Radio","useShiftButtonStyles","dense","iconRoot","ShiftButton","endTimeSec","durationSec","endTimeOption","customEndTime","durationOption","customDuration","toISOString","customEndTimeError","customDurationError","getInitialState","setState","timePopoverAnchorElem","setTimePopoverAnchorElem","queuePopoverAnchorElem","setQueuePopoverAnchorElem","isTimePopoverOpen","isQueuePopoverOpen","onEndTimeChange","shiftBy","deltaSec","prevState","Popover","anchorOrigin","vertical","horizontal","FormLabel","RadioGroup","TextField","persist","timeUsecOrNaN","isNaN","helperText","isEndTimeFixed","onDurationChange","s","test","Error","parseDuration","FormGroup","selectedQueues","removeQueue","addQueue","appBar","right","chartInfo","errorMessage","warningIcon","getMetricsAsync","ENDTIME_URL_PARAM_KEY","DURATION_URL_PARAM_KEY","query","endTimeStr","durationStr","setEndTimeSec","setDurationSec","setSelectedQueues","urlQuery","location","tasks_processed_per_second","ChartRow","description","tasks_failed_per_second","error_rate","queue_size","queue_latency_seconds","queue_memory_usage_approx_bytes","pending_tasks_by_queue","retry_tasks_by_queue","archived_tasks_by_queue","_g","_path","headingText","PageNotFoundView","_extends","assign","arguments","source","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogoColor","_ref","svgRef","titleId","viewBox","xmlns","ForwardRef","SvgLogoWhite","closeSnackbar","toggleDrawer","SlideUpTransition","Slide","snackbar","prefersDarkMode","useMediaQuery","createTheme","toolbar","toolbarIcon","mixins","drawer","menuButton","menuButtonHidden","drawerPaper","whiteSpace","transitions","create","easing","sharp","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","snackbarCloseIcon","appBarSpacer","mainContainer","contentWrapper","sidebarContainer","ThemeProvider","AppBar","Toolbar","edge","Drawer","Snackbar","isOpen","autoHideDuration","TransitionComponent","SnackbarContent","message","List","PROMETHEUS_SERVER_ADDRESS","queuesReducer","stats","archived_ids","deleted_ids","pending_ids","tasksReducer","canceled_ids","error_ids","snackbarReducer","isSameDate","ts1","ts2","date1","date2","getUTCDate","getUTCMonth","getUTCFullYear","LOCAL_STORAGE_KEY","rootReducer","combineReducers","newStats","info","raw_info","raw_cluster_nodes","queue_locations","preloadedState","serializedState","localStorage","getItem","savedState","settingsInitialState","err","log","loadState","store","configureStore","reducer","hostname","match","FLAG_ROOT_PATH","FLAG_PROMETHEUS_SERVER_ADDRESS","startsWith","FLAG_READ_ONLY","currentSettings","subscribe","getState","setItem","saveState","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0094b47e.chunk.js","sourcesContent":["export const paths = () => ({\n  HOME: `${window.ROOT_PATH}/`,\n  SETTINGS: `${window.ROOT_PATH}/settings`,\n  SERVERS: `${window.ROOT_PATH}/servers`,\n  SCHEDULERS: `${window.ROOT_PATH}/schedulers`,\n  QUEUE_DETAILS: `${window.ROOT_PATH}/queues/:qname`,\n  REDIS: `${window.ROOT_PATH}/redis`,\n  TASK_DETAILS: `${window.ROOT_PATH}/queues/:qname/tasks/:taskId`,\n  QUEUE_METRICS: `${window.ROOT_PATH}/q/metrics`,\n});\n\n/**************************************************************\n                        Path Helper functions\n **************************************************************/\n\nexport function queueDetailsPath(qname: string, taskStatus?: string): string {\n  const path = paths().QUEUE_DETAILS.replace(\":qname\", qname);\n  if (taskStatus) {\n    return `${path}?status=${taskStatus}`;\n  }\n  return path;\n}\n\nexport function taskDetailsPath(qname: string, taskId: string): string {\n  return paths()\n    .TASK_DETAILS.replace(\":qname\", qname)\n    .replace(\":taskId\", taskId);\n}\n\n/**************************************************************\n                        URL Params\n **************************************************************/\n\nexport interface QueueDetailsRouteParams {\n  qname: string;\n}\n\nexport interface TaskDetailsRouteParams {\n  qname: string;\n  taskId: string;\n}\n","import { ThemePreference } from \"../reducers/settingsReducer\";\nimport { DailyStatsKey } from \"../views/DashboardView\";\n// List of settings related action types.\nexport const POLL_INTERVAL_CHANGE = \"POLL_INTERVAL_CHANGE\";\nexport const THEME_PREFERENCE_CHANGE = \"THEME_PREFERENCE_CHANGE\";\nexport const TOGGLE_DRAWER = \"TOGGLE_DRAWER\";\nexport const TASK_ROWS_PER_PAGE_CHANGE = \"TASK_ROWS_PER_PAGE_CHANGE\";\nexport const DAILY_STATS_KEY_CHANGE = \"DAILY_STATS_KEY_CHANGE\";\n\ninterface PollIntervalChangeAction {\n  type: typeof POLL_INTERVAL_CHANGE;\n  value: number; // new poll interval value in seconds\n}\n\ninterface ThemePreferenceChangeAction {\n  type: typeof THEME_PREFERENCE_CHANGE;\n  value: ThemePreference;\n}\n\ninterface ToggleDrawerAction {\n  type: typeof TOGGLE_DRAWER;\n}\n\ninterface TaskRowsPerPageChange {\n  type: typeof TASK_ROWS_PER_PAGE_CHANGE;\n  value: number;\n}\n\ninterface DailyStatsKeyChange {\n  type: typeof DAILY_STATS_KEY_CHANGE;\n  value: DailyStatsKey;\n}\n\n// Union of all settings related action types.\nexport type SettingsActionTypes =\n  | PollIntervalChangeAction\n  | ThemePreferenceChangeAction\n  | ToggleDrawerAction\n  | TaskRowsPerPageChange\n  | DailyStatsKeyChange;\n\nexport function pollIntervalChange(value: number) {\n  return {\n    type: POLL_INTERVAL_CHANGE,\n    value,\n  };\n}\n\nexport function selectTheme(value: ThemePreference) {\n  return {\n    type: THEME_PREFERENCE_CHANGE,\n    value,\n  };\n}\n\nexport function toggleDrawer() {\n  return { type: TOGGLE_DRAWER };\n}\n\nexport function taskRowsPerPageChange(value: number) {\n  return {\n    type: TASK_ROWS_PER_PAGE_CHANGE,\n    value,\n  };\n}\n\nexport function dailyStatsKeyChange(value: DailyStatsKey) {\n  return {\n    type: DAILY_STATS_KEY_CHANGE,\n    value,\n  }\n}\n","import React from \"react\";\nimport {\n  useTheme,\n  makeStyles,\n  Theme,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5),\n    },\n  })\n);\n\ninterface TablePaginationActionsProps {\n  count: number;\n  page: number;\n  rowsPerPage: number;\n  onPageChange: (\n    event: React.MouseEvent<HTMLButtonElement>,\n    newPage: number\n  ) => void;\n}\n\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n\n  const handleFirstPageButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nexport default TablePaginationActions;\n\nexport const rowsPerPageOptions = [10, 20, 30, 60, 100];\nexport const defaultPageSize = 20;\n","import axios from \"axios\";\nimport queryString from \"query-string\";\n\n// In production build, API server is on listening on the same port as\n// the static file server.\n// In developement, we assume that the API server is listening on port 8080.\nconst getBaseUrl = () =>\n  process.env.NODE_ENV === \"production\"\n    ? `${window.ROOT_PATH}/api`\n    : `http://localhost:8080${window.ROOT_PATH}/api`;\n\nexport interface ListQueuesResponse {\n  queues: Queue[];\n}\n\nexport interface ListTasksResponse {\n  tasks: TaskInfo[];\n  stats: Queue;\n}\n\nexport interface ListServersResponse {\n  servers: ServerInfo[];\n}\n\nexport interface ListSchedulerEntriesResponse {\n  entries: SchedulerEntry[];\n}\n\nexport interface ListSchedulerEnqueueEventsResponse {\n  events: SchedulerEnqueueEvent[];\n}\n\nexport interface BatchCancelTasksResponse {\n  canceled_ids: string[];\n  error_ids: string[];\n}\n\nexport interface BatchDeleteTasksResponse {\n  deleted_ids: string[];\n  failed_ids: string[];\n}\n\nexport interface BatchRunTasksResponse {\n  pending_ids: string[];\n  error_ids: string[];\n}\n\nexport interface BatchArchiveTasksResponse {\n  archived_ids: string[];\n  error_ids: string[];\n}\n\nexport interface DeleteAllTasksResponse {\n  deleted: number;\n}\n\nexport interface ListQueueStatsResponse {\n  stats: { [qname: string]: DailyStat[] };\n}\n\nexport interface RedisInfoResponse {\n  address: string;\n  info: RedisInfo;\n  raw_info: string;\n  cluster: boolean;\n\n  // following fields are set only when cluster=true\n  raw_cluster_nodes: string;\n  queue_locations: QueueLocation[] | null;\n}\n\n// Describes location of a queue in cluster.\nexport interface QueueLocation {\n  queue: string; // queue name\n  keyslot: number; // cluster keyslot\n  nodes: string[]; // node addresses\n}\n\nexport interface MetricsResponse {\n  queue_size: PrometheusMetricsResponse;\n  queue_latency_seconds: PrometheusMetricsResponse;\n  queue_memory_usage_approx_bytes: PrometheusMetricsResponse;\n  tasks_processed_per_second: PrometheusMetricsResponse;\n  tasks_failed_per_second: PrometheusMetricsResponse;\n  error_rate: PrometheusMetricsResponse;\n  pending_tasks_by_queue: PrometheusMetricsResponse;\n  retry_tasks_by_queue: PrometheusMetricsResponse;\n  archived_tasks_by_queue: PrometheusMetricsResponse;\n}\n\nexport interface PrometheusMetricsResponse {\n  status: \"success\" | \"error\";\n  data?: MetricsResult; // present if status === \"success\"\n  error?: string; // present if status === \"error\"\n  errorType?: string; // present if status === \"error\"\n}\n\nexport interface MetricsResult {\n  resultType: string;\n  result: Metrics[];\n}\n\nexport interface Metrics {\n  metric: MetricsInfo;\n  values: [number, string][]; // [unixtime, value]\n}\n\nexport interface MetricsInfo {\n  __name__: string;\n  instance: string;\n  job: string;\n\n  // labels (may or may not be present depending on metrics)\n  queue?: string;\n  state?: string;\n}\n\n// Return value from redis INFO command.\n// See https://redis.io/commands/info#return-value.\nexport interface RedisInfo {\n  active_defrag_hits: string;\n  active_defrag_key_hits: string;\n  active_defrag_key_misses: string;\n  active_defrag_misses: string;\n  active_defrag_running: string;\n  allocator_active: string;\n  allocator_allocated: string;\n  allocator_frag_bytes: string;\n  allocator_frag_ratio: string;\n  allocator_resident: string;\n  allocator_rss_bytes: string;\n  allocator_rss_ratio: string;\n  aof_current_rewrite_time_sec: string;\n  aof_enabled: string;\n  aof_last_bgrewrite_status: string;\n  aof_last_cow_size: string;\n  aof_last_rewrite_time_sec: string;\n  aof_last_write_status: string;\n  aof_rewrite_in_progress: string;\n  aof_rewrite_scheduled: string;\n  arch_bits: string;\n  atomicvar_api: string;\n  blocked_clients: string;\n  client_recent_max_input_buffer: string;\n  client_recent_max_output_buffer: string;\n  clients_in_timeout_table: string;\n  cluster_enabled: string;\n  config_file: string;\n  configured_hz: string;\n  connected_clients: string;\n  connected_slaves: string;\n  evicted_keys: string;\n  executable: string;\n  expire_cycle_cpu_milliseconds: string;\n  expired_keys: string;\n  expired_stale_perc: string;\n  expired_time_cap_reached_count: string;\n  gcc_version: string;\n  hz: string;\n  instantaneous_input_kbps: string;\n  instantaneous_ops_per_sec: string;\n  instantaneous_output_kbps: string;\n  keyspace_hits: string;\n  keyspace_misses: string;\n  latest_fork_usec: string;\n  lazyfree_pending_objects: string;\n  loading: string;\n  lru_clock: string;\n  master_repl_offset: string;\n  master_replid: string;\n  master_replid2: string;\n  maxmemory: string;\n  maxmemory_human: string;\n  maxmemory_policy: string;\n  mem_allocator: string;\n  mem_aof_buffer: string;\n  mem_clients_normal: string;\n  mem_clients_slaves: string;\n  mem_fragmentation_bytes: string;\n  mem_fragmentation_ratio: string;\n  mem_not_counted_for_evict: string;\n  mem_replication_backlog: string;\n  migrate_cached_sockets: string;\n  module_fork_in_progress: string;\n  module_fork_last_cow_size: string;\n  multiplexing_api: string;\n  number_of_cached_scripts: string;\n  os: string;\n  process_id: string;\n  pubsub_channels: string;\n  pubsub_patterns: string;\n  rdb_bgsave_in_progress: string;\n  rdb_changes_since_last_save: string;\n  rdb_current_bgsave_time_sec: string;\n  rdb_last_bgsave_status: string;\n  rdb_last_bgsave_time_sec: string;\n  rdb_last_cow_size: string;\n  rdb_last_save_time: string;\n  redis_build_id: string;\n  redis_git_dirty: string;\n  redis_git_sha1: string;\n  redis_mode: string;\n  redis_version: string;\n  rejected_connections: string;\n  repl_backlog_active: string;\n  repl_backlog_first_byte_offset: string;\n  repl_backlog_histlen: string;\n  repl_backlog_size: string;\n  role: string;\n  rss_overhead_bytes: string;\n  rss_overhead_ratio: string;\n  run_id: string;\n  second_repl_offset: string;\n  slave_expires_tracked_keys: string;\n  sync_full: string;\n  sync_partial_err: string;\n  sync_partial_ok: string;\n  tcp_port: string;\n  total_commands_processed: string;\n  total_connections_received: string;\n  total_net_input_bytes: string;\n  total_net_output_bytes: string;\n  total_system_memory: string;\n  total_system_memory_human: string;\n  tracking_clients: string;\n  tracking_total_items: string;\n  tracking_total_keys: string;\n  tracking_total_prefixes: string;\n  unexpected_error_replies: string;\n  uptime_in_days: string;\n  uptime_in_seconds: string;\n  used_cpu_sys: string;\n  used_cpu_sys_children: string;\n  used_cpu_user: string;\n  used_cpu_user_children: string;\n  used_memory: string;\n  used_memory_dataset: string;\n  used_memory_dataset_perc: string;\n  used_memory_human: string;\n  used_memory_lua: string;\n  used_memory_lua_human: string;\n  used_memory_overhead: string;\n  used_memory_peak: string;\n  used_memory_peak_human: string;\n  used_memory_peak_perc: string;\n  used_memory_rss: string;\n  used_memory_rss_human: string;\n  used_memory_scripts: string;\n  used_memory_scripts_human: string;\n  used_memory_startup: string;\n}\n\nexport interface Queue {\n  queue: string;\n  paused: boolean;\n  size: number;\n  latency_msec: number;\n  display_latency: string;\n  memory_usage_bytes: number;\n  active: number;\n  pending: number;\n  scheduled: number;\n  retry: number;\n  archived: number;\n  completed: number;\n  processed: number;\n  failed: number;\n  timestamp: string;\n}\n\nexport interface DailyStat {\n  queue: string;\n  date: string;\n  processed: number;\n  failed: number;\n}\n\nexport interface TaskInfo {\n  id: string;\n  queue: string;\n  type: string;\n  payload: string;\n  state: string;\n  start_time: string; // Only applies to task.state == 'active'\n  max_retry: number;\n  retried: number;\n  last_failed_at: string;\n  error_message: string;\n  next_process_at: string;\n  timeout_seconds: number;\n  deadline: string;\n  completed_at: string;\n  result: string;\n  ttl_seconds: number;\n  is_orphaned: boolean; // Only applies to task.state == 'active'\n}\n\nexport interface ServerInfo {\n  id: string;\n  host: string;\n  pid: number;\n  concurrency: number;\n  queue_priorities: { [qname: string]: number };\n  strict_priority_enabled: boolean;\n  start_time: string;\n  status: string;\n  active_workers: WorkerInfo[];\n}\n\nexport interface WorkerInfo {\n  task_id: string;\n  queue: string;\n  task_type: string;\n  task_payload: string;\n  start_time: string;\n}\n\nexport interface SchedulerEntry {\n  id: string;\n  spec: string;\n  task_type: string;\n  task_payload: string;\n  options: string[];\n  next_enqueue_at: string;\n  // prev_enqueue_at will be omitted\n  // if there were no previous enqueue events.\n  prev_enqueue_at?: string;\n}\n\nexport interface SchedulerEnqueueEvent {\n  task_id: string;\n  enqueued_at: string;\n}\n\nexport interface PaginationOptions extends Record<string, number | undefined> {\n  size?: number; // size of the page\n  page?: number; // page number (1 being the first page)\n}\n\nexport async function listQueues(): Promise<ListQueuesResponse> {\n  const resp = await axios({\n    method: \"get\",\n    url: `${getBaseUrl()}/queues`,\n  });\n  return resp.data;\n}\n\nexport async function deleteQueue(qname: string): Promise<void> {\n  await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}`,\n  });\n}\n\nexport async function pauseQueue(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}:pause`,\n  });\n}\n\nexport async function resumeQueue(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}:resume`,\n  });\n}\n\nexport async function listQueueStats(): Promise<ListQueueStatsResponse> {\n  const resp = await axios({\n    method: \"get\",\n    url: `${getBaseUrl()}/queue_stats`,\n  });\n  return resp.data;\n}\n\nexport async function getTaskInfo(\n  qname: string,\n  id: string\n): Promise<TaskInfo> {\n  const url = `${getBaseUrl()}/queues/${qname}/tasks/${id}`;\n  const resp = await axios({\n    method: \"get\",\n    url,\n  });\n  return resp.data;\n}\n\nexport async function listActiveTasks(\n  qname: string,\n  pageOpts?: PaginationOptions\n): Promise<ListTasksResponse> {\n  let url = `${getBaseUrl()}/queues/${qname}/active_tasks`;\n  if (pageOpts) {\n    url += `?${queryString.stringify(pageOpts)}`;\n  }\n  const resp = await axios({\n    method: \"get\",\n    url,\n  });\n  return resp.data;\n}\n\nexport async function cancelActiveTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/active_tasks/${taskId}:cancel`,\n  });\n}\n\nexport async function cancelAllActiveTasks(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/active_tasks:cancel_all`,\n  });\n}\n\nexport async function batchCancelActiveTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchCancelTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/active_tasks:batch_cancel`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function listPendingTasks(\n  qname: string,\n  pageOpts?: PaginationOptions\n): Promise<ListTasksResponse> {\n  let url = `${getBaseUrl()}/queues/${qname}/pending_tasks`;\n  if (pageOpts) {\n    url += `?${queryString.stringify(pageOpts)}`;\n  }\n  const resp = await axios({\n    method: \"get\",\n    url,\n  });\n  return resp.data;\n}\n\nexport async function listScheduledTasks(\n  qname: string,\n  pageOpts?: PaginationOptions\n): Promise<ListTasksResponse> {\n  let url = `${getBaseUrl()}/queues/${qname}/scheduled_tasks`;\n  if (pageOpts) {\n    url += `?${queryString.stringify(pageOpts)}`;\n  }\n  const resp = await axios({\n    method: \"get\",\n    url,\n  });\n  return resp.data;\n}\n\nexport async function listRetryTasks(\n  qname: string,\n  pageOpts?: PaginationOptions\n): Promise<ListTasksResponse> {\n  let url = `${getBaseUrl()}/queues/${qname}/retry_tasks`;\n  if (pageOpts) {\n    url += `?${queryString.stringify(pageOpts)}`;\n  }\n  const resp = await axios({\n    method: \"get\",\n    url,\n  });\n  return resp.data;\n}\n\nexport async function listArchivedTasks(\n  qname: string,\n  pageOpts?: PaginationOptions\n): Promise<ListTasksResponse> {\n  let url = `${getBaseUrl()}/queues/${qname}/archived_tasks`;\n  if (pageOpts) {\n    url += `?${queryString.stringify(pageOpts)}`;\n  }\n  const resp = await axios({\n    method: \"get\",\n    url,\n  });\n  return resp.data;\n}\n\nexport async function listCompletedTasks(\n  qname: string,\n  pageOpts?: PaginationOptions\n): Promise<ListTasksResponse> {\n  let url = `${getBaseUrl()}/queues/${qname}/completed_tasks`;\n  if (pageOpts) {\n    url += `?${queryString.stringify(pageOpts)}`;\n  }\n  const resp = await axios({\n    method: \"get\",\n    url,\n  });\n  return resp.data;\n}\n\nexport async function archivePendingTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/pending_tasks/${taskId}:archive`,\n  });\n}\n\nexport async function batchArchivePendingTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchArchiveTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/pending_tasks:batch_archive`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function archiveAllPendingTasks(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/pending_tasks:archive_all`,\n  });\n}\n\nexport async function deletePendingTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/pending_tasks/${taskId}`,\n  });\n}\n\nexport async function batchDeletePendingTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchDeleteTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/pending_tasks:batch_delete`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function deleteAllPendingTasks(\n  qname: string\n): Promise<DeleteAllTasksResponse> {\n  const resp = await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/pending_tasks:delete_all`,\n  });\n  return resp.data;\n}\n\nexport async function runScheduledTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks/${taskId}:run`,\n  });\n}\n\nexport async function archiveScheduledTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks/${taskId}:archive`,\n  });\n}\n\nexport async function deleteScheduledTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks/${taskId}`,\n  });\n}\n\nexport async function batchDeleteScheduledTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchDeleteTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks:batch_delete`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function deleteAllScheduledTasks(\n  qname: string\n): Promise<DeleteAllTasksResponse> {\n  const resp = await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks:delete_all`,\n  });\n  return resp.data;\n}\n\nexport async function batchRunScheduledTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchRunTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks:batch_run`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function runAllScheduledTasks(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks:run_all`,\n  });\n}\n\nexport async function batchArchiveScheduledTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchArchiveTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks:batch_archive`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function archiveAllScheduledTasks(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks:archive_all`,\n  });\n}\n\nexport async function runRetryTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks/${taskId}:run`,\n  });\n}\n\nexport async function archiveRetryTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks/${taskId}:archive`,\n  });\n}\n\nexport async function deleteRetryTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks/${taskId}`,\n  });\n}\n\nexport async function batchDeleteRetryTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchDeleteTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks:batch_delete`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function deleteAllRetryTasks(\n  qname: string\n): Promise<DeleteAllTasksResponse> {\n  const resp = await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks:delete_all`,\n  });\n  return resp.data;\n}\n\nexport async function batchRunRetryTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchRunTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks:batch_run`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function runAllRetryTasks(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks:run_all`,\n  });\n}\n\nexport async function batchArchiveRetryTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchArchiveTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks:batch_archive`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function archiveAllRetryTasks(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks:archive_all`,\n  });\n}\n\nexport async function runArchivedTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/archived_tasks/${taskId}:run`,\n  });\n}\n\nexport async function deleteArchivedTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/archived_tasks/${taskId}`,\n  });\n}\n\nexport async function batchDeleteArchivedTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchDeleteTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/archived_tasks:batch_delete`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function deleteAllArchivedTasks(\n  qname: string\n): Promise<DeleteAllTasksResponse> {\n  const resp = await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/archived_tasks:delete_all`,\n  });\n  return resp.data;\n}\n\nexport async function batchRunArchivedTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchRunTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/archived_tasks:batch_run`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function runAllArchivedTasks(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/archived_tasks:run_all`,\n  });\n}\n\nexport async function deleteCompletedTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/completed_tasks/${taskId}`,\n  });\n}\n\nexport async function batchDeleteCompletedTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchDeleteTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/completed_tasks:batch_delete`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function deleteAllCompletedTasks(\n  qname: string\n): Promise<DeleteAllTasksResponse> {\n  const resp = await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/completed_tasks:delete_all`,\n  });\n  return resp.data;\n}\n\nexport async function listServers(): Promise<ListServersResponse> {\n  const resp = await axios({\n    method: \"get\",\n    url: `${getBaseUrl()}/servers`,\n  });\n  return resp.data;\n}\n\nexport async function listSchedulerEntries(): Promise<ListSchedulerEntriesResponse> {\n  const resp = await axios({\n    method: \"get\",\n    url: `${getBaseUrl()}/scheduler_entries`,\n  });\n  return resp.data;\n}\n\nexport async function listSchedulerEnqueueEvents(\n  entryId: string\n): Promise<ListSchedulerEnqueueEventsResponse> {\n  const resp = await axios({\n    method: \"get\",\n    url: `${getBaseUrl()}/scheduler_entries/${entryId}/enqueue_events`,\n  });\n  return resp.data;\n}\n\nexport async function getRedisInfo(): Promise<RedisInfoResponse> {\n  const resp = await axios({\n    method: \"get\",\n    url: `${getBaseUrl()}/redis_info`,\n  });\n  return resp.data;\n}\n\ninterface MetricsEndpointParams {\n  endtime: number;\n  duration: number;\n  queues?: string; // comma-separated list of queues\n}\n\nexport async function getMetrics(\n  endTime: number,\n  duration: number,\n  queues: string[]\n): Promise<MetricsResponse> {\n  let params: MetricsEndpointParams = {\n    endtime: endTime,\n    duration: duration,\n  };\n  if (queues && queues.length > 0) {\n    params.queues = queues.join(\",\");\n  }\n  const resp = await axios({\n    method: \"get\",\n    url: `${getBaseUrl()}/metrics?${queryString.stringify(params)}`,\n  });\n  return resp.data;\n}\n","import { AxiosError } from \"axios\";\n\n// toErrorStringWithHttpStatus returns a string representaion of axios error with HTTP status.\nexport function toErrorStringWithHttpStatus(error: AxiosError<string>): string {\n  const { response } = error;\n  if (!response) {\n    return \"error: no error response data available\";\n  }\n  return `${response.status} (${response.statusText}): ${response.data}`;\n}\n\n// toErrorString returns a string representaion of axios error.\nexport function toErrorString(error: AxiosError<string>): string {\n  const { response } = error;\n  if (!response) {\n    return \"Unknown error occurred. See the logs for details.\";\n  }\n  return response.data;\n}\n\ninterface Duration {\n  hour: number;\n  minute: number;\n  second: number;\n  totalSeconds: number;\n}\n\n// Returns a duration from the number of seconds provided.\nexport function durationFromSeconds(totalSeconds: number): Duration {\n  const hour = Math.floor(totalSeconds / 3600);\n  const minute = Math.floor((totalSeconds - 3600 * hour) / 60);\n  const second = totalSeconds - 3600 * hour - 60 * minute;\n  return { hour, minute, second, totalSeconds };\n}\n\n// start and end are in milliseconds.\nfunction durationBetween(start: number, end: number): Duration {\n  const durationInMillisec = start - end;\n  const totalSeconds = Math.floor(durationInMillisec / 1000);\n  return durationFromSeconds(totalSeconds);\n}\n\nexport function stringifyDuration(d: Duration): string {\n  if (d.hour > 24) {\n    const n = Math.floor(d.hour / 24);\n    return n + (n === 1 ? \" day\" : \" days\");\n  }\n  return (\n    (d.hour !== 0 ? `${d.hour}h` : \"\") +\n    (d.minute !== 0 ? `${d.minute}m` : \"\") +\n    `${d.second}s`\n  );\n}\n\nexport function durationBefore(timestamp: string): string {\n  try {\n    const duration = durationBetween(Date.parse(timestamp), Date.now());\n    if (duration.totalSeconds < 1) {\n      return \"now\";\n    }\n    return \"in \" + stringifyDuration(duration);\n  } catch {\n    return \"-\";\n  }\n}\n\nconst zeroTimestamp = \"0001-01-01T00:00:00Z\";\nexport function timeAgo(timestamp: string): string {\n  if (timestamp === zeroTimestamp) {\n    return \"-\";\n  }\n  try {\n    return timeAgoUnix(Date.parse(timestamp) / 1000);\n  } catch (error) {\n    console.error(\"Could not parse timestamp: \", timestamp, error);\n    return \"-\";\n  }\n}\n\nexport function timeAgoUnix(unixtime: number): string {\n  if (unixtime === 0) {\n    return \"\";\n  }\n  const duration = durationBetween(Date.now(), unixtime * 1000);\n  return stringifyDuration(duration) + \" ago\";\n}\n\nexport function getCurrentUTCDate(): string {\n  const today = new Date();\n  const dd = today.getUTCDate().toString().padStart(2, \"0\");\n  const mm = (today.getMonth() + 1).toString().padStart(2, \"0\");\n  const yyyy = today.getFullYear();\n  return `${yyyy}-${mm}-${dd}`;\n}\n\nexport function uuidPrefix(uuid: string): string {\n  const idx = uuid.indexOf(\"-\");\n  if (idx === -1) {\n    return uuid;\n  }\n  return uuid.substr(0, idx);\n}\n\nexport function percentage(numerator: number, denominator: number): string {\n  if (denominator === 0) return \"0.00%\";\n  const perc = ((numerator / denominator) * 100).toFixed(2);\n  return `${perc} %`;\n}\n\nexport function isJsonPayload(p: string) {\n  try {\n    JSON.parse(p);\n  } catch (error) {\n    return false;\n  }\n  return true;\n}\n\nexport function prettifyPayload(p: string) {\n  if (isJsonPayload(p)) {\n    return JSON.stringify(JSON.parse(p), null, 2);\n  }\n  return p;\n}\n\n// Returns the number of seconds elapsed since January 1, 1970 00:00:00 UTC.\nexport function currentUnixtime(): number {\n  return Math.floor(Date.now() / 1000);\n}\n\nconst durationRegex = /([0-9]*(\\.[0-9]*)?)[s|m|h]/;\n// Parses the given string and returns the number of seconds if the input is valid.\n// Otherwise, it throws an error\n// Supported time units are \"s\", \"m\", \"h\"\nexport function parseDuration(s: string): number {\n  if (!durationRegex.test(s)) {\n    throw new Error(\"invalid duration\");\n  }\n  const val = parseFloat(s.slice(0, -1));\n  switch (s.slice(-1)) {\n    case \"s\":\n      return val;\n    case \"m\":\n      return val * 60;\n    case \"h\":\n      return val * 60 * 60;\n    default:\n      throw new Error(\"invalid duration unit\");\n  }\n}\n","import { Dispatch } from \"redux\";\nimport {\n  deleteQueue,\n  listQueues,\n  ListQueuesResponse,\n  pauseQueue,\n  resumeQueue,\n} from \"../api\";\nimport { toErrorString, toErrorStringWithHttpStatus } from \"../utils\";\n\n// List of queue related action types.\nexport const LIST_QUEUES_BEGIN = \"LIST_QUEUES_BEGIN\";\nexport const LIST_QUEUES_SUCCESS = \"LIST_QUEUES_SUCCESS\";\nexport const LIST_QUEUES_ERROR = \"LIST_QUEUES_ERROR\";\nexport const DELETE_QUEUE_BEGIN = \"DELETE_QUEUE_BEGIN\";\nexport const DELETE_QUEUE_SUCCESS = \"DELETE_QUEUE_SUCCESS\";\nexport const DELETE_QUEUE_ERROR = \"DELETE_QUEUE_ERROR\";\nexport const PAUSE_QUEUE_BEGIN = \"PAUSE_QUEUE_BEGIN\";\nexport const PAUSE_QUEUE_SUCCESS = \"PAUSE_QUEUE_SUCCESS\";\nexport const PAUSE_QUEUE_ERROR = \"PAUSE_QUEUE_ERROR\";\nexport const RESUME_QUEUE_BEGIN = \"RESUME_QUEUE_BEGIN\";\nexport const RESUME_QUEUE_SUCCESS = \"RESUME_QUEUE_SUCCESS\";\nexport const RESUME_QUEUE_ERROR = \"RESUME_QUEUE_ERROR\";\n\ninterface ListQueuesBeginAction {\n  type: typeof LIST_QUEUES_BEGIN;\n}\n\ninterface ListQueuesSuccessAction {\n  type: typeof LIST_QUEUES_SUCCESS;\n  payload: ListQueuesResponse;\n}\n\ninterface ListQueuesErrorAction {\n  type: typeof LIST_QUEUES_ERROR;\n  error: string;\n}\n\ninterface DeleteQueueBeginAction {\n  type: typeof DELETE_QUEUE_BEGIN;\n  queue: string; // name of the queue\n}\n\ninterface DeleteQueueSuccessAction {\n  type: typeof DELETE_QUEUE_SUCCESS;\n  queue: string; // name of the queue\n}\n\ninterface DeleteQueueErrorAction {\n  type: typeof DELETE_QUEUE_ERROR;\n  queue: string; // name of the queue\n  error: string; // error description\n}\n\ninterface PauseQueueBeginAction {\n  type: typeof PAUSE_QUEUE_BEGIN;\n  queue: string; // name of the queue\n}\n\ninterface PauseQueueSuccessAction {\n  type: typeof PAUSE_QUEUE_SUCCESS;\n  queue: string; // name of the queue\n}\n\ninterface PauseQueueErrorAction {\n  type: typeof PAUSE_QUEUE_ERROR;\n  queue: string; // name of the queue\n  error: string; // error description\n}\n\ninterface ResumeQueueBeginAction {\n  type: typeof RESUME_QUEUE_BEGIN;\n  queue: string; // name of the queue\n}\n\ninterface ResumeQueueSuccessAction {\n  type: typeof RESUME_QUEUE_SUCCESS;\n  queue: string; // name of the queue\n}\n\ninterface ResumeQueueErrorAction {\n  type: typeof RESUME_QUEUE_ERROR;\n  queue: string; // name of the queue\n  error: string; // error description\n}\n\n// Union of all queues related action types.\nexport type QueuesActionTypes =\n  | ListQueuesBeginAction\n  | ListQueuesSuccessAction\n  | ListQueuesErrorAction\n  | DeleteQueueBeginAction\n  | DeleteQueueSuccessAction\n  | DeleteQueueErrorAction\n  | PauseQueueBeginAction\n  | PauseQueueSuccessAction\n  | PauseQueueErrorAction\n  | ResumeQueueBeginAction\n  | ResumeQueueSuccessAction\n  | ResumeQueueErrorAction;\n\nexport function listQueuesAsync() {\n  return async (dispatch: Dispatch<QueuesActionTypes>) => {\n    dispatch({ type: LIST_QUEUES_BEGIN });\n    try {\n      const response = await listQueues();\n      dispatch({\n        type: LIST_QUEUES_SUCCESS,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(`listQueuesAsync: ${toErrorStringWithHttpStatus(error)}`);\n      dispatch({\n        type: LIST_QUEUES_ERROR,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function deleteQueueAsync(qname: string) {\n  return async (dispatch: Dispatch<QueuesActionTypes>) => {\n    dispatch({\n      type: DELETE_QUEUE_BEGIN,\n      queue: qname,\n    });\n    try {\n      await deleteQueue(qname);\n      // FIXME: this action doesn't get dispatched when server stalls\n      dispatch({\n        type: DELETE_QUEUE_SUCCESS,\n        queue: qname,\n      });\n    } catch (error) {\n      console.error(error);\n      dispatch({\n        type: DELETE_QUEUE_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function pauseQueueAsync(qname: string) {\n  return async (dispatch: Dispatch<QueuesActionTypes>) => {\n    dispatch({ type: PAUSE_QUEUE_BEGIN, queue: qname });\n    try {\n      await pauseQueue(qname);\n      dispatch({ type: PAUSE_QUEUE_SUCCESS, queue: qname });\n    } catch (error) {\n      console.error(\"pauseQueueAsynq: \", toErrorStringWithHttpStatus(error));\n      dispatch({\n        type: PAUSE_QUEUE_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function resumeQueueAsync(qname: string) {\n  return async (dispatch: Dispatch<QueuesActionTypes>) => {\n    dispatch({ type: RESUME_QUEUE_BEGIN, queue: qname });\n    try {\n      await resumeQueue(qname);\n      dispatch({ type: RESUME_QUEUE_SUCCESS, queue: qname });\n    } catch (error) {\n      console.error(\"resumeQueueAsync: \", toErrorStringWithHttpStatus(error));\n      dispatch({\n        type: RESUME_QUEUE_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n","import { Dispatch } from \"redux\";\nimport { listQueueStats, ListQueueStatsResponse } from \"../api\";\nimport { toErrorString, toErrorStringWithHttpStatus } from \"../utils\";\n\nexport const LIST_QUEUE_STATS_BEGIN = \"LIST_QUEUE_STATS_BEGIN\";\nexport const LIST_QUEUE_STATS_SUCCESS = \"LIST_QUEUE_STATS_SUCCESS\";\nexport const LIST_QUEUE_STATS_ERROR = \"LIST_QUEUE_STATS_ERROR\";\n\ninterface ListQueueStatsBeginAction {\n  type: typeof LIST_QUEUE_STATS_BEGIN;\n}\n\ninterface ListQueueStatsSuccessAction {\n  type: typeof LIST_QUEUE_STATS_SUCCESS;\n  payload: ListQueueStatsResponse;\n}\n\ninterface ListQueueStatsErrorAction {\n  type: typeof LIST_QUEUE_STATS_ERROR;\n  error: string;\n}\n\n// Union of all queue stats related action types.\nexport type QueueStatsActionTypes =\n  | ListQueueStatsBeginAction\n  | ListQueueStatsSuccessAction\n  | ListQueueStatsErrorAction;\n\nexport function listQueueStatsAsync() {\n  return async (dispatch: Dispatch<QueueStatsActionTypes>) => {\n    dispatch({ type: LIST_QUEUE_STATS_BEGIN });\n    try {\n      const response = await listQueueStats();\n      dispatch({\n        type: LIST_QUEUE_STATS_SUCCESS,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"listQueueStatsAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_QUEUE_STATS_ERROR,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n","import React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { queueDetailsPath } from \"../paths\";\n\ninterface Props {\n  data: TaskBreakdown[];\n}\n\ninterface TaskBreakdown {\n  queue: string; // name of the queue.\n  active: number; // number of active tasks in the queue.\n  pending: number; // number of pending tasks in the queue.\n  scheduled: number; // number of scheduled tasks in the queue.\n  retry: number; // number of retry tasks in the queue.\n  archived: number; // number of archived tasks in the queue.\n  completed: number; // number of completed tasks in the queue.\n}\n\nfunction QueueSizeChart(props: Props) {\n  const theme = useTheme();\n  const handleClick = (params: { activeLabel?: string } | null) => {\n    const allQueues = props.data.map((b) => b.queue);\n    if (\n      params &&\n      params.activeLabel &&\n      allQueues.includes(params.activeLabel)\n    ) {\n      history.push(queueDetailsPath(params.activeLabel));\n    }\n  };\n  const history = useHistory();\n  return (\n    <ResponsiveContainer>\n      <BarChart\n        data={props.data}\n        maxBarSize={120}\n        onClick={handleClick}\n        style={{ cursor: \"pointer\" }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"queue\" stroke={theme.palette.text.secondary} />\n        <YAxis stroke={theme.palette.text.secondary} />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"active\" stackId=\"a\" fill=\"#1967d2\" />\n        <Bar dataKey=\"pending\" stackId=\"a\" fill=\"#669df6\" />\n        <Bar dataKey=\"scheduled\" stackId=\"a\" fill=\"#fdd663\" />\n        <Bar dataKey=\"retry\" stackId=\"a\" fill=\"#f666a9\" />\n        <Bar dataKey=\"archived\" stackId=\"a\" fill=\"#ac4776\" />\n        <Bar dataKey=\"completed\" stackId=\"a\" fill=\"#4bb543\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default QueueSizeChart;\n","import React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { useTheme, Theme } from \"@material-ui/core/styles\";\n\ninterface Props {\n  data: ProcessedStats[];\n}\n\ninterface ProcessedStats {\n  queue: string; // name of the queue.\n  succeeded: number; // number of tasks succeeded.\n  failed: number; // number of tasks failed.\n}\n\nfunction ProcessedTasksChart(props: Props) {\n  const theme = useTheme<Theme>();\n  return (\n    <ResponsiveContainer>\n      <BarChart data={props.data} maxBarSize={120}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"queue\" stroke={theme.palette.text.secondary} />\n        <YAxis stroke={theme.palette.text.secondary} />\n        <Tooltip />\n        <Legend />\n        <Bar\n          dataKey=\"succeeded\"\n          stackId=\"a\"\n          fill={theme.palette.success.light}\n        />\n        <Bar dataKey=\"failed\" stackId=\"a\" fill={theme.palette.error.light} />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default ProcessedTasksChart;\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Queue } from \"../api\";\nimport { AppState } from \"../store\";\nimport { deleteQueueAsync } from \"../actions/queuesActions\";\n\ninterface Props {\n  queue: Queue | null; // queue to delete\n  onClose: () => void;\n}\n\nfunction mapStateToProps(state: AppState, ownProps: Props) {\n  let requestPending = false;\n  if (ownProps.queue !== null) {\n    const q = state.queues.data.find((q) => q.name === ownProps.queue?.queue);\n    if (q !== undefined) {\n      requestPending = q.requestPending;\n    }\n  }\n  return {\n    requestPending,\n  };\n}\n\nconst connector = connect(mapStateToProps, { deleteQueueAsync });\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\nfunction DeleteQueueConfirmationDialog(props: Props & ReduxProps) {\n  const handleDeleteClick = () => {\n    if (!props.queue) {\n      return;\n    }\n    props.deleteQueueAsync(props.queue.queue);\n    props.onClose();\n  };\n  return (\n    <Dialog\n      open={props.queue !== null}\n      onClose={props.onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      {props.queue !== null &&\n        (props.queue.size > 0 ? (\n          <>\n            <DialogTitle id=\"alert-dialog-title\">\n              Queue is not empty\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                You are trying to delete a non-emtpy queue \"{props.queue.queue}\n                \". Please empty the queue first before deleting.\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={props.onClose} color=\"primary\">\n                OK\n              </Button>\n            </DialogActions>\n          </>\n        ) : (\n          <>\n            <DialogTitle id=\"alert-dialog-title\">\n              Are you sure you want to delete \"{props.queue.queue}\"?\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                You can't undo this action.\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={props.onClose}\n                disabled={props.requestPending}\n                color=\"primary\"\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={handleDeleteClick}\n                disabled={props.requestPending}\n                color=\"primary\"\n                autoFocus\n              >\n                Delete\n              </Button>\n            </DialogActions>\n          </>\n        ))}\n    </Dialog>\n  );\n}\n\nexport default connector(DeleteQueueConfirmationDialog);\n","// SortDirection describes the direction of sort.\nexport enum SortDirection {\n  Asc = \"asc\",\n  Desc = \"desc\",\n}\n\n// TableColumn is a config for a table column.\nexport interface TableColumn {\n  key: string;\n  label: string;\n  align: \"left\" | \"right\" | \"center\";\n}\n\n// SortableTableColumn is a config for a table column\n// for table with sorting support.\n//\n// T is the enum of sort keys.\nexport interface SortableTableColumn<T> extends TableColumn {\n  sortBy: T;\n}\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport DeleteQueueConfirmationDialog from \"./DeleteQueueConfirmationDialog\";\nimport { Queue } from \"../api\";\nimport { queueDetailsPath } from \"../paths\";\nimport { SortDirection, SortableTableColumn } from \"../types/table\";\nimport prettyBytes from \"pretty-bytes\";\nimport { percentage } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  fixedCell: {\n    position: \"sticky\",\n    zIndex: 1,\n    left: 0,\n    background: theme.palette.background.paper,\n  },\n}));\n\ninterface QueueWithMetadata extends Queue {\n  requestPending: boolean; // indicates pause/resume/delete request is pending for the queue.\n}\n\ninterface Props {\n  queues: QueueWithMetadata[];\n  onPauseClick: (qname: string) => Promise<void>;\n  onResumeClick: (qname: string) => Promise<void>;\n  onDeleteClick: (qname: string) => Promise<void>;\n}\n\nenum SortBy {\n  Queue,\n  State,\n  Size,\n  MemoryUsage,\n  Latency,\n  Processed,\n  Failed,\n  ErrorRate,\n\n  None, // no sort support\n}\n\nconst colConfigs: SortableTableColumn<SortBy>[] = [\n  { label: \"Queue\", key: \"queue\", sortBy: SortBy.Queue, align: \"left\" },\n  { label: \"State\", key: \"state\", sortBy: SortBy.State, align: \"left\" },\n  {\n    label: \"Size\",\n    key: \"size\",\n    sortBy: SortBy.Size,\n    align: \"right\",\n  },\n  {\n    label: \"Memory usage\",\n    key: \"memory_usage\",\n    sortBy: SortBy.MemoryUsage,\n    align: \"right\",\n  },\n  {\n    label: \"Latency\",\n    key: \"latency\",\n    sortBy: SortBy.Latency,\n    align: \"right\",\n  },\n  {\n    label: \"Processed\",\n    key: \"processed\",\n    sortBy: SortBy.Processed,\n    align: \"right\",\n  },\n  { label: \"Failed\", key: \"failed\", sortBy: SortBy.Failed, align: \"right\" },\n  {\n    label: \"Error rate\",\n    key: \"error_rate\",\n    sortBy: SortBy.ErrorRate,\n    align: \"right\",\n  },\n  { label: \"Actions\", key: \"actions\", sortBy: SortBy.None, align: \"center\" },\n];\n\n// sortQueues takes a array of queues and return a sorted array.\n// It returns a new array and leave the original array untouched.\nfunction sortQueues(\n  queues: QueueWithMetadata[],\n  cmpFn: (first: QueueWithMetadata, second: QueueWithMetadata) => number\n): QueueWithMetadata[] {\n  let copy = [...queues];\n  copy.sort(cmpFn);\n  return copy;\n}\n\nexport default function QueuesOverviewTable(props: Props) {\n  const classes = useStyles();\n  const [sortBy, setSortBy] = useState<SortBy>(SortBy.Queue);\n  const [sortDir, setSortDir] = useState<SortDirection>(SortDirection.Asc);\n  const [queueToDelete, setQueueToDelete] = useState<QueueWithMetadata | null>(\n    null\n  );\n  const createSortClickHandler = (sortKey: SortBy) => (e: React.MouseEvent) => {\n    if (sortKey === sortBy) {\n      // Toggle sort direction.\n      const nextSortDir =\n        sortDir === SortDirection.Asc ? SortDirection.Desc : SortDirection.Asc;\n      setSortDir(nextSortDir);\n    } else {\n      // Change the sort key.\n      setSortBy(sortKey);\n    }\n  };\n\n  const cmpFunc = (q1: QueueWithMetadata, q2: QueueWithMetadata): number => {\n    let isQ1Smaller: boolean;\n    switch (sortBy) {\n      case SortBy.Queue:\n        if (q1.queue === q2.queue) return 0;\n        isQ1Smaller = q1.queue < q2.queue;\n        break;\n      case SortBy.State:\n        if (q1.paused === q2.paused) return 0;\n        isQ1Smaller = !q1.paused;\n        break;\n      case SortBy.Size:\n        if (q1.size === q2.size) return 0;\n        isQ1Smaller = q1.size < q2.size;\n        break;\n      case SortBy.MemoryUsage:\n        if (q1.memory_usage_bytes === q2.memory_usage_bytes) return 0;\n        isQ1Smaller = q1.memory_usage_bytes < q2.memory_usage_bytes;\n        break;\n      case SortBy.Latency:\n        if (q1.latency_msec === q2.latency_msec) return 0;\n        isQ1Smaller = q1.latency_msec < q2.latency_msec;\n        break;\n      case SortBy.Processed:\n        if (q1.processed === q2.processed) return 0;\n        isQ1Smaller = q1.processed < q2.processed;\n        break;\n      case SortBy.Failed:\n        if (q1.failed === q2.failed) return 0;\n        isQ1Smaller = q1.failed < q2.failed;\n        break;\n      case SortBy.ErrorRate:\n        const q1ErrorRate = q1.failed / q1.processed;\n        const q2ErrorRate = q2.failed / q2.processed;\n        if (q1ErrorRate === q2ErrorRate) return 0;\n        isQ1Smaller = q1ErrorRate < q2ErrorRate;\n        break;\n      default:\n        // eslint-disable-next-line no-throw-literal\n        throw `Unexpected order by value: ${sortBy}`;\n    }\n    if (sortDir === SortDirection.Asc) {\n      return isQ1Smaller ? -1 : 1;\n    } else {\n      return isQ1Smaller ? 1 : -1;\n    }\n  };\n\n  const handleDialogClose = () => {\n    setQueueToDelete(null);\n  };\n\n  return (\n    <React.Fragment>\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"queues overview table\">\n          <TableHead>\n            <TableRow>\n              {colConfigs\n                .filter((cfg) => {\n                  // Filter out actions column in readonly mode.\n                  return !window.READ_ONLY || cfg.key !== \"actions\";\n                })\n                .map((cfg, i) => (\n                  <TableCell\n                    key={cfg.key}\n                    align={cfg.align}\n                    className={clsx(i === 0 && classes.fixedCell)}\n                  >\n                    {cfg.sortBy !== SortBy.None ? (\n                      <TableSortLabel\n                        active={sortBy === cfg.sortBy}\n                        direction={sortDir}\n                        onClick={createSortClickHandler(cfg.sortBy)}\n                      >\n                        {cfg.label}\n                      </TableSortLabel>\n                    ) : (\n                      <div>{cfg.label}</div>\n                    )}\n                  </TableCell>\n                ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sortQueues(props.queues, cmpFunc).map((q) => (\n              <Row\n                key={q.queue}\n                queue={q}\n                onPauseClick={() => props.onPauseClick(q.queue)}\n                onResumeClick={() => props.onResumeClick(q.queue)}\n                onDeleteClick={() => setQueueToDelete(q)}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <DeleteQueueConfirmationDialog\n        onClose={handleDialogClose}\n        queue={queueToDelete}\n      />\n    </React.Fragment>\n  );\n}\n\nconst useRowStyles = makeStyles((theme) => ({\n  row: {\n    \"&:last-child td\": {\n      borderBottomWidth: 0,\n    },\n    \"&:last-child th\": {\n      borderBottomWidth: 0,\n    },\n  },\n  linkText: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary,\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n  textGreen: {\n    color: theme.palette.success.dark,\n  },\n  textRed: {\n    color: theme.palette.error.dark,\n  },\n  boldCell: {\n    fontWeight: 600,\n  },\n  fixedCell: {\n    position: \"sticky\",\n    zIndex: 1,\n    left: 0,\n    background: theme.palette.background.paper,\n  },\n  actionIconsContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    minWidth: \"100px\",\n  },\n}));\n\ninterface RowProps {\n  queue: QueueWithMetadata;\n  onPauseClick: () => void;\n  onResumeClick: () => void;\n  onDeleteClick: () => void;\n}\n\nfunction Row(props: RowProps) {\n  const classes = useRowStyles();\n  const { queue: q } = props;\n  const [showIcons, setShowIcons] = useState<boolean>(false);\n  return (\n    <TableRow key={q.queue} className={classes.row}>\n      <TableCell\n        component=\"th\"\n        scope=\"row\"\n        className={clsx(classes.boldCell, classes.fixedCell)}\n      >\n        <Link to={queueDetailsPath(q.queue)} className={classes.linkText}>\n          {q.queue}\n        </Link>\n      </TableCell>\n      <TableCell>\n        {q.paused ? (\n          <span className={classes.textRed}>paused</span>\n        ) : (\n          <span className={classes.textGreen}>run</span>\n        )}\n      </TableCell>\n      <TableCell align=\"right\">{q.size}</TableCell>\n      <TableCell align=\"right\">{prettyBytes(q.memory_usage_bytes)}</TableCell>\n      <TableCell align=\"right\">{q.display_latency}</TableCell>\n      <TableCell align=\"right\">{q.processed}</TableCell>\n      <TableCell align=\"right\">{q.failed}</TableCell>\n      <TableCell align=\"right\">{percentage(q.failed, q.processed)}</TableCell>\n      {!window.READ_ONLY && (\n        <TableCell\n          align=\"center\"\n          onMouseEnter={() => setShowIcons(true)}\n          onMouseLeave={() => setShowIcons(false)}\n        >\n          <div className={classes.actionIconsContainer}>\n            {showIcons ? (\n              <React.Fragment>\n                {q.paused ? (\n                  <Tooltip title=\"Resume\">\n                    <IconButton\n                      color=\"secondary\"\n                      onClick={props.onResumeClick}\n                      disabled={q.requestPending}\n                      size=\"small\"\n                    >\n                      <PlayCircleFilledIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                ) : (\n                  <Tooltip title=\"Pause\">\n                    <IconButton\n                      color=\"primary\"\n                      onClick={props.onPauseClick}\n                      disabled={q.requestPending}\n                      size=\"small\"\n                    >\n                      <PauseCircleFilledIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                )}\n                <Tooltip title=\"Delete\">\n                  <IconButton onClick={props.onDeleteClick} size=\"small\">\n                    <DeleteIcon fontSize=\"small\" />\n                  </IconButton>\n                </Tooltip>\n              </React.Fragment>\n            ) : (\n              <IconButton size=\"small\">\n                <MoreHorizIcon fontSize=\"small\" />\n              </IconButton>\n            )}\n          </div>\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\n","import { Theme, withStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n// Export custom style tooltip.\nexport default withStyles((theme: Theme) => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 400,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\",\n  },\n}))(Tooltip);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { isDarkTheme } from \"../theme\";\n\ninterface Option {\n  label: string;\n  key: string;\n}\n\ninterface Props {\n  options: Option[];\n  initialSelectedKey: string;\n  onSelect: (key: string) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  popper: {\n    zIndex: 2,\n  },\n  buttonContained: {\n    backgroundColor: isDarkTheme(theme)\n      ? \"#303030\"\n      : theme.palette.background.default,\n    color: theme.palette.text.primary,\n    \"&:hover\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}));\n\nexport default function SplitButton(props: Props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState<boolean>(false);\n  const anchorRef = React.useRef<HTMLDivElement>(null);\n  const [selectedKey, setSelectedKey] = React.useState<string>(\n    props.initialSelectedKey\n  );\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    key: string\n  ) => {\n    setSelectedKey(key);\n    setOpen(false);\n    props.onSelect(key);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event: React.MouseEvent<Document, MouseEvent>) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const selectedOpt = props.options.find((opt) => opt.key === selectedKey);\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        ref={anchorRef}\n        aria-label=\"split button\"\n        size=\"small\"\n        disableElevation\n      >\n        <Button classes={{ contained: classes.buttonContained }}>\n          {selectedOpt ? selectedOpt.label : \"Select Option\"}\n        </Button>\n        <Button\n          size=\"small\"\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select option\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n          classes={{ contained: classes.buttonContained }}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n        className={classes.popper}\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\">\n                  {props.options.map((opt) => (\n                    <MenuItem\n                      key={opt.key}\n                      selected={opt.key === selectedKey}\n                      onClick={(event) => handleMenuItemClick(event, opt.key)}\n                    >\n                      {opt.label}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n}\n","import { useEffect, useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n// usePolling repeatedly calls doFn with a fix time delay specified\n// by interval (in millisecond).\nexport function usePolling(doFn: () => void, interval: number) {\n  useEffect(() => {\n    doFn();\n    const id = setInterval(doFn, interval * 1000);\n    return () => clearInterval(id);\n  }, [interval, doFn]);\n}\n\n// useQuery gets the URL search params from the current URL.\nexport function useQuery(): URLSearchParams {\n  const { search } = useLocation();\n  return useMemo(() => new URLSearchParams(search), [search]);\n}\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { useTheme, Theme } from \"@material-ui/core/styles\";\nimport { DailyStat } from \"../api\";\n\ninterface Props {\n  data: { [qname: string]: DailyStat[] };\n  numDays: number;\n}\n\ninterface ChartData {\n  succeeded: number;\n  failed: number;\n  date: string;\n}\n\nexport default function DailyStatsChart(props: Props) {\n  const data = makeChartData(props.data, props.numDays);\n  const theme = useTheme<Theme>();\n  return (\n    <ResponsiveContainer>\n      <LineChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey=\"date\"\n          minTickGap={10}\n          stroke={theme.palette.text.secondary}\n        />\n        <YAxis stroke={theme.palette.text.secondary} />\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"succeeded\"\n          stroke={theme.palette.success.main}\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"failed\"\n          stroke={theme.palette.error.main}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n\nfunction makeChartData(\n  queueStats: { [qname: string]: DailyStat[] },\n  numDays: number\n): ChartData[] {\n  const dataByDate: { [date: string]: ChartData } = {};\n  for (const qname in queueStats) {\n    for (const stat of queueStats[qname]) {\n      if (!dataByDate.hasOwnProperty(stat.date)) {\n        dataByDate[stat.date] = { succeeded: 0, failed: 0, date: stat.date };\n      }\n      dataByDate[stat.date].succeeded += stat.processed - stat.failed;\n      dataByDate[stat.date].failed += stat.failed;\n    }\n  }\n  return Object.values(dataByDate).sort(sortByDate).slice(-numDays);\n}\n\nfunction sortByDate(x: ChartData, y: ChartData): number {\n  return Date.parse(x.date) - Date.parse(y.date);\n}\n","import React, { useEffect } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport {\n  listQueuesAsync,\n  pauseQueueAsync,\n  resumeQueueAsync,\n  deleteQueueAsync,\n} from \"../actions/queuesActions\";\nimport { listQueueStatsAsync } from \"../actions/queueStatsActions\";\nimport { dailyStatsKeyChange } from \"../actions/settingsActions\";\nimport { AppState } from \"../store\";\nimport QueueSizeChart from \"../components/QueueSizeChart\";\nimport ProcessedTasksChart from \"../components/ProcessedTasksChart\";\nimport QueuesOverviewTable from \"../components/QueuesOverviewTable\";\nimport Tooltip from \"../components/Tooltip\";\nimport SplitButton from \"../components/SplitButton\";\nimport { usePolling } from \"../hooks\";\nimport DailyStatsChart from \"../components/DailyStatsChart\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  chartHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: theme.spacing(2),\n  },\n  chartHeaderTitle: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  chartContainer: {\n    width: \"100%\",\n    height: \"300px\",\n  },\n  infoIcon: {\n    marginLeft: theme.spacing(1),\n    color: theme.palette.grey[500],\n    cursor: \"pointer\",\n  },\n  tooltipSection: {\n    marginBottom: \"4px\",\n  },\n  tableContainer: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.queues.loading,\n    queues: state.queues.data.map((q) => ({\n      ...q.currentStats,\n      requestPending: q.requestPending,\n    })),\n    error: state.queues.error,\n    pollInterval: state.settings.pollInterval,\n    queueStats: state.queueStats.data,\n    dailyStatsKey: state.settings.dailyStatsChartType,\n  };\n}\n\nconst mapDispatchToProps = {\n  listQueuesAsync,\n  pauseQueueAsync,\n  resumeQueueAsync,\n  deleteQueueAsync,\n  listQueueStatsAsync,\n  dailyStatsKeyChange,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector>;\n\nexport type DailyStatsKey = \"today\" | \"last-7d\" | \"last-30d\" | \"last-90d\";\nexport const defaultDailyStatsKey = \"last-7d\";\n\nfunction DashboardView(props: Props) {\n  const {\n    pollInterval,\n    listQueuesAsync,\n    queues,\n    listQueueStatsAsync,\n    dailyStatsKey,\n  } = props;\n  const classes = useStyles();\n\n  usePolling(listQueuesAsync, pollInterval);\n\n  // Refetch queue stats if a queue is added or deleted.\n  const qnames = queues\n    .map((q) => q.queue)\n    .sort()\n    .join(\",\");\n\n  useEffect(() => {\n    listQueueStatsAsync();\n  }, [listQueueStatsAsync, qnames]);\n\n  const processedStats = queues.map((q) => ({\n    queue: q.queue,\n    succeeded: q.processed - q.failed,\n    failed: q.failed,\n  }));\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        {props.error.length > 0 && (\n          <Grid item xs={12}>\n            <Alert severity=\"error\">\n              <AlertTitle>Error</AlertTitle>\n              Could not retrieve queues live data —{\" \"}\n              <strong>See the logs for details</strong>\n            </Alert>\n          </Grid>\n        )}\n        <Grid item xs={6}>\n          <Paper className={classes.paper} variant=\"outlined\">\n            <div className={classes.chartHeader}>\n              <div className={classes.chartHeaderTitle}>\n                <Typography variant=\"h6\">Queue Size</Typography>\n                <Tooltip\n                  title={\n                    <div>\n                      <div className={classes.tooltipSection}>\n                        Total number of tasks in the queue\n                      </div>\n                      <div className={classes.tooltipSection}>\n                        <strong>Active</strong>: number of tasks currently being\n                        processed\n                      </div>\n                      <div className={classes.tooltipSection}>\n                        <strong>Pending</strong>: number of tasks ready to be\n                        processed\n                      </div>\n                      <div className={classes.tooltipSection}>\n                        <strong>Scheduled</strong>: number of tasks scheduled to\n                        be processed in the future\n                      </div>\n                      <div className={classes.tooltipSection}>\n                        <strong>Retry</strong>: number of tasks scheduled to be\n                        retried in the future\n                      </div>\n                      <div>\n                        <strong>Archived</strong>: number of tasks exhausted\n                        their retries\n                      </div>\n                    </div>\n                  }\n                >\n                  <InfoIcon fontSize=\"small\" className={classes.infoIcon} />\n                </Tooltip>\n              </div>\n            </div>\n            <div className={classes.chartContainer}>\n              <QueueSizeChart data={queues} />\n            </div>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Paper className={classes.paper} variant=\"outlined\">\n            <div className={classes.chartHeader}>\n              <div className={classes.chartHeaderTitle}>\n                <Typography variant=\"h6\">Tasks Processed</Typography>\n                <Tooltip\n                  title={\n                    <div>\n                      <div className={classes.tooltipSection}>\n                        Total number of tasks processed in a given day (UTC)\n                      </div>\n                      <div className={classes.tooltipSection}>\n                        <strong>Succeeded</strong>: number of tasks successfully\n                        processed\n                      </div>\n                      <div>\n                        <strong>Failed</strong>: number of tasks failed to be\n                        processed\n                      </div>\n                    </div>\n                  }\n                >\n                  <InfoIcon fontSize=\"small\" className={classes.infoIcon} />\n                </Tooltip>\n              </div>\n              <div>\n                <SplitButton\n                  options={[\n                    { label: \"Today\", key: \"today\" },\n                    { label: \"Last 7d\", key: \"last-7d\" },\n                    { label: \"Last 30d\", key: \"last-30d\" },\n                    { label: \"Last 90d\", key: \"last-90d\" },\n                  ]}\n                  initialSelectedKey={dailyStatsKey}\n                  onSelect={(key) =>\n                    props.dailyStatsKeyChange(key as DailyStatsKey)\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes.chartContainer}>\n              {dailyStatsKey === \"today\" && (\n                <ProcessedTasksChart data={processedStats} />\n              )}\n              {dailyStatsKey === \"last-7d\" && (\n                <DailyStatsChart data={props.queueStats} numDays={7} />\n              )}\n              {dailyStatsKey === \"last-30d\" && (\n                <DailyStatsChart data={props.queueStats} numDays={30} />\n              )}\n              {dailyStatsKey === \"last-90d\" && (\n                <DailyStatsChart data={props.queueStats} numDays={90} />\n              )}\n            </div>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} className={classes.tableContainer}>\n          <Paper className={classes.paper} variant=\"outlined\">\n            {/* TODO: Add loading indicator  */}\n            <QueuesOverviewTable\n              queues={queues}\n              onPauseClick={props.pauseQueueAsync}\n              onResumeClick={props.resumeQueueAsync}\n              onDeleteClick={props.deleteQueueAsync}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default connector(DashboardView);\n","import {\n  DAILY_STATS_KEY_CHANGE,\n  POLL_INTERVAL_CHANGE,\n  SettingsActionTypes,\n  TASK_ROWS_PER_PAGE_CHANGE,\n  THEME_PREFERENCE_CHANGE,\n  TOGGLE_DRAWER,\n} from \"../actions/settingsActions\";\nimport { defaultPageSize } from \"../components/TablePaginationActions\"\nimport { DailyStatsKey, defaultDailyStatsKey } from \"../views/DashboardView\";\n\nexport enum ThemePreference {\n  SystemDefault,\n  Always,\n  Never,\n}\n\nexport interface SettingsState {\n  // Time duration between data refresh.\n  pollInterval: number;\n\n  // UI theme setting.\n  themePreference: ThemePreference;\n\n  // Whether the drawer (i.e. sidebar) is open or not.\n  isDrawerOpen: boolean;\n\n  // Number of tasks displayed in task table.\n  taskRowsPerPage: number,\n\n  // Type of the chart displayed for \"Processed Tasks\" section in dashboard.\n  dailyStatsChartType: DailyStatsKey;\n}\n\nexport const initialState: SettingsState = {\n  pollInterval: 8,\n  themePreference: ThemePreference.SystemDefault,\n  isDrawerOpen: true,\n  taskRowsPerPage: defaultPageSize,\n  dailyStatsChartType: defaultDailyStatsKey,\n};\n\nfunction settingsReducer(\n  state = initialState,\n  action: SettingsActionTypes\n): SettingsState {\n  switch (action.type) {\n    case POLL_INTERVAL_CHANGE:\n      return {\n        ...state,\n        pollInterval: action.value,\n      };\n\n    case THEME_PREFERENCE_CHANGE:\n      return {\n        ...state,\n        themePreference: action.value,\n      };\n\n    case TOGGLE_DRAWER:\n      return {\n        ...state,\n        isDrawerOpen: !state.isDrawerOpen,\n      };\n\n    case TASK_ROWS_PER_PAGE_CHANGE:\n      return {\n        ...state,\n        taskRowsPerPage: action.value,\n      }\n\n    case DAILY_STATS_KEY_CHANGE:\n      return {\n        ...state,\n        dailyStatsChartType: action.value,\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default settingsReducer;\n","import { createTheme, Theme } from \"@material-ui/core/styles\";\nimport { ThemePreference } from \"./reducers/settingsReducer\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nexport function useTheme(themePreference: ThemePreference): Theme {\n  let prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  if (themePreference === ThemePreference.Always) {\n    prefersDarkMode = true;\n  } else if (themePreference === ThemePreference.Never) {\n    prefersDarkMode = false;\n  }\n  return createTheme({\n    // Got color palette from https://htmlcolors.com/palette/31/stripe\n    palette: {\n      primary: {\n        main: \"#4379FF\",\n      },\n      secondary: {\n        main: \"#97FBD1\",\n      },\n      background: {\n        default: \"#f5f7f9\",\n      },\n      type: prefersDarkMode ? \"dark\" : \"light\",\n    },\n  });\n}\n\nexport function isDarkTheme(theme: Theme): boolean {\n  return theme.palette.type === \"dark\";\n}\n","export const CLOSE_SNACKBAR = \"CLOSE_SNACKBAR\";\n\ninterface CloseSnakbarAction {\n  type: typeof CLOSE_SNACKBAR;\n}\n\n// Union of all snackbar related action types\nexport type SnackbarActionTypes = CloseSnakbarAction;\n\nexport function closeSnackbar() {\n  return { type: CLOSE_SNACKBAR };\n}\n","import React, { ReactElement } from \"react\";\nimport clsx from \"clsx\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  useRouteMatch,\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n} from \"react-router-dom\";\nimport { isDarkTheme } from \"../theme\";\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    borderTopRightRadius: \"24px\",\n    borderBottomRightRadius: \"24px\",\n  },\n  selected: {\n    backgroundColor: isDarkTheme(theme)\n      ? `${theme.palette.secondary.main}30`\n      : `${theme.palette.primary.main}30`,\n  },\n  selectedText: {\n    fontWeight: 600,\n    color: isDarkTheme(theme)\n      ? theme.palette.secondary.main\n      : theme.palette.primary.main,\n  },\n  selectedIcon: {\n    color: isDarkTheme(theme)\n      ? theme.palette.secondary.main\n      : theme.palette.primary.main,\n  },\n}));\n\ninterface Props {\n  to: string;\n  primary: string;\n  icon?: ReactElement;\n}\n\n// Note: See https://material-ui.com/guides/composition/ for details.\nfunction ListItemLink(props: Props): ReactElement {\n  const classes = useStyles();\n  const { icon, primary, to } = props;\n  const isMatch = useRouteMatch({\n    path: to,\n    strict: true,\n    sensitive: true,\n    exact: true,\n  });\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef<any, Omit<RouterLinkProps, \"to\">>((itemProps, ref) => (\n        <RouterLink to={to} ref={ref} {...itemProps} />\n      )),\n    [to]\n  );\n  return (\n    <li>\n      <Tooltip title={primary} placement=\"right\">\n        <ListItem\n          button\n          component={renderLink}\n          className={clsx(classes.listItem, isMatch && classes.selected)}\n        >\n          {icon && (\n            <ListItemIcon className={clsx(isMatch && classes.selectedIcon)}>\n              {icon}\n            </ListItemIcon>\n          )}\n          <ListItemText\n            primary={primary}\n            classes={{\n              primary: isMatch ? classes.selectedText : undefined,\n            }}\n          />\n        </ListItem>\n      </Tooltip>\n    </li>\n  );\n}\n\nexport default ListItemLink;\n","import React from \"react\";\nimport { useTheme, Theme } from \"@material-ui/core/styles\";\nimport ReactSyntaxHighlighter from \"react-syntax-highlighter\";\nimport styleDark from \"react-syntax-highlighter/dist/esm/styles/hljs/atom-one-dark\";\nimport styleLight from \"react-syntax-highlighter/dist/esm/styles/hljs/atom-one-light\";\nimport { isDarkTheme } from \"../theme\";\n\ninterface Props {\n  language: string;\n  children: string;\n  customStyle?: object;\n}\n\n// Theme aware syntax-highlighter component.\nexport default function SyntaxHighlighter(props: Props) {\n  const theme = useTheme<Theme>();\n  const style = isDarkTheme(theme) ? styleDark : styleLight;\n  return (\n    <ReactSyntaxHighlighter\n      language={props.language}\n      style={style}\n      customStyle={props.customStyle}\n    >\n      {props.children}\n    </ReactSyntaxHighlighter>\n  );\n}\n","import { Dispatch } from \"@reduxjs/toolkit\";\nimport {\n  listSchedulerEnqueueEvents,\n  ListSchedulerEnqueueEventsResponse,\n  listSchedulerEntries,\n  ListSchedulerEntriesResponse,\n} from \"../api\";\nimport { toErrorString, toErrorStringWithHttpStatus } from \"../utils\";\n\n// List of scheduler-entry related action types.\nexport const LIST_SCHEDULER_ENTRIES_BEGIN = \"LIST_SCHEDULER_ENTRIES_BEGIN\";\nexport const LIST_SCHEDULER_ENTRIES_SUCCESS = \"LIST_SCHEDULER_ENTRIES_SUCCESS\";\nexport const LIST_SCHEDULER_ENTRIES_ERROR = \"LIST_SCHEDULER_ENTRIES_ERROR\";\nexport const LIST_SCHEDULER_ENQUEUE_EVENTS_BEGIN =\n  \"LIST_SCHEDULER_ENQUEUE_EVENTS_BEGIN\";\nexport const LIST_SCHEDULER_ENQUEUE_EVENTS_SUCCESS =\n  \"LIST_SCHEDULER_ENQUEUE_EVENTS_SUCCESS\";\nexport const LIST_SCHEDULER_ENQUEUE_EVENTS_ERROR =\n  \"LIST_SCHEDULER_ENQUEUE_EVENTS_ERROR\";\n\ninterface ListSchedulerEntriesBeginAction {\n  type: typeof LIST_SCHEDULER_ENTRIES_BEGIN;\n}\n\ninterface ListSchedulerEntriesSuccessAction {\n  type: typeof LIST_SCHEDULER_ENTRIES_SUCCESS;\n  payload: ListSchedulerEntriesResponse;\n}\n\ninterface ListSchedulerEntriesErrorAction {\n  type: typeof LIST_SCHEDULER_ENTRIES_ERROR;\n  error: string; // error description\n}\n\ninterface ListSchedulerEnqueueEventBeginAction {\n  type: typeof LIST_SCHEDULER_ENQUEUE_EVENTS_BEGIN;\n  entryId: string;\n}\n\ninterface ListSchedulerEnqueueEventSuccessAction {\n  type: typeof LIST_SCHEDULER_ENQUEUE_EVENTS_SUCCESS;\n  entryId: string;\n  payload: ListSchedulerEnqueueEventsResponse;\n}\n\ninterface ListSchedulerEnqueueEventErrorAction {\n  type: typeof LIST_SCHEDULER_ENQUEUE_EVENTS_ERROR;\n  entryId: string;\n  error: string;\n}\n\n// Union of all scheduler-entry related actions.\nexport type SchedulerEntriesActionTypes =\n  | ListSchedulerEntriesBeginAction\n  | ListSchedulerEntriesSuccessAction\n  | ListSchedulerEntriesErrorAction\n  | ListSchedulerEnqueueEventBeginAction\n  | ListSchedulerEnqueueEventSuccessAction\n  | ListSchedulerEnqueueEventErrorAction;\n\nexport function listSchedulerEntriesAsync() {\n  return async (dispatch: Dispatch<SchedulerEntriesActionTypes>) => {\n    dispatch({ type: LIST_SCHEDULER_ENTRIES_BEGIN });\n    try {\n      const response = await listSchedulerEntries();\n      dispatch({\n        type: LIST_SCHEDULER_ENTRIES_SUCCESS,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        `listSchedulerEnqueueEventsAsync: ${toErrorStringWithHttpStatus(error)}`\n      );\n      dispatch({\n        type: LIST_SCHEDULER_ENTRIES_ERROR,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function listSchedulerEnqueueEventsAsync(entryId: string) {\n  return async (dispatch: Dispatch<SchedulerEntriesActionTypes>) => {\n    dispatch({ type: LIST_SCHEDULER_ENQUEUE_EVENTS_BEGIN, entryId });\n    try {\n      const response = await listSchedulerEnqueueEvents(entryId);\n      dispatch({\n        type: LIST_SCHEDULER_ENQUEUE_EVENTS_SUCCESS,\n        payload: response,\n        entryId,\n      });\n    } catch (error) {\n      console.error(\n        \"listSchedulerEnqueueEventsAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_SCHEDULER_ENQUEUE_EVENTS_ERROR,\n        error: toErrorString(error),\n        entryId,\n      });\n    }\n  };\n}\n","import uniqBy from \"lodash.uniqby\";\nimport {\n  LIST_SCHEDULER_ENQUEUE_EVENTS_BEGIN,\n  LIST_SCHEDULER_ENQUEUE_EVENTS_ERROR,\n  LIST_SCHEDULER_ENQUEUE_EVENTS_SUCCESS,\n  LIST_SCHEDULER_ENTRIES_BEGIN,\n  LIST_SCHEDULER_ENTRIES_ERROR,\n  LIST_SCHEDULER_ENTRIES_SUCCESS,\n  SchedulerEntriesActionTypes,\n} from \"../actions/schedulerEntriesActions\";\nimport { SchedulerEnqueueEvent, SchedulerEntry } from \"../api\";\n\ninterface SchedulerEntriesState {\n  loading: boolean;\n  data: SchedulerEntry[];\n  error: string; // error description\n  enqueueEventsByEntryId: {\n    [entryId: string]: { data: SchedulerEnqueueEvent[]; loading: boolean };\n  };\n}\n\nexport function getEnqueueEventsEntry(\n  state: SchedulerEntriesState,\n  entryId: string\n): { data: SchedulerEnqueueEvent[]; loading: boolean } {\n  return state.enqueueEventsByEntryId[entryId] || { data: [], loading: false };\n}\n\nconst initialState: SchedulerEntriesState = {\n  loading: false,\n  data: [],\n  error: \"\",\n  enqueueEventsByEntryId: {},\n};\n\nfunction schedulerEntriesReducer(\n  state = initialState,\n  action: SchedulerEntriesActionTypes\n): SchedulerEntriesState {\n  switch (action.type) {\n    case LIST_SCHEDULER_ENTRIES_BEGIN:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LIST_SCHEDULER_ENTRIES_SUCCESS:\n      return {\n        ...state,\n        error: \"\",\n        loading: false,\n        data: action.payload.entries,\n      };\n    case LIST_SCHEDULER_ENTRIES_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case LIST_SCHEDULER_ENQUEUE_EVENTS_BEGIN: {\n      const entry = getEnqueueEventsEntry(state, action.entryId);\n      return {\n        ...state,\n        enqueueEventsByEntryId: {\n          ...state.enqueueEventsByEntryId,\n          [action.entryId]: {\n            ...entry,\n            loading: true,\n          },\n        },\n      };\n    }\n    case LIST_SCHEDULER_ENQUEUE_EVENTS_SUCCESS: {\n      const sortByEnqueuedAt = (\n        e1: SchedulerEnqueueEvent,\n        e2: SchedulerEnqueueEvent\n      ): number => {\n        return Date.parse(e2.enqueued_at) - Date.parse(e1.enqueued_at);\n      };\n      const entry = getEnqueueEventsEntry(state, action.entryId);\n      const newData = uniqBy(\n        [...entry.data, ...action.payload.events],\n        \"task_id\"\n      ).sort(sortByEnqueuedAt);\n      return {\n        ...state,\n        enqueueEventsByEntryId: {\n          ...state.enqueueEventsByEntryId,\n          [action.entryId]: {\n            loading: false,\n            data: newData,\n          },\n        },\n      };\n    }\n    case LIST_SCHEDULER_ENQUEUE_EVENTS_ERROR: {\n      const entry = getEnqueueEventsEntry(state, action.entryId);\n      return {\n        ...state,\n        enqueueEventsByEntryId: {\n          ...state.enqueueEventsByEntryId,\n          [action.entryId]: {\n            ...entry,\n            loading: false,\n          },\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default schedulerEntriesReducer;\n","import React, { useEffect } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { AppState } from \"../store\";\nimport { getEnqueueEventsEntry } from \"../reducers/schedulerEntriesReducer\";\nimport { listSchedulerEnqueueEventsAsync } from \"../actions/schedulerEntriesActions\";\nimport { timeAgo } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    height: \"80vh\",\n  },\n  stickyHeaderCell: {\n    background: theme.palette.background.paper,\n  },\n}));\n\nfunction mapStateToProps(state: AppState, ownProps: Props) {\n  return {\n    events: getEnqueueEventsEntry(state.schedulerEntries, ownProps.entryId),\n  };\n}\n\nconst connector = connect(mapStateToProps, { listSchedulerEnqueueEventsAsync });\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  entryId: string; // Scheduler Entry ID\n}\n\nfunction SchedulerEnqueueEventsTable(props: Props & ReduxProps) {\n  const classes = useStyles();\n  const { listSchedulerEnqueueEventsAsync, entryId, events } = props;\n\n  useEffect(() => {\n    listSchedulerEnqueueEventsAsync(entryId);\n  }, [entryId, listSchedulerEnqueueEventsAsync]);\n\n  // TODO: loading state UI\n\n  // TODO: \"Load More\" button OR infinite scroll\n\n  return (\n    <TableContainer className={classes.table}>\n      <Table\n        stickyHeader\n        aria-label=\"scheduler enqueue events table\"\n        size=\"small\"\n      >\n        <TableHead>\n          <TableRow>\n            <TableCell classes={{ stickyHeader: classes.stickyHeaderCell }}>\n              Enqueued\n            </TableCell>\n            <TableCell classes={{ stickyHeader: classes.stickyHeaderCell }}>\n              Task ID\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {events.data.map((e) => (\n            <TableRow key={e.task_id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {timeAgo(e.enqueued_at)}\n              </TableCell>\n              <TableCell>{e.task_id}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default connector(SchedulerEnqueueEventsTable);\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport { SortDirection, SortableTableColumn } from \"../types/table\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport { SchedulerEntry } from \"../api\";\nimport { timeAgo, durationBefore, prettifyPayload } from \"../utils\";\nimport SchedulerEnqueueEventsTable from \"./SchedulerEnqueueEventsTable\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  noBorder: {\n    border: \"none\",\n  },\n  fixedCell: {\n    position: \"sticky\",\n    zIndex: 1,\n    left: 0,\n    background: theme.palette.background.paper,\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  modalContent: {\n    background: theme.palette.background.paper,\n    padding: theme.spacing(2),\n    width: \"540px\",\n    outline: \"none\",\n    borderRadius: theme.shape.borderRadius,\n  },\n  eventsTable: {\n    maxHeight: \"80vh\",\n  },\n}));\n\nenum SortBy {\n  EntryId,\n  Spec,\n  Type,\n  Payload,\n  Options,\n  NextEnqueue,\n  PrevEnqueue,\n\n  None,\n}\n\nconst colConfigs: SortableTableColumn<SortBy>[] = [\n  {\n    label: \"Entry ID\",\n    key: \"entry_id\",\n    sortBy: SortBy.EntryId,\n    align: \"left\",\n  },\n  {\n    label: \"Spec\",\n    key: \"spec\",\n    sortBy: SortBy.Spec,\n    align: \"left\",\n  },\n  {\n    label: \"Type\",\n    key: \"type\",\n    sortBy: SortBy.Type,\n    align: \"left\",\n  },\n  {\n    label: \"Payload\",\n    key: \"task_payload\",\n    sortBy: SortBy.Payload,\n    align: \"left\",\n  },\n  {\n    label: \"Options\",\n    key: \"options\",\n    sortBy: SortBy.Options,\n    align: \"left\",\n  },\n  {\n    label: \"Next Enqueue\",\n    key: \"next_enqueue\",\n    sortBy: SortBy.NextEnqueue,\n    align: \"left\",\n  },\n  {\n    label: \"Prev Enqueue\",\n    key: \"prev_enqueue\",\n    sortBy: SortBy.PrevEnqueue,\n    align: \"left\",\n  },\n  {\n    label: \"\",\n    key: \"show_history\",\n    sortBy: SortBy.None,\n    align: \"left\",\n  },\n];\n\n// sortEntries takes a array of entries and return a sorted array.\n// It returns a new array and leave the original array untouched.\nfunction sortEntries(\n  entries: SchedulerEntry[],\n  cmpFn: (first: SchedulerEntry, second: SchedulerEntry) => number\n): SchedulerEntry[] {\n  let copy = [...entries];\n  copy.sort(cmpFn);\n  return copy;\n}\n\ninterface Props {\n  entries: SchedulerEntry[];\n}\n\nexport default function SchedulerEntriesTable(props: Props) {\n  const classes = useStyles();\n  const [sortBy, setSortBy] = useState<SortBy>(SortBy.EntryId);\n  const [sortDir, setSortDir] = useState<SortDirection>(SortDirection.Asc);\n  const [activeEntryId, setActiveEntryId] = useState<string>(\"\");\n\n  const createSortClickHandler = (sortKey: SortBy) => (e: React.MouseEvent) => {\n    if (sortKey === sortBy) {\n      // Toggle sort direction.\n      const nextSortDir =\n        sortDir === SortDirection.Asc ? SortDirection.Desc : SortDirection.Asc;\n      setSortDir(nextSortDir);\n    } else {\n      // Change the sort key.\n      setSortBy(sortKey);\n    }\n  };\n\n  const cmpFunc = (e1: SchedulerEntry, e2: SchedulerEntry): number => {\n    let isE1Smaller: boolean;\n    switch (sortBy) {\n      case SortBy.EntryId:\n        if (e1.id === e2.id) return 0;\n        isE1Smaller = e1.id < e2.id;\n        break;\n      case SortBy.Spec:\n        if (e1.spec === e2.spec) return 0;\n        isE1Smaller = e1.spec < e2.spec;\n        break;\n      case SortBy.Type:\n        if (e1.task_type === e2.task_type) return 0;\n        isE1Smaller = e1.task_type < e2.task_type;\n        break;\n      case SortBy.Payload:\n        if (e1.task_payload === e2.task_payload) return 0;\n        isE1Smaller = e1.task_payload < e2.task_payload;\n        break;\n      case SortBy.Options:\n        if (e1.options === e2.options) return 0;\n        isE1Smaller = e1.options < e2.options;\n        break;\n      case SortBy.NextEnqueue:\n        if (e1.next_enqueue_at === e2.next_enqueue_at) return 0;\n        isE1Smaller = e1.next_enqueue_at < e2.next_enqueue_at;\n        break;\n      case SortBy.PrevEnqueue:\n        const e1PrevEnqueueAt = e1.prev_enqueue_at || \"\";\n        const e2PrevEnqueueAt = e2.prev_enqueue_at || \"\";\n        if (e1PrevEnqueueAt === e2PrevEnqueueAt) return 0;\n        isE1Smaller = e1PrevEnqueueAt < e2PrevEnqueueAt;\n        break;\n      default:\n        // eslint-disable-next-line no-throw-literal\n        throw `Unexpected order by value: ${sortBy}`;\n    }\n    if (sortDir === SortDirection.Asc) {\n      return isE1Smaller ? -1 : 1;\n    } else {\n      return isE1Smaller ? 1 : -1;\n    }\n  };\n\n  if (props.entries.length === 0) {\n    return (\n      <Alert severity=\"info\">\n        <AlertTitle>Info</AlertTitle>\n        No entries found at this time.\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"scheduler entries table\">\n          <TableHead>\n            <TableRow>\n              {colConfigs.map((cfg, i) => (\n                <TableCell\n                  key={cfg.key}\n                  align={cfg.align}\n                  className={clsx(i === 0 && classes.fixedCell)}\n                >\n                  <TableSortLabel\n                    active={cfg.sortBy === sortBy}\n                    direction={sortDir}\n                    onClick={createSortClickHandler(cfg.sortBy)}\n                  >\n                    {cfg.label}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sortEntries(props.entries, cmpFunc).map((entry, idx) => (\n              <Row\n                key={entry.id}\n                entry={entry}\n                isLastRow={idx === props.entries.length - 1}\n                onShowHistoryClick={() => setActiveEntryId(entry.id)}\n              />\n            ))}\n          </TableBody>\n        </Table>\n        <Modal\n          open={activeEntryId !== \"\"}\n          onClose={() => setActiveEntryId(\"\")}\n          className={classes.modal}\n        >\n          <div className={classes.modalContent}>\n            <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\n              Recent History\n            </Typography>\n            <SchedulerEnqueueEventsTable entryId={activeEntryId} />\n          </div>\n        </Modal>\n      </TableContainer>\n    </>\n  );\n}\n\ninterface RowProps {\n  entry: SchedulerEntry;\n  isLastRow: boolean;\n  onShowHistoryClick: () => void;\n}\n\nconst useRowStyles = makeStyles((theme) => ({\n  rowRoot: {\n    \"& > *\": {\n      borderBottom: \"unset\",\n    },\n  },\n  noBorder: {\n    border: \"none\",\n  },\n}));\n\nfunction Row(props: RowProps) {\n  const { entry, isLastRow } = props;\n  const classes = useRowStyles();\n  return (\n    <TableRow className={classes.rowRoot}>\n      <TableCell\n        component=\"th\"\n        scope=\"row\"\n        className={clsx(isLastRow && classes.noBorder)}\n      >\n        {entry.id}\n      </TableCell>\n      <TableCell className={clsx(isLastRow && classes.noBorder)}>\n        {entry.spec}\n      </TableCell>\n      <TableCell className={clsx(isLastRow && classes.noBorder)}>\n        {entry.task_type}\n      </TableCell>\n      <TableCell className={clsx(isLastRow && classes.noBorder)}>\n        <SyntaxHighlighter language=\"json\">\n          {prettifyPayload(entry.task_payload)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell className={clsx(isLastRow && classes.noBorder)}>\n        <SyntaxHighlighter language=\"go\">\n          {entry.options.length > 0 ? entry.options.join(\", \") : \"No options\"}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell className={clsx(isLastRow && classes.noBorder)}>\n        {durationBefore(entry.next_enqueue_at)}\n      </TableCell>\n      <TableCell className={clsx(isLastRow && classes.noBorder)}>\n        {entry.prev_enqueue_at ? timeAgo(entry.prev_enqueue_at) : \"N/A\"}\n      </TableCell>\n      <TableCell>\n        <Tooltip title=\"See History\">\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={props.onShowHistoryClick}\n          >\n            <HistoryIcon />\n          </IconButton>\n        </Tooltip>\n      </TableCell>\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SchedulerEntriesTable from \"../components/SchedulerEntriesTable\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport { AppState } from \"../store\";\nimport { listSchedulerEntriesAsync } from \"../actions/schedulerEntriesActions\";\nimport { usePolling } from \"../hooks\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  heading: {\n    paddingLeft: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.schedulerEntries.loading,\n    error: state.schedulerEntries.error,\n    entries: state.schedulerEntries.data,\n    pollInterval: state.settings.pollInterval,\n  };\n}\n\nconst connector = connect(mapStateToProps, { listSchedulerEntriesAsync });\n\ntype Props = ConnectedProps<typeof connector>;\n\nfunction SchedulersView(props: Props) {\n  const { pollInterval, listSchedulerEntriesAsync } = props;\n  const classes = useStyles();\n\n  usePolling(listSchedulerEntriesAsync, pollInterval);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        {props.error === \"\" ? (\n          <Grid item xs={12}>\n            <Paper className={classes.paper} variant=\"outlined\">\n              <Typography variant=\"h6\" className={classes.heading}>\n                Scheduler Entries\n              </Typography>\n              <SchedulerEntriesTable entries={props.entries} />\n            </Paper>\n          </Grid>\n        ) : (\n          <Grid item xs={12}>\n            <Alert severity=\"error\">\n              <AlertTitle>Error</AlertTitle>\n              Could not retrieve scheduler entries live data —{\" \"}\n              <strong>See the logs for details</strong>\n            </Alert>\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default connector(SchedulersView);\n","import {\n  batchCancelActiveTasks,\n  BatchCancelTasksResponse,\n  batchDeleteArchivedTasks,\n  batchDeleteRetryTasks,\n  batchDeleteScheduledTasks,\n  batchDeleteCompletedTasks,\n  BatchDeleteTasksResponse,\n  batchArchiveRetryTasks,\n  batchArchiveScheduledTasks,\n  BatchArchiveTasksResponse,\n  batchRunArchivedTasks,\n  batchRunRetryTasks,\n  batchRunScheduledTasks,\n  BatchRunTasksResponse,\n  cancelActiveTask,\n  cancelAllActiveTasks,\n  deleteAllArchivedTasks,\n  deleteAllRetryTasks,\n  deleteAllScheduledTasks,\n  deleteAllCompletedTasks,\n  deleteArchivedTask,\n  deleteRetryTask,\n  deleteScheduledTask,\n  deleteCompletedTask,\n  archiveAllRetryTasks,\n  archiveAllScheduledTasks,\n  archiveRetryTask,\n  archiveScheduledTask,\n  listActiveTasks,\n  listArchivedTasks,\n  listPendingTasks,\n  ListTasksResponse,\n  listRetryTasks,\n  listScheduledTasks,\n  listCompletedTasks,\n  PaginationOptions,\n  runAllArchivedTasks,\n  runAllRetryTasks,\n  runAllScheduledTasks,\n  runArchivedTask,\n  runRetryTask,\n  runScheduledTask,\n  deletePendingTask,\n  batchDeletePendingTasks,\n  deleteAllPendingTasks,\n  archivePendingTask,\n  batchArchivePendingTasks,\n  archiveAllPendingTasks,\n  TaskInfo,\n  getTaskInfo,\n} from \"../api\";\nimport { Dispatch } from \"redux\";\nimport { toErrorString, toErrorStringWithHttpStatus } from \"../utils\";\n\n// List of tasks related action types.\nexport const GET_TASK_INFO_BEGIN = \"GET_TASK_INFO_BEGIN\";\nexport const GET_TASK_INFO_SUCCESS = \"GET_TASK_INFO_SUCCESS\";\nexport const GET_TASK_INFO_ERROR = \"GET_TASK_INFO_ERROR\";\nexport const LIST_ACTIVE_TASKS_BEGIN = \"LIST_ACTIVE_TASKS_BEGIN\";\nexport const LIST_ACTIVE_TASKS_SUCCESS = \"LIST_ACTIVE_TASKS_SUCCESS\";\nexport const LIST_ACTIVE_TASKS_ERROR = \"LIST_ACTIVE_TASKS_ERROR\";\nexport const LIST_PENDING_TASKS_BEGIN = \"LIST_PENDING_TASKS_BEGIN\";\nexport const LIST_PENDING_TASKS_SUCCESS = \"LIST_PENDING_TASKS_SUCCESS\";\nexport const LIST_PENDING_TASKS_ERROR = \"LIST_PENDING_TASKS_ERROR\";\nexport const LIST_SCHEDULED_TASKS_BEGIN = \"LIST_SCHEDULED_TASKS_BEGIN\";\nexport const LIST_SCHEDULED_TASKS_SUCCESS = \"LIST_SCHEDULED_TASKS_SUCCESS\";\nexport const LIST_SCHEDULED_TASKS_ERROR = \"LIST_SCHEDULED_TASKS_ERROR\";\nexport const LIST_RETRY_TASKS_BEGIN = \"LIST_RETRY_TASKS_BEGIN\";\nexport const LIST_RETRY_TASKS_SUCCESS = \"LIST_RETRY_TASKS_SUCCESS\";\nexport const LIST_RETRY_TASKS_ERROR = \"LIST_RETRY_TASKS_ERROR\";\nexport const LIST_ARCHIVED_TASKS_BEGIN = \"LIST_ARCHIVED_TASKS_BEGIN\";\nexport const LIST_ARCHIVED_TASKS_SUCCESS = \"LIST_ARCHIVED_TASKS_SUCCESS\";\nexport const LIST_ARCHIVED_TASKS_ERROR = \"LIST_ARCHIVED_TASKS_ERROR\";\nexport const LIST_COMPLETED_TASKS_BEGIN = \"LIST_COMPLETED_TASKS_BEGIN\";\nexport const LIST_COMPLETED_TASKS_SUCCESS = \"LIST_COMPLETED_TASKS_SUCCESS\";\nexport const LIST_COMPLETED_TASKS_ERROR = \"LIST_COMPLETED_TASKS_ERROR\";\nexport const CANCEL_ACTIVE_TASK_BEGIN = \"CANCEL_ACTIVE_TASK_BEGIN\";\nexport const CANCEL_ACTIVE_TASK_SUCCESS = \"CANCEL_ACTIVE_TASK_SUCCESS\";\nexport const CANCEL_ACTIVE_TASK_ERROR = \"CANCEL_ACTIVE_TASK_ERROR\";\nexport const CANCEL_ALL_ACTIVE_TASKS_BEGIN = \"CANCEL_ALL_ACTIVE_TASKS_BEGIN\";\nexport const CANCEL_ALL_ACTIVE_TASKS_SUCCESS =\n  \"CANCEL_ALL_ACTIVE_TASKS_SUCCESS\";\nexport const CANCEL_ALL_ACTIVE_TASKS_ERROR = \"CANCEL_ALL_ACTIVE_TASKS_ERROR\";\nexport const BATCH_CANCEL_ACTIVE_TASKS_BEGIN =\n  \"BATCH_CANCEL_ACTIVE_TASKS_BEGIN\";\nexport const BATCH_CANCEL_ACTIVE_TASKS_SUCCESS =\n  \"BATCH_CANCEL_ACTIVE_TASKS_SUCCESS\";\nexport const BATCH_CANCEL_ACTIVE_TASKS_ERROR =\n  \"BATCH_CANCEL_ACTIVE_TASKS_ERROR\";\nexport const RUN_SCHEDULED_TASK_BEGIN = \"RUN_SCHEDULED_TASK_BEGIN\";\nexport const RUN_SCHEDULED_TASK_SUCCESS = \"RUN_SCHEDULED_TASK_SUCCESS\";\nexport const RUN_SCHEDULED_TASK_ERROR = \"RUN_SCHEDULED_TASK_ERROR\";\nexport const RUN_RETRY_TASK_BEGIN = \"RUN_RETRY_TASK_BEGIN\";\nexport const RUN_RETRY_TASK_SUCCESS = \"RUN_RETRY_TASK_SUCCESS\";\nexport const RUN_RETRY_TASK_ERROR = \"RUN_RETRY_TASK_ERROR\";\nexport const RUN_ARCHIVED_TASK_BEGIN = \"RUN_ARCHIVED_TASK_BEGIN\";\nexport const RUN_ARCHIVED_TASK_SUCCESS = \"RUN_ARCHIVED_TASK_SUCCESS\";\nexport const RUN_ARCHIVED_TASK_ERROR = \"RUN_ARCHIVED_TASK_ERROR\";\nexport const DELETE_PENDING_TASK_BEGIN = \"DELETE_PENDING_TASK_BEGIN\";\nexport const DELETE_PENDING_TASK_SUCCESS = \"DELETE_PENDING_TASK_SUCCESS\";\nexport const DELETE_PENDING_TASK_ERROR = \"DELETE_PENDING_TASK_ERROR\";\nexport const ARCHIVE_PENDING_TASK_BEGIN = \"ARCHIVE_PENDING_TASK_BEGIN\";\nexport const ARCHIVE_PENDING_TASK_SUCCESS = \"ARCHIVE_PENDING_TASK_SUCCESS\";\nexport const ARCHIVE_PENDING_TASK_ERROR = \"ARCHIVE_PENDING_TASK_ERROR\";\nexport const DELETE_SCHEDULED_TASK_BEGIN = \"DELETE_SCHEDULED_TASK_BEGIN\";\nexport const DELETE_SCHEDULED_TASK_SUCCESS = \"DELETE_SCHEDULED_TASK_SUCCESS\";\nexport const DELETE_SCHEDULED_TASK_ERROR = \"DELETE_SCHEDULED_TASK_ERROR\";\nexport const ARCHIVE_SCHEDULED_TASK_BEGIN = \"ARCHIVE_SCHEDULED_TASK_BEGIN\";\nexport const ARCHIVE_SCHEDULED_TASK_SUCCESS = \"ARCHIVE_SCHEDULED_TASK_SUCCESS\";\nexport const ARCHIVE_SCHEDULED_TASK_ERROR = \"ARCHIVE_SCHEDULED_TASK_ERROR\";\nexport const ARCHIVE_RETRY_TASK_BEGIN = \"ARCHIVE_RETRY_TASK_BEGIN\";\nexport const ARCHIVE_RETRY_TASK_SUCCESS = \"ARCHIVE_RETRY_TASK_SUCCESS\";\nexport const ARCHIVE_RETRY_TASK_ERROR = \"ARCHIVE_RETRY_TASK_ERROR\";\nexport const BATCH_ARCHIVE_PENDING_TASKS_BEGIN =\n  \"BATCH_ARCHIVE_PENDING_TASKS_BEGIN\";\nexport const BATCH_ARCHIVE_PENDING_TASKS_SUCCESS =\n  \"BATCH_ARCHIVE_PENDING_TASKS_SUCCESS\";\nexport const BATCH_ARCHIVE_PENDING_TASKS_ERROR =\n  \"BATCH_RUN_PENDING_TASKS_ERROR\";\nexport const BATCH_DELETE_PENDING_TASKS_BEGIN =\n  \"BATCH_DELETE_PENDING_TASKS_BEGIN\";\nexport const BATCH_DELETE_PENDING_TASKS_SUCCESS =\n  \"BATCH_DELETE_PENDING_TASKS_SUCCESS\";\nexport const BATCH_DELETE_PENDING_TASKS_ERROR =\n  \"BATCH_DELETE_PENDING_TASKS_ERROR\";\nexport const DELETE_ALL_PENDING_TASKS_BEGIN = \"DELETE_ALL_PENDING_TASKS_BEGIN\";\nexport const DELETE_ALL_PENDING_TASKS_SUCCESS =\n  \"DELETE_ALL_PENDING_TASKS_SUCCESS\";\nexport const DELETE_ALL_PENDING_TASKS_ERROR = \"DELETE_ALL_PENDING_TASKS_ERROR\";\nexport const ARCHIVE_ALL_PENDING_TASKS_BEGIN =\n  \"ARCHIVE_ALL_PENDING_TASKS_BEGIN\";\nexport const ARCHIVE_ALL_PENDING_TASKS_SUCCESS =\n  \"ARCHIVE_ALL_PENDING_TASKS_SUCCESS\";\nexport const ARCHIVE_ALL_PENDING_TASKS_ERROR =\n  \"ARCHIVE_ALL_PENDING_TASKS_ERROR\";\nexport const BATCH_RUN_SCHEDULED_TASKS_BEGIN =\n  \"BATCH_RUN_SCHEDULED_TASKS_BEGIN\";\nexport const BATCH_RUN_SCHEDULED_TASKS_SUCCESS =\n  \"BATCH_RUN_SCHEDULED_TASKS_SUCCESS\";\nexport const BATCH_RUN_SCHEDULED_TASKS_ERROR =\n  \"BATCH_RUN_SCHEDULED_TASKS_ERROR\";\nexport const BATCH_ARCHIVE_SCHEDULED_TASKS_BEGIN =\n  \"BATCH_ARCHIVE_SCHEDULED_TASKS_BEGIN\";\nexport const BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS =\n  \"BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS\";\nexport const BATCH_ARCHIVE_SCHEDULED_TASKS_ERROR =\n  \"BATCH_RUN_SCHEDULED_TASKS_ERROR\";\nexport const BATCH_DELETE_SCHEDULED_TASKS_BEGIN =\n  \"BATCH_DELETE_SCHEDULED_TASKS_BEGIN\";\nexport const BATCH_DELETE_SCHEDULED_TASKS_SUCCESS =\n  \"BATCH_DELETE_SCHEDULED_TASKS_SUCCESS\";\nexport const BATCH_DELETE_SCHEDULED_TASKS_ERROR =\n  \"BATCH_DELETE_SCHEDULED_TASKS_ERROR\";\nexport const RUN_ALL_SCHEDULED_TASKS_BEGIN = \"RUN_ALL_SCHEDULED_TASKS_BEGIN\";\nexport const RUN_ALL_SCHEDULED_TASKS_SUCCESS =\n  \"RUN_ALL_SCHEDULED_TASKS_SUCCESS\";\nexport const RUN_ALL_SCHEDULED_TASKS_ERROR = \"RUN_ALL_SCHEDULED_TASKS_ERROR\";\nexport const ARCHIVE_ALL_SCHEDULED_TASKS_BEGIN =\n  \"ARCHIVE_ALL_SCHEDULED_TASKS_BEGIN\";\nexport const ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS =\n  \"ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS\";\nexport const ARCHIVE_ALL_SCHEDULED_TASKS_ERROR =\n  \"ARCHIVE_ALL_SCHEDULED_TASKS_ERROR\";\nexport const DELETE_ALL_SCHEDULED_TASKS_BEGIN =\n  \"DELETE_ALL_SCHEDULED_TASKS_BEGIN\";\nexport const DELETE_ALL_SCHEDULED_TASKS_SUCCESS =\n  \"DELETE_ALL_SCHEDULED_TASKS_SUCCESS\";\nexport const DELETE_ALL_SCHEDULED_TASKS_ERROR =\n  \"DELETE_ALL_SCHEDULED_TASKS_ERROR\";\nexport const DELETE_RETRY_TASK_BEGIN = \"DELETE_RETRY_TASK_BEGIN\";\nexport const DELETE_RETRY_TASK_SUCCESS = \"DELETE_RETRY_TASK_SUCCESS\";\nexport const DELETE_RETRY_TASK_ERROR = \"DELETE_RETRY_TASK_ERROR\";\nexport const BATCH_RUN_RETRY_TASKS_BEGIN = \"BATCH_RUN_RETRY_TASKS_BEGIN\";\nexport const BATCH_RUN_RETRY_TASKS_SUCCESS = \"BATCH_RUN_RETRY_TASKS_SUCCESS\";\nexport const BATCH_RUN_RETRY_TASKS_ERROR = \"BATCH_RUN_RETRY_TASKS_ERROR\";\nexport const BATCH_ARCHIVE_RETRY_TASKS_BEGIN =\n  \"BATCH_ARCHIVE_RETRY_TASKS_BEGIN\";\nexport const BATCH_ARCHIVE_RETRY_TASKS_SUCCESS =\n  \"BATCH_ARCHIVE_RETRY_TASKS_SUCCESS\";\nexport const BATCH_ARCHIVE_RETRY_TASKS_ERROR =\n  \"BATCH_ARCHIVE_RETRY_TASKS_ERROR\";\nexport const BATCH_DELETE_RETRY_TASKS_BEGIN = \"BATCH_DELETE_RETRY_TASKS_BEGIN\";\nexport const BATCH_DELETE_RETRY_TASKS_SUCCESS =\n  \"BATCH_DELETE_RETRY_TASKS_SUCCESS\";\nexport const BATCH_DELETE_RETRY_TASKS_ERROR = \"BATCH_DELETE_RETRY_TASKS_ERROR\";\nexport const RUN_ALL_RETRY_TASKS_BEGIN = \"RUN_ALL_RETRY_TASKS_BEGIN\";\nexport const RUN_ALL_RETRY_TASKS_SUCCESS = \"RUN_ALL_RETRY_TASKS_SUCCESS\";\nexport const RUN_ALL_RETRY_TASKS_ERROR = \"RUN_ALL_RETRY_TASKS_ERROR\";\nexport const ARCHIVE_ALL_RETRY_TASKS_BEGIN = \"ARCHIVE_ALL_RETRY_TASKS_BEGIN\";\nexport const ARCHIVE_ALL_RETRY_TASKS_SUCCESS =\n  \"ARCHIVE_ALL_RETRY_TASKS_SUCCESS\";\nexport const ARCHIVE_ALL_RETRY_TASKS_ERROR = \"ARCHIVE_ALL_RETRY_TASKS_ERROR\";\nexport const DELETE_ALL_RETRY_TASKS_BEGIN = \"DELETE_ALL_RETRY_TASKS_BEGIN\";\nexport const DELETE_ALL_RETRY_TASKS_SUCCESS = \"DELETE_ALL_RETRY_TASKS_SUCCESS\";\nexport const DELETE_ALL_RETRY_TASKS_ERROR = \"DELETE_ALL_RETRY_TASKS_ERROR\";\nexport const DELETE_ARCHIVED_TASK_BEGIN = \"DELETE_ARCHIVED_TASK_BEGIN\";\nexport const DELETE_ARCHIVED_TASK_SUCCESS = \"DELETE_ARCHIVED_TASK_SUCCESS\";\nexport const DELETE_ARCHIVED_TASK_ERROR = \"DELETE_ARCHIVED_TASK_ERROR\";\nexport const BATCH_RUN_ARCHIVED_TASKS_BEGIN = \"BATCH_RUN_ARCHIVED_TASKS_BEGIN\";\nexport const BATCH_RUN_ARCHIVED_TASKS_SUCCESS =\n  \"BATCH_RUN_ARCHIVED_TASKS_SUCCESS\";\nexport const BATCH_RUN_ARCHIVED_TASKS_ERROR = \"BATCH_RUN_ARCHIVED_TASKS_ERROR\";\nexport const BATCH_DELETE_ARCHIVED_TASKS_BEGIN =\n  \"BATCH_DELETE_ARCHIVED_TASKS_BEGIN\";\nexport const BATCH_DELETE_ARCHIVED_TASKS_SUCCESS =\n  \"BATCH_DELETE_ARCHIVED_TASKS_SUCCESS\";\nexport const BATCH_DELETE_ARCHIVED_TASKS_ERROR =\n  \"BATCH_DELETE_ARCHIVED_TASKS_ERROR\";\nexport const RUN_ALL_ARCHIVED_TASKS_BEGIN = \"RUN_ALL_ARCHIVED_TASKS_BEGIN\";\nexport const RUN_ALL_ARCHIVED_TASKS_SUCCESS = \"RUN_ALL_ARCHIVED_TASKS_SUCCESS\";\nexport const RUN_ALL_ARCHIVED_TASKS_ERROR = \"RUN_ALL_ARCHIVED_TASKS_ERROR\";\nexport const DELETE_ALL_ARCHIVED_TASKS_BEGIN =\n  \"DELETE_ALL_ARCHIVED_TASKS_BEGIN\";\nexport const DELETE_ALL_ARCHIVED_TASKS_SUCCESS =\n  \"DELETE_ALL_ARCHIVED_TASKS_SUCCESS\";\nexport const DELETE_ALL_ARCHIVED_TASKS_ERROR =\n  \"DELETE_ALL_ARCHIVED_TASKS_ERROR\";\nexport const DELETE_COMPLETED_TASK_BEGIN = \"DELETE_COMPLETED_TASK_BEGIN\";\nexport const DELETE_COMPLETED_TASK_SUCCESS = \"DELETE_COMPLETED_TASK_SUCCESS\";\nexport const DELETE_COMPLETED_TASK_ERROR = \"DELETE_COMPLETED_TASK_ERROR\";\nexport const DELETE_ALL_COMPLETED_TASKS_BEGIN =\n  \"DELETE_ALL_COMPLETED_TASKS_BEGIN\";\nexport const DELETE_ALL_COMPLETED_TASKS_SUCCESS =\n  \"DELETE_ALL_COMPLETED_TASKS_SUCCESS\";\nexport const DELETE_ALL_COMPLETED_TASKS_ERROR =\n  \"DELETE_ALL_COMPLETED_TASKS_ERROR\";\nexport const BATCH_DELETE_COMPLETED_TASKS_BEGIN =\n  \"BATCH_DELETE_COMPLETED_TASKS_BEGIN\";\nexport const BATCH_DELETE_COMPLETED_TASKS_SUCCESS =\n  \"BATCH_DELETE_COMPLETED_TASKS_SUCCESS\";\nexport const BATCH_DELETE_COMPLETED_TASKS_ERROR =\n  \"BATCH_DELETE_COMPLETED_TASKS_ERROR\";\n\ninterface GetTaskInfoBeginAction {\n  type: typeof GET_TASK_INFO_BEGIN;\n}\n\ninterface GetTaskInfoErrorAction {\n  type: typeof GET_TASK_INFO_ERROR;\n  error: string; // error description\n}\n\ninterface GetTaskInfoSuccessAction {\n  type: typeof GET_TASK_INFO_SUCCESS;\n  payload: TaskInfo;\n}\n\ninterface ListActiveTasksBeginAction {\n  type: typeof LIST_ACTIVE_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ListActiveTasksSuccessAction {\n  type: typeof LIST_ACTIVE_TASKS_SUCCESS;\n  queue: string;\n  payload: ListTasksResponse;\n}\n\ninterface ListActiveTasksErrorAction {\n  type: typeof LIST_ACTIVE_TASKS_ERROR;\n  queue: string;\n  error: string; // error description\n}\n\ninterface ListPendingTasksBeginAction {\n  type: typeof LIST_PENDING_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ListPendingTasksSuccessAction {\n  type: typeof LIST_PENDING_TASKS_SUCCESS;\n  queue: string;\n  payload: ListTasksResponse;\n}\n\ninterface ListPendingTasksErrorAction {\n  type: typeof LIST_PENDING_TASKS_ERROR;\n  queue: string;\n  error: string; // error description\n}\n\ninterface ListScheduledTasksBeginAction {\n  type: typeof LIST_SCHEDULED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ListScheduledTasksSuccessAction {\n  type: typeof LIST_SCHEDULED_TASKS_SUCCESS;\n  queue: string;\n  payload: ListTasksResponse;\n}\n\ninterface ListScheduledTasksErrorAction {\n  type: typeof LIST_SCHEDULED_TASKS_ERROR;\n  queue: string;\n  error: string; // error description\n}\n\ninterface ListRetryTasksBeginAction {\n  type: typeof LIST_RETRY_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ListRetryTasksSuccessAction {\n  type: typeof LIST_RETRY_TASKS_SUCCESS;\n  queue: string;\n  payload: ListTasksResponse;\n}\n\ninterface ListRetryTasksErrorAction {\n  type: typeof LIST_RETRY_TASKS_ERROR;\n  queue: string;\n  error: string; // error description\n}\n\ninterface ListArchivedTasksBeginAction {\n  type: typeof LIST_ARCHIVED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ListArchivedTasksSuccessAction {\n  type: typeof LIST_ARCHIVED_TASKS_SUCCESS;\n  queue: string;\n  payload: ListTasksResponse;\n}\n\ninterface ListArchivedTasksErrorAction {\n  type: typeof LIST_ARCHIVED_TASKS_ERROR;\n  queue: string;\n  error: string; // error description\n}\n\ninterface ListCompletedTasksBeginAction {\n  type: typeof LIST_COMPLETED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ListCompletedTasksSuccessAction {\n  type: typeof LIST_COMPLETED_TASKS_SUCCESS;\n  queue: string;\n  payload: ListTasksResponse;\n}\n\ninterface ListCompletedTasksErrorAction {\n  type: typeof LIST_COMPLETED_TASKS_ERROR;\n  queue: string;\n  error: string; // error description\n}\n\ninterface CancelActiveTaskBeginAction {\n  type: typeof CANCEL_ACTIVE_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface CancelActiveTaskSuccessAction {\n  type: typeof CANCEL_ACTIVE_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface CancelActiveTaskErrorAction {\n  type: typeof CANCEL_ACTIVE_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface CancelAllActiveTasksBeginAction {\n  type: typeof CANCEL_ALL_ACTIVE_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface CancelAllActiveTasksSuccessAction {\n  type: typeof CANCEL_ALL_ACTIVE_TASKS_SUCCESS;\n  queue: string;\n}\n\ninterface CancelAllActiveTasksErrorAction {\n  type: typeof CANCEL_ALL_ACTIVE_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface BatchCancelActiveTasksBeginAction {\n  type: typeof BATCH_CANCEL_ACTIVE_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchCancelActiveTasksSuccessAction {\n  type: typeof BATCH_CANCEL_ACTIVE_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchCancelTasksResponse;\n}\n\ninterface BatchCancelActiveTasksErrorAction {\n  type: typeof BATCH_CANCEL_ACTIVE_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface DeletePendingTaskBeginAction {\n  type: typeof DELETE_PENDING_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeletePendingTaskSuccessAction {\n  type: typeof DELETE_PENDING_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeletePendingTaskErrorAction {\n  type: typeof DELETE_PENDING_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface BatchDeletePendingTasksBeginAction {\n  type: typeof BATCH_DELETE_PENDING_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchDeletePendingTasksSuccessAction {\n  type: typeof BATCH_DELETE_PENDING_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchDeleteTasksResponse;\n}\n\ninterface BatchDeletePendingTasksErrorAction {\n  type: typeof BATCH_DELETE_PENDING_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface DeleteAllPendingTasksBeginAction {\n  type: typeof DELETE_ALL_PENDING_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface DeleteAllPendingTasksSuccessAction {\n  type: typeof DELETE_ALL_PENDING_TASKS_SUCCESS;\n  queue: string;\n  deleted: number;\n}\n\ninterface DeleteAllPendingTasksErrorAction {\n  type: typeof DELETE_ALL_PENDING_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface ArchivePendingTaskBeginAction {\n  type: typeof ARCHIVE_PENDING_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface ArchivePendingTaskSuccessAction {\n  type: typeof ARCHIVE_PENDING_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface ArchivePendingTaskErrorAction {\n  type: typeof ARCHIVE_PENDING_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface BatchArchivePendingTasksBeginAction {\n  type: typeof BATCH_ARCHIVE_PENDING_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchArchivePendingTasksSuccessAction {\n  type: typeof BATCH_ARCHIVE_PENDING_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchArchiveTasksResponse;\n}\n\ninterface BatchArchivePendingTasksErrorAction {\n  type: typeof BATCH_ARCHIVE_PENDING_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface ArchiveAllPendingTasksBeginAction {\n  type: typeof ARCHIVE_ALL_PENDING_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ArchiveAllPendingTasksSuccessAction {\n  type: typeof ARCHIVE_ALL_PENDING_TASKS_SUCCESS;\n  queue: string;\n}\n\ninterface ArchiveAllPendingTasksErrorAction {\n  type: typeof ARCHIVE_ALL_PENDING_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface RunScheduledTaskBeginAction {\n  type: typeof RUN_SCHEDULED_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface RunScheduledTaskSuccessAction {\n  type: typeof RUN_SCHEDULED_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface RunScheduledTaskErrorAction {\n  type: typeof RUN_SCHEDULED_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface ArchiveScheduledTaskBeginAction {\n  type: typeof ARCHIVE_SCHEDULED_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface ArchiveScheduledTaskSuccessAction {\n  type: typeof ARCHIVE_SCHEDULED_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface ArchiveScheduledTaskErrorAction {\n  type: typeof ARCHIVE_SCHEDULED_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface RunRetryTaskBeginAction {\n  type: typeof RUN_RETRY_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface RunRetryTaskSuccessAction {\n  type: typeof RUN_RETRY_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface RunRetryTaskErrorAction {\n  type: typeof RUN_RETRY_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface ArchiveRetryTaskBeginAction {\n  type: typeof ARCHIVE_RETRY_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface ArchiveRetryTaskSuccessAction {\n  type: typeof ARCHIVE_RETRY_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface ArchiveRetryTaskErrorAction {\n  type: typeof ARCHIVE_RETRY_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface RunArchivedTaskBeginAction {\n  type: typeof RUN_ARCHIVED_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface RunArchivedTaskSuccessAction {\n  type: typeof RUN_ARCHIVED_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface RunArchivedTaskErrorAction {\n  type: typeof RUN_ARCHIVED_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface DeleteScheduledTaskBeginAction {\n  type: typeof DELETE_SCHEDULED_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteScheduledTaskSuccessAction {\n  type: typeof DELETE_SCHEDULED_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteScheduledTaskErrorAction {\n  type: typeof DELETE_SCHEDULED_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface BatchDeleteScheduledTasksBeginAction {\n  type: typeof BATCH_DELETE_SCHEDULED_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchDeleteScheduledTasksSuccessAction {\n  type: typeof BATCH_DELETE_SCHEDULED_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchDeleteTasksResponse;\n}\n\ninterface BatchDeleteScheduledTasksErrorAction {\n  type: typeof BATCH_DELETE_SCHEDULED_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface BatchRunScheduledTasksBeginAction {\n  type: typeof BATCH_RUN_SCHEDULED_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchRunScheduledTasksSuccessAction {\n  type: typeof BATCH_RUN_SCHEDULED_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchRunTasksResponse;\n}\n\ninterface BatchRunScheduledTasksErrorAction {\n  type: typeof BATCH_RUN_SCHEDULED_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface RunAllScheduledTasksBeginAction {\n  type: typeof RUN_ALL_SCHEDULED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface RunAllScheduledTasksSuccessAction {\n  type: typeof RUN_ALL_SCHEDULED_TASKS_SUCCESS;\n  queue: string;\n}\n\ninterface RunAllScheduledTasksErrorAction {\n  type: typeof RUN_ALL_SCHEDULED_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface BatchArchiveScheduledTasksBeginAction {\n  type: typeof BATCH_ARCHIVE_SCHEDULED_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchArchiveScheduledTasksSuccessAction {\n  type: typeof BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchArchiveTasksResponse;\n}\n\ninterface BatchArchiveScheduledTasksErrorAction {\n  type: typeof BATCH_ARCHIVE_SCHEDULED_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface ArchiveAllScheduledTasksBeginAction {\n  type: typeof ARCHIVE_ALL_SCHEDULED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ArchiveAllScheduledTasksSuccessAction {\n  type: typeof ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS;\n  queue: string;\n}\n\ninterface ArchiveAllScheduledTasksErrorAction {\n  type: typeof ARCHIVE_ALL_SCHEDULED_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface DeleteAllScheduledTasksBeginAction {\n  type: typeof DELETE_ALL_SCHEDULED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface DeleteAllScheduledTasksSuccessAction {\n  type: typeof DELETE_ALL_SCHEDULED_TASKS_SUCCESS;\n  queue: string;\n  deleted: number;\n}\n\ninterface DeleteAllScheduledTasksErrorAction {\n  type: typeof DELETE_ALL_SCHEDULED_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface DeleteRetryTaskBeginAction {\n  type: typeof DELETE_RETRY_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteRetryTaskSuccessAction {\n  type: typeof DELETE_RETRY_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteRetryTaskErrorAction {\n  type: typeof DELETE_RETRY_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface BatchDeleteRetryTasksBeginAction {\n  type: typeof BATCH_DELETE_RETRY_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchDeleteRetryTasksSuccessAction {\n  type: typeof BATCH_DELETE_RETRY_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchDeleteTasksResponse;\n}\n\ninterface BatchDeleteRetryTasksErrorAction {\n  type: typeof BATCH_DELETE_RETRY_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface BatchRunRetryTasksBeginAction {\n  type: typeof BATCH_RUN_RETRY_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchRunRetryTasksSuccessAction {\n  type: typeof BATCH_RUN_RETRY_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchRunTasksResponse;\n}\n\ninterface BatchRunRetryTasksErrorAction {\n  type: typeof BATCH_RUN_RETRY_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface RunAllRetryTasksBeginAction {\n  type: typeof RUN_ALL_RETRY_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface RunAllRetryTasksSuccessAction {\n  type: typeof RUN_ALL_RETRY_TASKS_SUCCESS;\n  queue: string;\n}\n\ninterface RunAllRetryTasksErrorAction {\n  type: typeof RUN_ALL_RETRY_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface BatchArchiveRetryTasksBeginAction {\n  type: typeof BATCH_ARCHIVE_RETRY_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchArchiveRetryTasksSuccessAction {\n  type: typeof BATCH_ARCHIVE_RETRY_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchArchiveTasksResponse;\n}\n\ninterface BatchArchiveRetryTasksErrorAction {\n  type: typeof BATCH_ARCHIVE_RETRY_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface ArchiveAllRetryTasksBeginAction {\n  type: typeof ARCHIVE_ALL_RETRY_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ArchiveAllRetryTasksSuccessAction {\n  type: typeof ARCHIVE_ALL_RETRY_TASKS_SUCCESS;\n  queue: string;\n}\n\ninterface ArchiveAllRetryTasksErrorAction {\n  type: typeof ARCHIVE_ALL_RETRY_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface DeleteAllRetryTasksBeginAction {\n  type: typeof DELETE_ALL_RETRY_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface DeleteAllRetryTasksSuccessAction {\n  type: typeof DELETE_ALL_RETRY_TASKS_SUCCESS;\n  queue: string;\n  deleted: number;\n}\n\ninterface DeleteAllRetryTasksErrorAction {\n  type: typeof DELETE_ALL_RETRY_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface DeleteArchivedTaskBeginAction {\n  type: typeof DELETE_ARCHIVED_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteArchivedTaskSuccessAction {\n  type: typeof DELETE_ARCHIVED_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteArchivedTaskErrorAction {\n  type: typeof DELETE_ARCHIVED_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface BatchDeleteArchivedTasksBeginAction {\n  type: typeof BATCH_DELETE_ARCHIVED_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchDeleteArchivedTasksSuccessAction {\n  type: typeof BATCH_DELETE_ARCHIVED_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchDeleteTasksResponse;\n}\n\ninterface BatchDeleteArchivedTasksErrorAction {\n  type: typeof BATCH_DELETE_ARCHIVED_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface BatchRunArchivedTasksBeginAction {\n  type: typeof BATCH_RUN_ARCHIVED_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchRunArchivedTasksSuccessAction {\n  type: typeof BATCH_RUN_ARCHIVED_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchRunTasksResponse;\n}\n\ninterface BatchRunArchivedTasksErrorAction {\n  type: typeof BATCH_RUN_ARCHIVED_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface RunAllArchivedTasksBeginAction {\n  type: typeof RUN_ALL_ARCHIVED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface RunAllArchivedTasksSuccessAction {\n  type: typeof RUN_ALL_ARCHIVED_TASKS_SUCCESS;\n  queue: string;\n}\n\ninterface RunAllArchivedTasksErrorAction {\n  type: typeof RUN_ALL_ARCHIVED_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface DeleteAllArchivedTasksBeginAction {\n  type: typeof DELETE_ALL_ARCHIVED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface DeleteAllArchivedTasksSuccessAction {\n  type: typeof DELETE_ALL_ARCHIVED_TASKS_SUCCESS;\n  queue: string;\n  deleted: number;\n}\n\ninterface DeleteAllArchivedTasksErrorAction {\n  type: typeof DELETE_ALL_ARCHIVED_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface DeleteCompletedTaskBeginAction {\n  type: typeof DELETE_COMPLETED_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteCompletedTaskSuccessAction {\n  type: typeof DELETE_COMPLETED_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteCompletedTaskErrorAction {\n  type: typeof DELETE_COMPLETED_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface BatchDeleteCompletedTasksBeginAction {\n  type: typeof BATCH_DELETE_COMPLETED_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchDeleteCompletedTasksSuccessAction {\n  type: typeof BATCH_DELETE_COMPLETED_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchDeleteTasksResponse;\n}\n\ninterface BatchDeleteCompletedTasksErrorAction {\n  type: typeof BATCH_DELETE_COMPLETED_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface DeleteAllCompletedTasksBeginAction {\n  type: typeof DELETE_ALL_COMPLETED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface DeleteAllCompletedTasksSuccessAction {\n  type: typeof DELETE_ALL_COMPLETED_TASKS_SUCCESS;\n  queue: string;\n  deleted: number;\n}\n\ninterface DeleteAllCompletedTasksErrorAction {\n  type: typeof DELETE_ALL_COMPLETED_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\n// Union of all tasks related action types.\nexport type TasksActionTypes =\n  | GetTaskInfoBeginAction\n  | GetTaskInfoErrorAction\n  | GetTaskInfoSuccessAction\n  | ListActiveTasksBeginAction\n  | ListActiveTasksSuccessAction\n  | ListActiveTasksErrorAction\n  | ListPendingTasksBeginAction\n  | ListPendingTasksSuccessAction\n  | ListPendingTasksErrorAction\n  | ListScheduledTasksBeginAction\n  | ListScheduledTasksSuccessAction\n  | ListScheduledTasksErrorAction\n  | ListRetryTasksBeginAction\n  | ListRetryTasksSuccessAction\n  | ListRetryTasksErrorAction\n  | ListArchivedTasksBeginAction\n  | ListArchivedTasksSuccessAction\n  | ListArchivedTasksErrorAction\n  | ListCompletedTasksBeginAction\n  | ListCompletedTasksSuccessAction\n  | ListCompletedTasksErrorAction\n  | CancelActiveTaskBeginAction\n  | CancelActiveTaskSuccessAction\n  | CancelActiveTaskErrorAction\n  | CancelAllActiveTasksBeginAction\n  | CancelAllActiveTasksSuccessAction\n  | CancelAllActiveTasksErrorAction\n  | BatchCancelActiveTasksBeginAction\n  | BatchCancelActiveTasksSuccessAction\n  | BatchCancelActiveTasksErrorAction\n  | DeletePendingTaskBeginAction\n  | DeletePendingTaskSuccessAction\n  | DeletePendingTaskErrorAction\n  | BatchDeletePendingTasksBeginAction\n  | BatchDeletePendingTasksSuccessAction\n  | BatchDeletePendingTasksErrorAction\n  | DeleteAllPendingTasksBeginAction\n  | DeleteAllPendingTasksSuccessAction\n  | DeleteAllPendingTasksErrorAction\n  | ArchivePendingTaskBeginAction\n  | ArchivePendingTaskSuccessAction\n  | ArchivePendingTaskErrorAction\n  | BatchArchivePendingTasksBeginAction\n  | BatchArchivePendingTasksSuccessAction\n  | BatchArchivePendingTasksErrorAction\n  | ArchiveAllPendingTasksBeginAction\n  | ArchiveAllPendingTasksSuccessAction\n  | ArchiveAllPendingTasksErrorAction\n  | RunScheduledTaskBeginAction\n  | RunScheduledTaskSuccessAction\n  | RunScheduledTaskErrorAction\n  | RunRetryTaskBeginAction\n  | RunRetryTaskSuccessAction\n  | RunRetryTaskErrorAction\n  | RunArchivedTaskBeginAction\n  | RunArchivedTaskSuccessAction\n  | RunArchivedTaskErrorAction\n  | ArchiveScheduledTaskBeginAction\n  | ArchiveScheduledTaskSuccessAction\n  | ArchiveScheduledTaskErrorAction\n  | ArchiveRetryTaskBeginAction\n  | ArchiveRetryTaskSuccessAction\n  | ArchiveRetryTaskErrorAction\n  | DeleteScheduledTaskBeginAction\n  | DeleteScheduledTaskSuccessAction\n  | DeleteScheduledTaskErrorAction\n  | BatchDeleteScheduledTasksBeginAction\n  | BatchDeleteScheduledTasksSuccessAction\n  | BatchDeleteScheduledTasksErrorAction\n  | BatchRunScheduledTasksBeginAction\n  | BatchRunScheduledTasksSuccessAction\n  | BatchRunScheduledTasksErrorAction\n  | RunAllScheduledTasksBeginAction\n  | RunAllScheduledTasksSuccessAction\n  | RunAllScheduledTasksErrorAction\n  | BatchArchiveScheduledTasksBeginAction\n  | BatchArchiveScheduledTasksSuccessAction\n  | BatchArchiveScheduledTasksErrorAction\n  | ArchiveAllScheduledTasksBeginAction\n  | ArchiveAllScheduledTasksSuccessAction\n  | ArchiveAllScheduledTasksErrorAction\n  | DeleteAllScheduledTasksBeginAction\n  | DeleteAllScheduledTasksSuccessAction\n  | DeleteAllScheduledTasksErrorAction\n  | DeleteRetryTaskBeginAction\n  | DeleteRetryTaskSuccessAction\n  | DeleteRetryTaskErrorAction\n  | BatchDeleteRetryTasksBeginAction\n  | BatchDeleteRetryTasksSuccessAction\n  | BatchDeleteRetryTasksErrorAction\n  | BatchRunRetryTasksBeginAction\n  | BatchRunRetryTasksSuccessAction\n  | BatchRunRetryTasksErrorAction\n  | RunAllRetryTasksBeginAction\n  | RunAllRetryTasksSuccessAction\n  | RunAllRetryTasksErrorAction\n  | BatchArchiveRetryTasksBeginAction\n  | BatchArchiveRetryTasksSuccessAction\n  | BatchArchiveRetryTasksErrorAction\n  | ArchiveAllRetryTasksBeginAction\n  | ArchiveAllRetryTasksSuccessAction\n  | ArchiveAllRetryTasksErrorAction\n  | DeleteAllRetryTasksBeginAction\n  | DeleteAllRetryTasksSuccessAction\n  | DeleteAllRetryTasksErrorAction\n  | DeleteArchivedTaskBeginAction\n  | DeleteArchivedTaskSuccessAction\n  | DeleteArchivedTaskErrorAction\n  | BatchDeleteArchivedTasksBeginAction\n  | BatchDeleteArchivedTasksSuccessAction\n  | BatchDeleteArchivedTasksErrorAction\n  | BatchRunArchivedTasksBeginAction\n  | BatchRunArchivedTasksSuccessAction\n  | BatchRunArchivedTasksErrorAction\n  | RunAllArchivedTasksBeginAction\n  | RunAllArchivedTasksSuccessAction\n  | RunAllArchivedTasksErrorAction\n  | DeleteAllArchivedTasksBeginAction\n  | DeleteAllArchivedTasksSuccessAction\n  | DeleteAllArchivedTasksErrorAction\n  | DeleteCompletedTaskBeginAction\n  | DeleteCompletedTaskSuccessAction\n  | DeleteCompletedTaskErrorAction\n  | BatchDeleteCompletedTasksBeginAction\n  | BatchDeleteCompletedTasksSuccessAction\n  | BatchDeleteCompletedTasksErrorAction\n  | DeleteAllCompletedTasksBeginAction\n  | DeleteAllCompletedTasksSuccessAction\n  | DeleteAllCompletedTasksErrorAction;\n\nexport function getTaskInfoAsync(qname: string, id: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: GET_TASK_INFO_BEGIN });\n    try {\n      const response = await getTaskInfo(qname, id);\n      dispatch({\n        type: GET_TASK_INFO_SUCCESS,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\"getTaskInfoAsync: \", toErrorStringWithHttpStatus(error));\n      dispatch({\n        type: GET_TASK_INFO_ERROR,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function listActiveTasksAsync(\n  qname: string,\n  pageOpts?: PaginationOptions\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: LIST_ACTIVE_TASKS_BEGIN, queue: qname });\n    try {\n      const response = await listActiveTasks(qname, pageOpts);\n      dispatch({\n        type: LIST_ACTIVE_TASKS_SUCCESS,\n        queue: qname,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"listActiveTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_ACTIVE_TASKS_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function listPendingTasksAsync(\n  qname: string,\n  pageOpts?: PaginationOptions\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: LIST_PENDING_TASKS_BEGIN, queue: qname });\n    try {\n      const response = await listPendingTasks(qname, pageOpts);\n      dispatch({\n        type: LIST_PENDING_TASKS_SUCCESS,\n        queue: qname,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"listPendingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_PENDING_TASKS_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function listScheduledTasksAsync(\n  qname: string,\n  pageOpts?: PaginationOptions\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: LIST_SCHEDULED_TASKS_BEGIN, queue: qname });\n    try {\n      const response = await listScheduledTasks(qname, pageOpts);\n      dispatch({\n        type: LIST_SCHEDULED_TASKS_SUCCESS,\n        queue: qname,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"listScheduledTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_SCHEDULED_TASKS_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function listRetryTasksAsync(\n  qname: string,\n  pageOpts?: PaginationOptions\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: LIST_RETRY_TASKS_BEGIN, queue: qname });\n    try {\n      const response = await listRetryTasks(qname, pageOpts);\n      dispatch({\n        type: LIST_RETRY_TASKS_SUCCESS,\n        queue: qname,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"listRetryTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_RETRY_TASKS_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function listArchivedTasksAsync(\n  qname: string,\n  pageOpts?: PaginationOptions\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: LIST_ARCHIVED_TASKS_BEGIN, queue: qname });\n    try {\n      const response = await listArchivedTasks(qname, pageOpts);\n      dispatch({\n        type: LIST_ARCHIVED_TASKS_SUCCESS,\n        queue: qname,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"listArchivedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_ARCHIVED_TASKS_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function listCompletedTasksAsync(\n  qname: string,\n  pageOpts?: PaginationOptions\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    try {\n      dispatch({ type: LIST_COMPLETED_TASKS_BEGIN, queue: qname });\n      const response = await listCompletedTasks(qname, pageOpts);\n      dispatch({\n        type: LIST_COMPLETED_TASKS_SUCCESS,\n        queue: qname,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"listCompletedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_COMPLETED_TASKS_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function cancelActiveTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: CANCEL_ACTIVE_TASK_BEGIN, queue, taskId });\n    try {\n      await cancelActiveTask(queue, taskId);\n      dispatch({ type: CANCEL_ACTIVE_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"cancelActiveTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: CANCEL_ACTIVE_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function cancelAllActiveTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: CANCEL_ALL_ACTIVE_TASKS_BEGIN, queue });\n    try {\n      await cancelAllActiveTasks(queue);\n      dispatch({ type: CANCEL_ALL_ACTIVE_TASKS_SUCCESS, queue });\n    } catch (error) {\n      console.error(\n        \"cancelAllActiveTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: CANCEL_ALL_ACTIVE_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function batchCancelActiveTasksAsync(queue: string, taskIds: string[]) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_CANCEL_ACTIVE_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchCancelActiveTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_CANCEL_ACTIVE_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchCancelActiveTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_CANCEL_ACTIVE_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function runScheduledTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: RUN_SCHEDULED_TASK_BEGIN, queue, taskId });\n    try {\n      await runScheduledTask(queue, taskId);\n      dispatch({ type: RUN_SCHEDULED_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"runScheduledTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: RUN_SCHEDULED_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function runRetryTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: RUN_RETRY_TASK_BEGIN, queue, taskId });\n    try {\n      await runRetryTask(queue, taskId);\n      dispatch({ type: RUN_RETRY_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\"runRetryTaskAsync: \", toErrorStringWithHttpStatus(error));\n      dispatch({\n        type: RUN_RETRY_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function archivePendingTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: ARCHIVE_PENDING_TASK_BEGIN, queue, taskId });\n    try {\n      await archivePendingTask(queue, taskId);\n      dispatch({ type: ARCHIVE_PENDING_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"archivePendingTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: ARCHIVE_PENDING_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function archiveScheduledTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: ARCHIVE_SCHEDULED_TASK_BEGIN, queue, taskId });\n    try {\n      await archiveScheduledTask(queue, taskId);\n      dispatch({ type: ARCHIVE_SCHEDULED_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"archiveScheduledTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: ARCHIVE_SCHEDULED_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function archiveRetryTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: ARCHIVE_RETRY_TASK_BEGIN, queue, taskId });\n    try {\n      await archiveRetryTask(queue, taskId);\n      dispatch({ type: ARCHIVE_RETRY_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"archiveRetryTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: ARCHIVE_RETRY_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function runArchivedTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: RUN_ARCHIVED_TASK_BEGIN, queue, taskId });\n    try {\n      await runArchivedTask(queue, taskId);\n      dispatch({ type: RUN_ARCHIVED_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"runArchivedTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: RUN_ARCHIVED_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function deletePendingTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_PENDING_TASK_BEGIN, queue, taskId });\n    try {\n      await deletePendingTask(queue, taskId);\n      dispatch({ type: DELETE_PENDING_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"deletePendingTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_PENDING_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function batchDeletePendingTasksAsync(queue: string, taskIds: string[]) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_DELETE_PENDING_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchDeletePendingTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_DELETE_PENDING_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchDeletePendingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_DELETE_PENDING_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function deleteScheduledTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_SCHEDULED_TASK_BEGIN, queue, taskId });\n    try {\n      await deleteScheduledTask(queue, taskId);\n      dispatch({ type: DELETE_SCHEDULED_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"deleteScheduledTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_SCHEDULED_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function batchDeleteScheduledTasksAsync(\n  queue: string,\n  taskIds: string[]\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_DELETE_SCHEDULED_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchDeleteScheduledTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_DELETE_SCHEDULED_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchDeleteScheduledTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_DELETE_SCHEDULED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function batchRunScheduledTasksAsync(queue: string, taskIds: string[]) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_RUN_SCHEDULED_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchRunScheduledTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_RUN_SCHEDULED_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchRunScheduledTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_RUN_SCHEDULED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function batchArchiveScheduledTasksAsync(\n  queue: string,\n  taskIds: string[]\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_ARCHIVE_SCHEDULED_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchArchiveScheduledTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchArchiveScheduledTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_ARCHIVE_SCHEDULED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function batchArchivePendingTasksAsync(\n  queue: string,\n  taskIds: string[]\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_ARCHIVE_PENDING_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchArchivePendingTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_ARCHIVE_PENDING_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchArchivePendingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_ARCHIVE_PENDING_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function archiveAllPendingTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: ARCHIVE_ALL_PENDING_TASKS_BEGIN, queue });\n    try {\n      await archiveAllPendingTasks(queue);\n      dispatch({ type: ARCHIVE_ALL_PENDING_TASKS_SUCCESS, queue });\n    } catch (error) {\n      console.error(\n        \"archiveAllPendingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: ARCHIVE_ALL_PENDING_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function deleteAllPendingTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_ALL_PENDING_TASKS_BEGIN, queue });\n    try {\n      const response = await deleteAllPendingTasks(queue);\n      dispatch({\n        type: DELETE_ALL_PENDING_TASKS_SUCCESS,\n        deleted: response.deleted,\n        queue,\n      });\n    } catch (error) {\n      console.error(\n        \"deleteAllPendingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_ALL_PENDING_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function deleteAllScheduledTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_ALL_SCHEDULED_TASKS_BEGIN, queue });\n    try {\n      const response = await deleteAllScheduledTasks(queue);\n      dispatch({\n        type: DELETE_ALL_SCHEDULED_TASKS_SUCCESS,\n        deleted: response.deleted,\n        queue,\n      });\n    } catch (error) {\n      console.error(\n        \"deleteAllScheduledTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_ALL_SCHEDULED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function runAllScheduledTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: RUN_ALL_SCHEDULED_TASKS_BEGIN, queue });\n    try {\n      await runAllScheduledTasks(queue);\n      dispatch({ type: RUN_ALL_SCHEDULED_TASKS_SUCCESS, queue });\n    } catch (error) {\n      console.error(\n        \"runAllScheduledTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: RUN_ALL_SCHEDULED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function archiveAllScheduledTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: ARCHIVE_ALL_SCHEDULED_TASKS_BEGIN, queue });\n    try {\n      await archiveAllScheduledTasks(queue);\n      dispatch({ type: ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS, queue });\n    } catch (error) {\n      console.error(\n        \"archiveAllScheduledTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: ARCHIVE_ALL_SCHEDULED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function deleteRetryTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_RETRY_TASK_BEGIN, queue, taskId });\n    try {\n      await deleteRetryTask(queue, taskId);\n      dispatch({ type: DELETE_RETRY_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"deleteRetryTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_RETRY_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function batchDeleteRetryTasksAsync(queue: string, taskIds: string[]) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_DELETE_RETRY_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchDeleteRetryTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_DELETE_RETRY_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchDeleteRetryTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_DELETE_RETRY_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function batchRunRetryTasksAsync(queue: string, taskIds: string[]) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_RUN_RETRY_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchRunRetryTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_RUN_RETRY_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchRunRetryTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_RUN_RETRY_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function batchArchiveRetryTasksAsync(queue: string, taskIds: string[]) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_ARCHIVE_RETRY_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchArchiveRetryTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_ARCHIVE_RETRY_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchArchiveRetryTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_ARCHIVE_RETRY_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function deleteAllRetryTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_ALL_RETRY_TASKS_BEGIN, queue });\n    try {\n      const response = await deleteAllRetryTasks(queue);\n      dispatch({\n        type: DELETE_ALL_RETRY_TASKS_SUCCESS,\n        deleted: response.deleted,\n        queue,\n      });\n    } catch (error) {\n      console.error(\n        \"deleteAllRetryTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_ALL_RETRY_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function runAllRetryTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: RUN_ALL_RETRY_TASKS_BEGIN, queue });\n    try {\n      await runAllRetryTasks(queue);\n      dispatch({ type: RUN_ALL_RETRY_TASKS_SUCCESS, queue });\n    } catch (error) {\n      console.error(\n        \"runAllRetryTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: RUN_ALL_RETRY_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function archiveAllRetryTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: ARCHIVE_ALL_RETRY_TASKS_BEGIN, queue });\n    try {\n      await archiveAllRetryTasks(queue);\n      dispatch({ type: ARCHIVE_ALL_RETRY_TASKS_SUCCESS, queue });\n    } catch (error) {\n      console.error(\n        \"archiveAllRetryTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: ARCHIVE_ALL_RETRY_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function deleteArchivedTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_ARCHIVED_TASK_BEGIN, queue, taskId });\n    try {\n      await deleteArchivedTask(queue, taskId);\n      dispatch({ type: DELETE_ARCHIVED_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"deleteArchivedTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_ARCHIVED_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function batchDeleteArchivedTasksAsync(\n  queue: string,\n  taskIds: string[]\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_DELETE_ARCHIVED_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchDeleteArchivedTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_DELETE_ARCHIVED_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchDeleteArchivedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_DELETE_ARCHIVED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function batchRunArchivedTasksAsync(queue: string, taskIds: string[]) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_RUN_ARCHIVED_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchRunArchivedTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_RUN_ARCHIVED_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchRunArchivedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_RUN_ARCHIVED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function deleteAllArchivedTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_ALL_ARCHIVED_TASKS_BEGIN, queue });\n    try {\n      const response = await deleteAllArchivedTasks(queue);\n      dispatch({\n        type: DELETE_ALL_ARCHIVED_TASKS_SUCCESS,\n        deleted: response.deleted,\n        queue,\n      });\n    } catch (error) {\n      console.error(\n        \"deleteAllArchivedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_ALL_ARCHIVED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function runAllArchivedTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: RUN_ALL_ARCHIVED_TASKS_BEGIN, queue });\n    try {\n      await runAllArchivedTasks(queue);\n      dispatch({ type: RUN_ALL_ARCHIVED_TASKS_SUCCESS, queue });\n    } catch (error) {\n      console.error(\n        \"runAllArchivedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: RUN_ALL_ARCHIVED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function deleteCompletedTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_COMPLETED_TASK_BEGIN, queue, taskId });\n    try {\n      await deleteCompletedTask(queue, taskId);\n      dispatch({ type: DELETE_COMPLETED_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"deleteCompletedTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_COMPLETED_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function batchDeleteCompletedTasksAsync(\n  queue: string,\n  taskIds: string[]\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_DELETE_COMPLETED_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchDeleteCompletedTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_DELETE_COMPLETED_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchDeleteCompletedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_DELETE_COMPLETED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function deleteAllCompletedTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_ALL_COMPLETED_TASKS_BEGIN, queue });\n    try {\n      const response = await deleteAllCompletedTasks(queue);\n      dispatch({\n        type: DELETE_ALL_COMPLETED_TASKS_SUCCESS,\n        deleted: response.deleted,\n        queue,\n      });\n    } catch (error) {\n      console.error(\n        \"deleteAllCompletedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_ALL_COMPLETED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst useStyles = makeStyles((theme) => ({\n  actionsContainer: {\n    display: \"flex\",\n    padding: \"4px\",\n  },\n  moreIcon: {\n    marginRight: \"8px\",\n  },\n  iconGroup: {\n    paddingLeft: theme.spacing(1),\n    borderLeft: `1px solid ${theme.palette.grey[100]}`,\n  },\n}));\n\ninterface MenuItemAction {\n  label: string;\n  onClick: () => void;\n  disabled: boolean;\n}\n\ninterface IconButtonAction {\n  icon: React.ReactElement;\n  tooltip: string;\n  onClick: () => void;\n  disabled: boolean;\n}\n\ninterface Props {\n  menuItemActions: MenuItemAction[];\n  iconButtonActions: IconButtonAction[];\n  showIconButtons: boolean;\n}\n\nexport default function TableActions(props: Props) {\n  const classes = useStyles();\n  const [menuAnchor, setMenuAnchor] = useState<null | HTMLElement>(null);\n\n  const handleMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setMenuAnchor(event.currentTarget);\n  };\n\n  const closeMenu = () => setMenuAnchor(null);\n\n  return (\n    <div className={classes.actionsContainer}>\n      <Tooltip title=\"More Actions\">\n        <IconButton\n          aria-label=\"actions\"\n          className={classes.moreIcon}\n          onClick={handleMenuClick}\n        >\n          <MoreHorizIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        id=\"action-menu\"\n        keepMounted\n        anchorEl={menuAnchor}\n        open={Boolean(menuAnchor)}\n        onClose={closeMenu}\n      >\n        {props.menuItemActions.map((action) => (\n          <MenuItem\n            key={action.label}\n            onClick={() => {\n              action.onClick();\n              closeMenu();\n            }}\n            disabled={action.disabled}\n          >\n            {action.label}\n          </MenuItem>\n        ))}\n      </Menu>\n      {props.showIconButtons && (\n        <div className={classes.iconGroup}>\n          {props.iconButtonActions.map((action) => (\n            <Tooltip key={action.tooltip} title={action.tooltip}>\n              <IconButton onClick={action.onClick} disabled={action.disabled}>\n                {action.icon}\n              </IconButton>\n            </Tooltip>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport React, { useCallback, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { taskRowsPerPageChange } from \"../actions/settingsActions\";\nimport {\n  batchCancelActiveTasksAsync,\n  cancelActiveTaskAsync,\n  cancelAllActiveTasksAsync,\n  listActiveTasksAsync,\n} from \"../actions/tasksActions\";\nimport { usePolling } from \"../hooks\";\nimport { taskDetailsPath } from \"../paths\";\nimport { ActiveTaskExtended } from \"../reducers/tasksReducer\";\nimport { AppState } from \"../store\";\nimport { TableColumn } from \"../types/table\";\nimport { durationBefore, prettifyPayload, timeAgo, uuidPrefix } from \"../utils\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport TableActions from \"./TableActions\";\nimport TablePaginationActions, {\n  rowsPerPageOptions,\n} from \"./TablePaginationActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  stickyHeaderCell: {\n    background: theme.palette.background.paper,\n  },\n  alert: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n  },\n  pagination: {\n    border: \"none\",\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.tasks.activeTasks.loading,\n    error: state.tasks.activeTasks.error,\n    tasks: state.tasks.activeTasks.data,\n    batchActionPending: state.tasks.activeTasks.batchActionPending,\n    allActionPending: state.tasks.activeTasks.allActionPending,\n    pollInterval: state.settings.pollInterval,\n    pageSize: state.settings.taskRowsPerPage,\n  };\n}\n\nconst mapDispatchToProps = {\n  listActiveTasksAsync,\n  cancelActiveTaskAsync,\n  batchCancelActiveTasksAsync,\n  cancelAllActiveTasksAsync,\n  taskRowsPerPageChange,\n};\n\nconst columns: TableColumn[] = [\n  { key: \"id\", label: \"ID\", align: \"left\" },\n  { key: \"type\", label: \"Type\", align: \"left\" },\n  { key: \"payload\", label: \"Payload\", align: \"left\" },\n  { key: \"status\", label: \"Status\", align: \"left\" },\n  { key: \"start-time\", label: \"Started\", align: \"left\" },\n  { key: \"deadline\", label: \"Deadline\", align: \"left\" },\n  { key: \"actions\", label: \"Actions\", align: \"center\" },\n];\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  queue: string; // name of the queue\n  totalTaskCount: number; // total number of active tasks\n}\n\nfunction ActiveTasksTable(props: Props & ReduxProps) {\n  const { pollInterval, listActiveTasksAsync, queue, pageSize } = props;\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  const [activeTaskId, setActiveTaskId] = useState<string>(\"\");\n\n  const handlePageChange = (\n    event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    props.taskRowsPerPageChange(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = props.tasks.map((t) => t.id);\n      setSelectedIds(newSelected);\n    } else {\n      setSelectedIds([]);\n    }\n  };\n\n  const handleCancelAllClick = () => {\n    props.cancelAllActiveTasksAsync(queue);\n  };\n\n  const handleBatchCancelClick = () => {\n    props\n      .batchCancelActiveTasksAsync(queue, selectedIds)\n      .then(() => setSelectedIds([]));\n  };\n\n  const fetchData = useCallback(() => {\n    const pageOpts = { page: page + 1, size: pageSize };\n    listActiveTasksAsync(queue, pageOpts);\n  }, [page, pageSize, queue, listActiveTasksAsync]);\n\n  usePolling(fetchData, pollInterval);\n\n  if (props.error.length > 0) {\n    return (\n      <Alert severity=\"error\" className={classes.alert}>\n        <AlertTitle>Error</AlertTitle>\n        {props.error}\n      </Alert>\n    );\n  }\n\n  if (props.tasks.length === 0) {\n    return (\n      <Alert severity=\"info\" className={classes.alert}>\n        <AlertTitle>Info</AlertTitle>\n        No active tasks at this time.\n      </Alert>\n    );\n  }\n\n  const rowCount = props.tasks.length;\n  const numSelected = selectedIds.length;\n  return (\n    <div>\n      {!window.READ_ONLY && (\n        <TableActions\n          showIconButtons={numSelected > 0}\n          iconButtonActions={[\n            {\n              tooltip: \"Cancel\",\n              icon: <CancelIcon />,\n              onClick: handleBatchCancelClick,\n              disabled: props.batchActionPending,\n            },\n          ]}\n          menuItemActions={[\n            {\n              label: \"Cancel All\",\n              onClick: handleCancelAllClick,\n              disabled: props.allActionPending,\n            },\n          ]}\n        />\n      )}\n      <TableContainer component={Paper}>\n        <Table\n          stickyHeader={true}\n          className={classes.table}\n          aria-label=\"active tasks table\"\n          size=\"small\"\n        >\n          <TableHead>\n            <TableRow>\n              {!window.READ_ONLY && (\n                <TableCell\n                  padding=\"checkbox\"\n                  classes={{ stickyHeader: classes.stickyHeaderCell }}\n                >\n                  <IconButton>\n                    <Checkbox\n                      indeterminate={numSelected > 0 && numSelected < rowCount}\n                      checked={rowCount > 0 && numSelected === rowCount}\n                      onChange={handleSelectAllClick}\n                      inputProps={{\n                        \"aria-label\": \"select all tasks shown in the table\",\n                      }}\n                    />\n                  </IconButton>\n                </TableCell>\n              )}\n              {columns\n                .filter((col) => {\n                  // Filter out actions column in readonly mode.\n                  return !window.READ_ONLY || col.key !== \"actions\";\n                })\n                .map((col) => (\n                  <TableCell\n                    key={col.key}\n                    align={col.align}\n                    classes={{ stickyHeader: classes.stickyHeaderCell }}\n                  >\n                    {col.label}\n                  </TableCell>\n                ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* TODO: loading and empty state */}\n            {props.tasks.map((task) => (\n              <Row\n                key={task.id}\n                task={task}\n                isSelected={selectedIds.includes(task.id)}\n                onSelectChange={(checked: boolean) => {\n                  if (checked) {\n                    setSelectedIds(selectedIds.concat(task.id));\n                  } else {\n                    setSelectedIds(selectedIds.filter((id) => id !== task.id));\n                  }\n                }}\n                onCancelClick={() => {\n                  props.cancelActiveTaskAsync(queue, task.id);\n                }}\n                onActionCellEnter={() => setActiveTaskId(task.id)}\n                onActionCellLeave={() => setActiveTaskId(\"\")}\n                showActions={activeTaskId === task.id}\n              />\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={rowsPerPageOptions}\n                colSpan={columns.length + 1}\n                count={props.totalTaskCount}\n                rowsPerPage={pageSize}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onPageChange={handlePageChange}\n                onRowsPerPageChange={handleRowsPerPageChange}\n                ActionsComponent={TablePaginationActions}\n                className={classes.pagination}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nconst useRowStyles = makeStyles((theme) => ({\n  root: {\n    cursor: \"pointer\",\n    \"& #copy-button\": {\n      display: \"none\",\n    },\n    \"&:hover\": {\n      boxShadow: theme.shadows[2],\n    },\n    \"&:hover $copyButton\": {\n      display: \"inline-block\",\n    },\n    \"&:hover .MuiTableCell-root\": {\n      borderBottomColor: theme.palette.background.paper,\n    },\n  },\n  idCell: {\n    width: \"200px\",\n  },\n  copyButton: {\n    display: \"none\",\n  },\n  IdGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\ninterface RowProps {\n  task: ActiveTaskExtended;\n  isSelected: boolean;\n  onSelectChange: (checked: boolean) => void;\n  onCancelClick: () => void;\n  showActions: boolean;\n  onActionCellEnter: () => void;\n  onActionCellLeave: () => void;\n}\n\nfunction Row(props: RowProps) {\n  const { task } = props;\n  const classes = useRowStyles();\n  const history = useHistory();\n  return (\n    <TableRow\n      key={task.id}\n      className={classes.root}\n      selected={props.isSelected}\n      onClick={() => history.push(taskDetailsPath(task.queue, task.id))}\n    >\n      {!window.READ_ONLY && (\n        <TableCell padding=\"checkbox\" onClick={(e) => e.stopPropagation()}>\n          <IconButton>\n            <Checkbox\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                props.onSelectChange(event.target.checked)\n              }\n              checked={props.isSelected}\n            />\n          </IconButton>\n        </TableCell>\n      )}\n      <TableCell component=\"th\" scope=\"row\" className={classes.idCell}>\n        <div className={classes.IdGroup}>\n          {uuidPrefix(task.id)}\n          <Tooltip title=\"Copy full ID to clipboard\">\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation();\n                navigator.clipboard.writeText(task.id);\n              }}\n              size=\"small\"\n              className={classes.copyButton}\n            >\n              <FileCopyOutlinedIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </TableCell>\n      <TableCell>{task.type}</TableCell>\n      <TableCell>\n        <SyntaxHighlighter\n          language=\"json\"\n          customStyle={{ margin: 0, maxWidth: 400 }}\n        >\n          {prettifyPayload(task.payload)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell>\n        {task.canceling\n          ? \"Canceling\"\n          : task.is_orphaned\n          ? \"Orphaned\"\n          : \"Running\"}\n      </TableCell>\n      <TableCell>\n        {task.is_orphaned\n          ? \"-\"\n          : task.start_time === \"-\"\n          ? \"just now\"\n          : timeAgo(task.start_time)}\n      </TableCell>\n      <TableCell>\n        {task.deadline === \"-\" ? \"-\" : durationBefore(task.deadline)}\n      </TableCell>\n      {!window.READ_ONLY && (\n        <TableCell\n          align=\"center\"\n          onMouseEnter={props.onActionCellEnter}\n          onMouseLeave={props.onActionCellLeave}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {props.showActions ? (\n            <React.Fragment>\n              <Tooltip title=\"Cancel\">\n                <IconButton\n                  onClick={props.onCancelClick}\n                  disabled={\n                    task.requestPending || task.canceling || task.is_orphaned\n                  }\n                  size=\"small\"\n                >\n                  <CancelIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </React.Fragment>\n          ) : (\n            <IconButton size=\"small\" onClick={props.onActionCellEnter}>\n              <MoreHorizIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\n\nexport default connector(ActiveTasksTable);\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport React, { useCallback, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { taskRowsPerPageChange } from \"../actions/settingsActions\";\nimport {\n  archiveAllPendingTasksAsync,\n  archivePendingTaskAsync,\n  batchArchivePendingTasksAsync,\n  batchDeletePendingTasksAsync,\n  deleteAllPendingTasksAsync,\n  deletePendingTaskAsync,\n  listPendingTasksAsync,\n} from \"../actions/tasksActions\";\nimport { usePolling } from \"../hooks\";\nimport { taskDetailsPath } from \"../paths\";\nimport { TaskInfoExtended } from \"../reducers/tasksReducer\";\nimport { AppState } from \"../store\";\nimport { TableColumn } from \"../types/table\";\nimport { prettifyPayload, uuidPrefix } from \"../utils\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport TableActions from \"./TableActions\";\nimport TablePaginationActions, {\n  rowsPerPageOptions,\n} from \"./TablePaginationActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  stickyHeaderCell: {\n    background: theme.palette.background.paper,\n  },\n  alert: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n  },\n  pagination: {\n    border: \"none\",\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.tasks.pendingTasks.loading,\n    error: state.tasks.pendingTasks.error,\n    tasks: state.tasks.pendingTasks.data,\n    batchActionPending: state.tasks.pendingTasks.batchActionPending,\n    allActionPending: state.tasks.pendingTasks.allActionPending,\n    pollInterval: state.settings.pollInterval,\n    pageSize: state.settings.taskRowsPerPage,\n  };\n}\n\nconst mapDispatchToProps = {\n  listPendingTasksAsync,\n  deletePendingTaskAsync,\n  batchDeletePendingTasksAsync,\n  deleteAllPendingTasksAsync,\n  archivePendingTaskAsync,\n  batchArchivePendingTasksAsync,\n  archiveAllPendingTasksAsync,\n  taskRowsPerPageChange,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  queue: string;\n  totalTaskCount: number; // total number of pending tasks\n}\n\nfunction PendingTasksTable(props: Props & ReduxProps) {\n  const { pollInterval, listPendingTasksAsync, queue, pageSize } = props;\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  const [activeTaskId, setActiveTaskId] = useState<string>(\"\");\n  const handlePageChange = (\n    event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    props.taskRowsPerPageChange(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = props.tasks.map((t) => t.id);\n      setSelectedIds(newSelected);\n    } else {\n      setSelectedIds([]);\n    }\n  };\n\n  const handleDeleteAllClick = () => {\n    props.deleteAllPendingTasksAsync(queue);\n  };\n\n  const handleArchiveAllClick = () => {\n    props.archiveAllPendingTasksAsync(queue);\n  };\n\n  const handleBatchDeleteClick = () => {\n    props\n      .batchDeletePendingTasksAsync(queue, selectedIds)\n      .then(() => setSelectedIds([]));\n  };\n\n  const handleBatchArchiveClick = () => {\n    props\n      .batchArchivePendingTasksAsync(queue, selectedIds)\n      .then(() => setSelectedIds([]));\n  };\n\n  const fetchData = useCallback(() => {\n    const pageOpts = { page: page + 1, size: pageSize };\n    listPendingTasksAsync(queue, pageOpts);\n  }, [page, pageSize, queue, listPendingTasksAsync]);\n\n  usePolling(fetchData, pollInterval);\n\n  if (props.error.length > 0) {\n    return (\n      <Alert severity=\"error\" className={classes.alert}>\n        <AlertTitle>Error</AlertTitle>\n        {props.error}\n      </Alert>\n    );\n  }\n  if (props.tasks.length === 0) {\n    return (\n      <Alert severity=\"info\" className={classes.alert}>\n        <AlertTitle>Info</AlertTitle>\n        No pending tasks at this time.\n      </Alert>\n    );\n  }\n\n  const columns: TableColumn[] = [\n    { key: \"id\", label: \"ID\", align: \"left\" },\n    { key: \"type\", label: \"Type\", align: \"left\" },\n    { key: \"paylod\", label: \"Payload\", align: \"left\" },\n    { key: \"retried\", label: \"Retried\", align: \"right\" },\n    { key: \"max_retry\", label: \"Max Retry\", align: \"right\" },\n    { key: \"actions\", label: \"Actions\", align: \"center\" },\n  ];\n\n  const rowCount = props.tasks.length;\n  const numSelected = selectedIds.length;\n  return (\n    <div>\n      {!window.READ_ONLY && (\n        <TableActions\n          showIconButtons={numSelected > 0}\n          iconButtonActions={[\n            {\n              tooltip: \"Delete\",\n              icon: <DeleteIcon />,\n              onClick: handleBatchDeleteClick,\n              disabled: props.batchActionPending,\n            },\n            {\n              tooltip: \"Archive\",\n              icon: <ArchiveIcon />,\n              onClick: handleBatchArchiveClick,\n              disabled: props.batchActionPending,\n            },\n          ]}\n          menuItemActions={[\n            {\n              label: \"Delete All\",\n              onClick: handleDeleteAllClick,\n              disabled: props.allActionPending,\n            },\n            {\n              label: \"Archive All\",\n              onClick: handleArchiveAllClick,\n              disabled: props.allActionPending,\n            },\n          ]}\n        />\n      )}\n      <TableContainer component={Paper}>\n        <Table\n          stickyHeader={true}\n          className={classes.table}\n          aria-label=\"pending tasks table\"\n          size=\"small\"\n        >\n          <TableHead>\n            <TableRow>\n              {!window.READ_ONLY && (\n                <TableCell\n                  padding=\"checkbox\"\n                  classes={{ stickyHeader: classes.stickyHeaderCell }}\n                >\n                  <IconButton>\n                    <Checkbox\n                      indeterminate={numSelected > 0 && numSelected < rowCount}\n                      checked={rowCount > 0 && numSelected === rowCount}\n                      onChange={handleSelectAllClick}\n                      inputProps={{\n                        \"aria-label\": \"select all tasks shown in the table\",\n                      }}\n                    />\n                  </IconButton>\n                </TableCell>\n              )}\n              {columns\n                .filter((col) => {\n                  // Filter out actions column in readonly mode.\n                  return !window.READ_ONLY || col.key !== \"actions\";\n                })\n                .map((col) => (\n                  <TableCell\n                    key={col.key}\n                    align={col.align}\n                    classes={{\n                      stickyHeader: classes.stickyHeaderCell,\n                    }}\n                  >\n                    {col.label}\n                  </TableCell>\n                ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.tasks.map((task) => (\n              <Row\n                key={task.id}\n                task={task}\n                isSelected={selectedIds.includes(task.id)}\n                onSelectChange={(checked: boolean) => {\n                  if (checked) {\n                    setSelectedIds(selectedIds.concat(task.id));\n                  } else {\n                    setSelectedIds(selectedIds.filter((id) => id !== task.id));\n                  }\n                }}\n                allActionPending={props.allActionPending}\n                onDeleteClick={() =>\n                  props.deletePendingTaskAsync(queue, task.id)\n                }\n                onArchiveClick={() => {\n                  props.archivePendingTaskAsync(queue, task.id);\n                }}\n                onActionCellEnter={() => setActiveTaskId(task.id)}\n                onActionCellLeave={() => setActiveTaskId(\"\")}\n                showActions={activeTaskId === task.id}\n              />\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={rowsPerPageOptions}\n                colSpan={columns.length + 1}\n                count={props.totalTaskCount}\n                rowsPerPage={pageSize}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onPageChange={handlePageChange}\n                onRowsPerPageChange={handleRowsPerPageChange}\n                ActionsComponent={TablePaginationActions}\n                className={classes.pagination}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nconst useRowStyles = makeStyles((theme) => ({\n  root: {\n    cursor: \"pointer\",\n    \"& #copy-button\": {\n      display: \"none\",\n    },\n    \"&:hover\": {\n      boxShadow: theme.shadows[2],\n      \"& #copy-button\": {\n        display: \"inline-block\",\n      },\n    },\n    \"&:hover $copyButton\": {\n      display: \"inline-block\",\n    },\n    \"&:hover .MuiTableCell-root\": {\n      borderBottomColor: theme.palette.background.paper,\n    },\n  },\n\n  actionCell: {\n    width: \"96px\",\n  },\n  actionButton: {\n    marginLeft: 3,\n    marginRight: 3,\n  },\n  idCell: {\n    width: \"200px\",\n  },\n  copyButton: {\n    display: \"none\",\n  },\n  IdGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\ninterface RowProps {\n  task: TaskInfoExtended;\n  isSelected: boolean;\n  onSelectChange: (checked: boolean) => void;\n  onDeleteClick: () => void;\n  onArchiveClick: () => void;\n  allActionPending: boolean;\n  showActions: boolean;\n  onActionCellEnter: () => void;\n  onActionCellLeave: () => void;\n}\n\nfunction Row(props: RowProps) {\n  const { task } = props;\n  const classes = useRowStyles();\n  const history = useHistory();\n  return (\n    <TableRow\n      key={task.id}\n      className={classes.root}\n      selected={props.isSelected}\n      onClick={() => history.push(taskDetailsPath(task.queue, task.id))}\n    >\n      {!window.READ_ONLY && (\n        <TableCell padding=\"checkbox\" onClick={(e) => e.stopPropagation()}>\n          <IconButton>\n            <Checkbox\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                props.onSelectChange(event.target.checked)\n              }\n              checked={props.isSelected}\n            />\n          </IconButton>\n        </TableCell>\n      )}\n      <TableCell component=\"th\" scope=\"row\" className={classes.idCell}>\n        <div className={classes.IdGroup}>\n          {uuidPrefix(task.id)}\n          <Tooltip title=\"Copy full ID to clipboard\">\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation();\n                navigator.clipboard.writeText(task.id);\n              }}\n              size=\"small\"\n              className={classes.copyButton}\n            >\n              <FileCopyOutlinedIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </TableCell>\n      <TableCell>{task.type}</TableCell>\n      <TableCell>\n        <SyntaxHighlighter\n          language=\"json\"\n          customStyle={{ margin: 0, maxWidth: 400 }}\n        >\n          {prettifyPayload(task.payload)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell align=\"right\">{task.retried}</TableCell>\n      <TableCell align=\"right\">{task.max_retry}</TableCell>\n      {!window.READ_ONLY && (\n        <TableCell\n          align=\"center\"\n          className={classes.actionCell}\n          onMouseEnter={props.onActionCellEnter}\n          onMouseLeave={props.onActionCellLeave}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {props.showActions ? (\n            <React.Fragment>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  onClick={props.onDeleteClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <DeleteIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Archive\">\n                <IconButton\n                  onClick={props.onArchiveClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <ArchiveIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </React.Fragment>\n          ) : (\n            <IconButton size=\"small\" onClick={props.onActionCellEnter}>\n              <MoreHorizIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\n\nexport default connector(PendingTasksTable);\n","import React, { useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport {\n  batchDeleteScheduledTasksAsync,\n  batchRunScheduledTasksAsync,\n  batchArchiveScheduledTasksAsync,\n  deleteAllScheduledTasksAsync,\n  runAllScheduledTasksAsync,\n  archiveAllScheduledTasksAsync,\n  listScheduledTasksAsync,\n  deleteScheduledTaskAsync,\n  runScheduledTaskAsync,\n  archiveScheduledTaskAsync,\n} from \"../actions/tasksActions\";\nimport { taskRowsPerPageChange } from \"../actions/settingsActions\";\nimport { AppState } from \"../store\";\nimport TablePaginationActions, {\n  rowsPerPageOptions,\n} from \"./TablePaginationActions\";\nimport TableActions from \"./TableActions\";\nimport { durationBefore, uuidPrefix, prettifyPayload } from \"../utils\";\nimport { usePolling } from \"../hooks\";\nimport { TaskInfoExtended } from \"../reducers/tasksReducer\";\nimport { TableColumn } from \"../types/table\";\nimport { taskDetailsPath } from \"../paths\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  stickyHeaderCell: {\n    background: theme.palette.background.paper,\n  },\n  alert: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n  },\n  pagination: {\n    border: \"none\",\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.tasks.scheduledTasks.loading,\n    error: state.tasks.scheduledTasks.error,\n    tasks: state.tasks.scheduledTasks.data,\n    batchActionPending: state.tasks.scheduledTasks.batchActionPending,\n    allActionPending: state.tasks.scheduledTasks.allActionPending,\n    pollInterval: state.settings.pollInterval,\n    pageSize: state.settings.taskRowsPerPage,\n  };\n}\n\nconst mapDispatchToProps = {\n  listScheduledTasksAsync,\n  batchDeleteScheduledTasksAsync,\n  batchRunScheduledTasksAsync,\n  batchArchiveScheduledTasksAsync,\n  deleteAllScheduledTasksAsync,\n  runAllScheduledTasksAsync,\n  archiveAllScheduledTasksAsync,\n  deleteScheduledTaskAsync,\n  runScheduledTaskAsync,\n  archiveScheduledTaskAsync,\n  taskRowsPerPageChange,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  queue: string; // name of the queue.\n  totalTaskCount: number; // totoal number of scheduled tasks.\n}\n\nfunction ScheduledTasksTable(props: Props & ReduxProps) {\n  const { pollInterval, listScheduledTasksAsync, queue, pageSize } = props;\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  const [activeTaskId, setActiveTaskId] = useState<string>(\"\");\n\n  const handlePageChange = (\n    event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    props.taskRowsPerPageChange(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = props.tasks.map((t) => t.id);\n      setSelectedIds(newSelected);\n    } else {\n      setSelectedIds([]);\n    }\n  };\n\n  const handleRunAllClick = () => {\n    props.runAllScheduledTasksAsync(queue);\n  };\n\n  const handleDeleteAllClick = () => {\n    props.deleteAllScheduledTasksAsync(queue);\n  };\n\n  const handleArchiveAllClick = () => {\n    props.archiveAllScheduledTasksAsync(queue);\n  };\n\n  const handleBatchRunClick = () => {\n    props\n      .batchRunScheduledTasksAsync(queue, selectedIds)\n      .then(() => setSelectedIds([]));\n  };\n\n  const handleBatchDeleteClick = () => {\n    props\n      .batchDeleteScheduledTasksAsync(queue, selectedIds)\n      .then(() => setSelectedIds([]));\n  };\n\n  const handleBatchArchiveClick = () => {\n    props\n      .batchArchiveScheduledTasksAsync(queue, selectedIds)\n      .then(() => setSelectedIds([]));\n  };\n\n  const fetchData = useCallback(() => {\n    const pageOpts = { page: page + 1, size: pageSize };\n    listScheduledTasksAsync(queue, pageOpts);\n  }, [page, pageSize, queue, listScheduledTasksAsync]);\n\n  usePolling(fetchData, pollInterval);\n\n  if (props.error.length > 0) {\n    return (\n      <Alert severity=\"error\" className={classes.alert}>\n        <AlertTitle>Error</AlertTitle>\n        {props.error}\n      </Alert>\n    );\n  }\n  if (props.tasks.length === 0) {\n    return (\n      <Alert severity=\"info\" className={classes.alert}>\n        <AlertTitle>Info</AlertTitle>\n        No scheduled tasks at this time.\n      </Alert>\n    );\n  }\n\n  const columns: TableColumn[] = [\n    { key: \"id\", label: \"ID\", align: \"left\" },\n    { key: \"type\", label: \"Type\", align: \"left\" },\n    { key: \"payload\", label: \"Payload\", align: \"left\" },\n    { key: \"process_in\", label: \"Process In\", align: \"left\" },\n    { key: \"actions\", label: \"Actions\", align: \"center\" },\n  ];\n\n  const rowCount = props.tasks.length;\n  const numSelected = selectedIds.length;\n  return (\n    <div>\n      {!window.READ_ONLY && (\n        <TableActions\n          showIconButtons={numSelected > 0}\n          iconButtonActions={[\n            {\n              tooltip: \"Delete\",\n              icon: <DeleteIcon />,\n              onClick: handleBatchDeleteClick,\n              disabled: props.batchActionPending,\n            },\n            {\n              tooltip: \"Archive\",\n              icon: <ArchiveIcon />,\n              onClick: handleBatchArchiveClick,\n              disabled: props.batchActionPending,\n            },\n            {\n              tooltip: \"Run\",\n              icon: <PlayArrowIcon />,\n              onClick: handleBatchRunClick,\n              disabled: props.batchActionPending,\n            },\n          ]}\n          menuItemActions={[\n            {\n              label: \"Delete All\",\n              onClick: handleDeleteAllClick,\n              disabled: props.allActionPending,\n            },\n            {\n              label: \"Archive All\",\n              onClick: handleArchiveAllClick,\n              disabled: props.allActionPending,\n            },\n            {\n              label: \"Run All\",\n              onClick: handleRunAllClick,\n              disabled: props.allActionPending,\n            },\n          ]}\n        />\n      )}\n      <TableContainer component={Paper}>\n        <Table\n          stickyHeader={true}\n          className={classes.table}\n          aria-label=\"scheduled tasks table\"\n          size=\"small\"\n        >\n          <TableHead>\n            <TableRow>\n              {!window.READ_ONLY && (\n                <TableCell\n                  padding=\"checkbox\"\n                  classes={{ stickyHeader: classes.stickyHeaderCell }}\n                >\n                  <IconButton>\n                    <Checkbox\n                      indeterminate={numSelected > 0 && numSelected < rowCount}\n                      checked={rowCount > 0 && numSelected === rowCount}\n                      onChange={handleSelectAllClick}\n                      inputProps={{\n                        \"aria-label\": \"select all tasks shown in the table\",\n                      }}\n                    />\n                  </IconButton>\n                </TableCell>\n              )}\n              {columns\n                .filter((col) => {\n                  // Filter out actions column in readonly mode.\n                  return !window.READ_ONLY || col.key !== \"actions\";\n                })\n                .map((col) => (\n                  <TableCell\n                    key={col.label}\n                    align={col.align}\n                    classes={{ stickyHeader: classes.stickyHeaderCell }}\n                  >\n                    {col.label}\n                  </TableCell>\n                ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.tasks.map((task) => (\n              <Row\n                key={task.id}\n                task={task}\n                allActionPending={props.allActionPending}\n                isSelected={selectedIds.includes(task.id)}\n                onSelectChange={(checked: boolean) => {\n                  if (checked) {\n                    setSelectedIds(selectedIds.concat(task.id));\n                  } else {\n                    setSelectedIds(selectedIds.filter((id) => id !== task.id));\n                  }\n                }}\n                onRunClick={() => {\n                  props.runScheduledTaskAsync(queue, task.id);\n                }}\n                onDeleteClick={() => {\n                  props.deleteScheduledTaskAsync(queue, task.id);\n                }}\n                onArchiveClick={() => {\n                  props.archiveScheduledTaskAsync(queue, task.id);\n                }}\n                onActionCellEnter={() => setActiveTaskId(task.id)}\n                onActionCellLeave={() => setActiveTaskId(\"\")}\n                showActions={activeTaskId === task.id}\n              />\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={rowsPerPageOptions}\n                colSpan={columns.length + 1}\n                count={props.totalTaskCount}\n                rowsPerPage={pageSize}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onPageChange={handlePageChange}\n                onRowsPerPageChange={handleRowsPerPageChange}\n                ActionsComponent={TablePaginationActions}\n                className={classes.pagination}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nconst useRowStyles = makeStyles((theme) => ({\n  root: {\n    cursor: \"pointer\",\n    \"& #copy-button\": {\n      display: \"none\",\n    },\n    \"&:hover\": {\n      boxShadow: theme.shadows[2],\n      \"& #copy-button\": {\n        display: \"inline-block\",\n      },\n    },\n    \"&:hover $copyButton\": {\n      display: \"inline-block\",\n    },\n    \"&:hover .MuiTableCell-root\": {\n      borderBottomColor: theme.palette.background.paper,\n    },\n  },\n  actionCell: {\n    width: \"140px\",\n  },\n  actionButton: {\n    marginLeft: 3,\n    marginRight: 3,\n  },\n  idCell: {\n    width: \"200px\",\n  },\n  copyButton: {\n    display: \"none\",\n  },\n  IdGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\ninterface RowProps {\n  task: TaskInfoExtended;\n  isSelected: boolean;\n  onSelectChange: (checked: boolean) => void;\n  onRunClick: () => void;\n  onDeleteClick: () => void;\n  onArchiveClick: () => void;\n  allActionPending: boolean;\n  showActions: boolean;\n  onActionCellEnter: () => void;\n  onActionCellLeave: () => void;\n}\n\nfunction Row(props: RowProps) {\n  const { task } = props;\n  const classes = useRowStyles();\n  const history = useHistory();\n  return (\n    <TableRow\n      key={task.id}\n      className={classes.root}\n      selected={props.isSelected}\n      onClick={() => history.push(taskDetailsPath(task.queue, task.id))}\n    >\n      {!window.READ_ONLY && (\n        <TableCell padding=\"checkbox\" onClick={(e) => e.stopPropagation()}>\n          <IconButton>\n            <Checkbox\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                props.onSelectChange(event.target.checked)\n              }\n              checked={props.isSelected}\n            />\n          </IconButton>\n        </TableCell>\n      )}\n      <TableCell component=\"th\" scope=\"row\" className={classes.idCell}>\n        <div className={classes.IdGroup}>\n          {uuidPrefix(task.id)}\n          <Tooltip title=\"Copy full ID to clipboard\">\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation();\n                navigator.clipboard.writeText(task.id);\n              }}\n              size=\"small\"\n              className={classes.copyButton}\n            >\n              <FileCopyOutlinedIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </TableCell>\n      <TableCell>{task.type}</TableCell>\n      <TableCell>\n        <SyntaxHighlighter\n          language=\"json\"\n          customStyle={{ margin: 0, maxWidth: 400 }}\n        >\n          {prettifyPayload(task.payload)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell>{durationBefore(task.next_process_at)}</TableCell>\n      {!window.READ_ONLY && (\n        <TableCell\n          align=\"center\"\n          className={classes.actionCell}\n          onMouseEnter={props.onActionCellEnter}\n          onMouseLeave={props.onActionCellLeave}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {props.showActions ? (\n            <React.Fragment>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  onClick={props.onDeleteClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <DeleteIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Archive\">\n                <IconButton\n                  onClick={props.onArchiveClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <ArchiveIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Run\">\n                <IconButton\n                  onClick={props.onRunClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <PlayArrowIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </React.Fragment>\n          ) : (\n            <IconButton size=\"small\" onClick={props.onActionCellEnter}>\n              <MoreHorizIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\nexport default connector(ScheduledTasksTable);\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport React, { useCallback, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { taskRowsPerPageChange } from \"../actions/settingsActions\";\nimport {\n  archiveAllRetryTasksAsync,\n  archiveRetryTaskAsync,\n  batchArchiveRetryTasksAsync,\n  batchDeleteRetryTasksAsync,\n  batchRunRetryTasksAsync,\n  deleteAllRetryTasksAsync,\n  deleteRetryTaskAsync,\n  listRetryTasksAsync,\n  runAllRetryTasksAsync,\n  runRetryTaskAsync,\n} from \"../actions/tasksActions\";\nimport { usePolling } from \"../hooks\";\nimport { taskDetailsPath } from \"../paths\";\nimport { TaskInfoExtended } from \"../reducers/tasksReducer\";\nimport { AppState } from \"../store\";\nimport { TableColumn } from \"../types/table\";\nimport { durationBefore, prettifyPayload, uuidPrefix } from \"../utils\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport TableActions from \"./TableActions\";\nimport TablePaginationActions, {\n  rowsPerPageOptions,\n} from \"./TablePaginationActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  stickyHeaderCell: {\n    background: theme.palette.background.paper,\n  },\n  alert: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n  },\n  pagination: {\n    border: \"none\",\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.tasks.retryTasks.loading,\n    error: state.tasks.retryTasks.error,\n    tasks: state.tasks.retryTasks.data,\n    batchActionPending: state.tasks.retryTasks.batchActionPending,\n    allActionPending: state.tasks.retryTasks.allActionPending,\n    pollInterval: state.settings.pollInterval,\n    pageSize: state.settings.taskRowsPerPage,\n  };\n}\n\nconst mapDispatchToProps = {\n  batchDeleteRetryTasksAsync,\n  batchRunRetryTasksAsync,\n  batchArchiveRetryTasksAsync,\n  deleteAllRetryTasksAsync,\n  runAllRetryTasksAsync,\n  archiveAllRetryTasksAsync,\n  listRetryTasksAsync,\n  deleteRetryTaskAsync,\n  runRetryTaskAsync,\n  archiveRetryTaskAsync,\n  taskRowsPerPageChange,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  queue: string; // name of the queue.\n  totalTaskCount: number; // totoal number of scheduled tasks.\n}\n\nfunction RetryTasksTable(props: Props & ReduxProps) {\n  const { pollInterval, listRetryTasksAsync, queue, pageSize } = props;\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  const [activeTaskId, setActiveTaskId] = useState<string>(\"\");\n\n  const handlePageChange = (\n    event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    props.taskRowsPerPageChange(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = props.tasks.map((t) => t.id);\n      setSelectedIds(newSelected);\n    } else {\n      setSelectedIds([]);\n    }\n  };\n\n  const handleRunAllClick = () => {\n    props.runAllRetryTasksAsync(queue);\n  };\n\n  const handleDeleteAllClick = () => {\n    props.deleteAllRetryTasksAsync(queue);\n  };\n\n  const handleArchiveAllClick = () => {\n    props.archiveAllRetryTasksAsync(queue);\n  };\n\n  const handleBatchRunClick = () => {\n    props\n      .batchRunRetryTasksAsync(queue, selectedIds)\n      .then(() => setSelectedIds([]));\n  };\n\n  const handleBatchDeleteClick = () => {\n    props\n      .batchDeleteRetryTasksAsync(queue, selectedIds)\n      .then(() => setSelectedIds([]));\n  };\n\n  const handleBatchArchiveClick = () => {\n    props\n      .batchArchiveRetryTasksAsync(queue, selectedIds)\n      .then(() => setSelectedIds([]));\n  };\n\n  const fetchData = useCallback(() => {\n    const pageOpts = { page: page + 1, size: pageSize };\n    listRetryTasksAsync(queue, pageOpts);\n  }, [page, pageSize, queue, listRetryTasksAsync]);\n\n  usePolling(fetchData, pollInterval);\n\n  if (props.error.length > 0) {\n    return (\n      <Alert severity=\"error\" className={classes.alert}>\n        <AlertTitle>Error</AlertTitle>\n        {props.error}\n      </Alert>\n    );\n  }\n  if (props.tasks.length === 0) {\n    return (\n      <Alert severity=\"info\" className={classes.alert}>\n        <AlertTitle>Info</AlertTitle>\n        No retry tasks at this time.\n      </Alert>\n    );\n  }\n\n  const columns: TableColumn[] = [\n    { key: \"id\", label: \"ID\", align: \"left\" },\n    { key: \"type\", label: \"Type\", align: \"left\" },\n    { key: \"payload\", label: \"Payload\", align: \"left\" },\n    { key: \"retry_in\", label: \"Retry In\", align: \"left\" },\n    { key: \"last_error\", label: \"Last Error\", align: \"left\" },\n    { key: \"retried\", label: \"Retried\", align: \"right\" },\n    { key: \"max_retry\", label: \"Max Retry\", align: \"right\" },\n    { key: \"actions\", label: \"Actions\", align: \"center\" },\n  ];\n\n  const rowCount = props.tasks.length;\n  const numSelected = selectedIds.length;\n  return (\n    <div>\n      {!window.READ_ONLY && (\n        <TableActions\n          showIconButtons={numSelected > 0}\n          iconButtonActions={[\n            {\n              tooltip: \"Delete\",\n              icon: <DeleteIcon />,\n              onClick: handleBatchDeleteClick,\n              disabled: props.batchActionPending,\n            },\n            {\n              tooltip: \"Archive\",\n              icon: <ArchiveIcon />,\n              onClick: handleBatchArchiveClick,\n              disabled: props.batchActionPending,\n            },\n            {\n              tooltip: \"Run\",\n              icon: <PlayArrowIcon />,\n              onClick: handleBatchRunClick,\n              disabled: props.batchActionPending,\n            },\n          ]}\n          menuItemActions={[\n            {\n              label: \"Delete All\",\n              onClick: handleDeleteAllClick,\n              disabled: props.allActionPending,\n            },\n            {\n              label: \"Archive All\",\n              onClick: handleArchiveAllClick,\n              disabled: props.allActionPending,\n            },\n            {\n              label: \"Run All\",\n              onClick: handleRunAllClick,\n              disabled: props.allActionPending,\n            },\n          ]}\n        />\n      )}\n      <TableContainer component={Paper}>\n        <Table\n          stickyHeader={true}\n          className={classes.table}\n          aria-label=\"retry tasks table\"\n          size=\"small\"\n        >\n          <TableHead>\n            <TableRow>\n              {!window.READ_ONLY && (\n                <TableCell\n                  padding=\"checkbox\"\n                  classes={{ stickyHeader: classes.stickyHeaderCell }}\n                >\n                  <IconButton>\n                    <Checkbox\n                      indeterminate={numSelected > 0 && numSelected < rowCount}\n                      checked={rowCount > 0 && numSelected === rowCount}\n                      onChange={handleSelectAllClick}\n                      inputProps={{\n                        \"aria-label\": \"select all tasks shown in the table\",\n                      }}\n                    />\n                  </IconButton>\n                </TableCell>\n              )}\n              {columns\n                .filter((col) => {\n                  // Filter out actions column in readonly mode.\n                  return !window.READ_ONLY || col.key !== \"actions\";\n                })\n                .map((col) => (\n                  <TableCell\n                    key={col.label}\n                    align={col.align}\n                    classes={{ stickyHeader: classes.stickyHeaderCell }}\n                  >\n                    {col.label}\n                  </TableCell>\n                ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.tasks.map((task) => (\n              <Row\n                key={task.id}\n                task={task}\n                allActionPending={props.allActionPending}\n                isSelected={selectedIds.includes(task.id)}\n                onSelectChange={(checked: boolean) => {\n                  if (checked) {\n                    setSelectedIds(selectedIds.concat(task.id));\n                  } else {\n                    setSelectedIds(selectedIds.filter((id) => id !== task.id));\n                  }\n                }}\n                onRunClick={() => {\n                  props.runRetryTaskAsync(task.queue, task.id);\n                }}\n                onDeleteClick={() => {\n                  props.deleteRetryTaskAsync(task.queue, task.id);\n                }}\n                onArchiveClick={() => {\n                  props.archiveRetryTaskAsync(task.queue, task.id);\n                }}\n                onActionCellEnter={() => setActiveTaskId(task.id)}\n                onActionCellLeave={() => setActiveTaskId(\"\")}\n                showActions={activeTaskId === task.id}\n              />\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={rowsPerPageOptions}\n                colSpan={columns.length + 1}\n                count={props.totalTaskCount}\n                rowsPerPage={pageSize}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onPageChange={handlePageChange}\n                onRowsPerPageChange={handleRowsPerPageChange}\n                ActionsComponent={TablePaginationActions}\n                className={classes.pagination}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nconst useRowStyles = makeStyles((theme) => ({\n  root: {\n    cursor: \"pointer\",\n    \"& #copy-button\": {\n      display: \"none\",\n    },\n    \"&:hover\": {\n      boxShadow: theme.shadows[2],\n      \"& #copy-button\": {\n        display: \"inline-block\",\n      },\n    },\n    \"&:hover $copyButton\": {\n      display: \"inline-block\",\n    },\n    \"&:hover .MuiTableCell-root\": {\n      borderBottomColor: theme.palette.background.paper,\n    },\n  },\n  actionCell: {\n    width: \"140px\",\n  },\n  actionButton: {\n    marginLeft: 3,\n    marginRight: 3,\n  },\n  idCell: {\n    width: \"200px\",\n  },\n  copyButton: {\n    display: \"none\",\n  },\n  IdGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\ninterface RowProps {\n  task: TaskInfoExtended;\n  isSelected: boolean;\n  onSelectChange: (checked: boolean) => void;\n  onDeleteClick: () => void;\n  onRunClick: () => void;\n  onArchiveClick: () => void;\n  allActionPending: boolean;\n  showActions: boolean;\n  onActionCellEnter: () => void;\n  onActionCellLeave: () => void;\n}\n\nfunction Row(props: RowProps) {\n  const { task } = props;\n  const classes = useRowStyles();\n  const history = useHistory();\n\n  return (\n    <TableRow\n      key={task.id}\n      className={classes.root}\n      selected={props.isSelected}\n      onClick={() => history.push(taskDetailsPath(task.queue, task.id))}\n    >\n      {!window.READ_ONLY && (\n        <TableCell padding=\"checkbox\" onClick={(e) => e.stopPropagation()}>\n          <IconButton>\n            <Checkbox\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                props.onSelectChange(event.target.checked)\n              }\n              checked={props.isSelected}\n            />\n          </IconButton>\n        </TableCell>\n      )}\n      <TableCell component=\"th\" scope=\"row\" className={classes.idCell}>\n        <div className={classes.IdGroup}>\n          {uuidPrefix(task.id)}\n          <Tooltip title=\"Copy full ID to clipboard\">\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation();\n                navigator.clipboard.writeText(task.id);\n              }}\n              size=\"small\"\n              className={classes.copyButton}\n            >\n              <FileCopyOutlinedIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </TableCell>\n      <TableCell>{task.type}</TableCell>\n      <TableCell>\n        <SyntaxHighlighter\n          language=\"json\"\n          customStyle={{ margin: 0, maxWidth: 400 }}\n        >\n          {prettifyPayload(task.payload)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell>{durationBefore(task.next_process_at)}</TableCell>\n      <TableCell>{task.error_message}</TableCell>\n      <TableCell align=\"right\">{task.retried}</TableCell>\n      <TableCell align=\"right\">{task.max_retry}</TableCell>\n      {!window.READ_ONLY && (\n        <TableCell\n          align=\"center\"\n          className={classes.actionCell}\n          onMouseEnter={props.onActionCellEnter}\n          onMouseLeave={props.onActionCellLeave}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {props.showActions ? (\n            <React.Fragment>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  onClick={props.onDeleteClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <DeleteIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Archive\">\n                <IconButton\n                  onClick={props.onArchiveClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <ArchiveIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Run\">\n                <IconButton\n                  onClick={props.onRunClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <PlayArrowIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </React.Fragment>\n          ) : (\n            <IconButton size=\"small\" onClick={props.onActionCellEnter}>\n              <MoreHorizIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\n\nexport default connector(RetryTasksTable);\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport React, { useCallback, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { taskRowsPerPageChange } from \"../actions/settingsActions\";\nimport {\n  batchDeleteArchivedTasksAsync,\n  batchRunArchivedTasksAsync,\n  deleteAllArchivedTasksAsync,\n  deleteArchivedTaskAsync,\n  listArchivedTasksAsync,\n  runAllArchivedTasksAsync,\n  runArchivedTaskAsync,\n} from \"../actions/tasksActions\";\nimport { usePolling } from \"../hooks\";\nimport { taskDetailsPath } from \"../paths\";\nimport { TaskInfoExtended } from \"../reducers/tasksReducer\";\nimport { AppState } from \"../store\";\nimport { TableColumn } from \"../types/table\";\nimport { prettifyPayload, timeAgo, uuidPrefix } from \"../utils\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport TableActions from \"./TableActions\";\nimport TablePaginationActions, {\n  rowsPerPageOptions,\n} from \"./TablePaginationActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  stickyHeaderCell: {\n    background: theme.palette.background.paper,\n  },\n  alert: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n  },\n  pagination: {\n    border: \"none\",\n  },\n  idCell: {\n    width: \"200px\",\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.tasks.archivedTasks.loading,\n    error: state.tasks.archivedTasks.error,\n    tasks: state.tasks.archivedTasks.data,\n    batchActionPending: state.tasks.archivedTasks.batchActionPending,\n    allActionPending: state.tasks.archivedTasks.allActionPending,\n    pollInterval: state.settings.pollInterval,\n    pageSize: state.settings.taskRowsPerPage,\n  };\n}\n\nconst mapDispatchToProps = {\n  listArchivedTasksAsync,\n  runArchivedTaskAsync,\n  runAllArchivedTasksAsync,\n  deleteArchivedTaskAsync,\n  deleteAllArchivedTasksAsync,\n  batchRunArchivedTasksAsync,\n  batchDeleteArchivedTasksAsync,\n  taskRowsPerPageChange,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  queue: string; // name of the queue.\n  totalTaskCount: number; // totoal number of archived tasks.\n}\n\nfunction ArchivedTasksTable(props: Props & ReduxProps) {\n  const { pollInterval, listArchivedTasksAsync, queue, pageSize } = props;\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  const [activeTaskId, setActiveTaskId] = useState<string>(\"\");\n\n  const handlePageChange = (\n    event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    props.taskRowsPerPageChange(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = props.tasks.map((t) => t.id);\n      setSelectedIds(newSelected);\n    } else {\n      setSelectedIds([]);\n    }\n  };\n\n  const handleRunAllClick = () => {\n    props.runAllArchivedTasksAsync(queue);\n  };\n\n  const handleDeleteAllClick = () => {\n    props.deleteAllArchivedTasksAsync(queue);\n  };\n\n  const handleBatchRunClick = () => {\n    props\n      .batchRunArchivedTasksAsync(queue, selectedIds)\n      .then(() => setSelectedIds([]));\n  };\n\n  const handleBatchDeleteClick = () => {\n    props\n      .batchDeleteArchivedTasksAsync(queue, selectedIds)\n      .then(() => setSelectedIds([]));\n  };\n\n  const fetchData = useCallback(() => {\n    const pageOpts = { page: page + 1, size: pageSize };\n    listArchivedTasksAsync(queue, pageOpts);\n  }, [page, pageSize, queue, listArchivedTasksAsync]);\n\n  usePolling(fetchData, pollInterval);\n\n  if (props.error.length > 0) {\n    return (\n      <Alert severity=\"error\" className={classes.alert}>\n        <AlertTitle>Error</AlertTitle>\n        {props.error}\n      </Alert>\n    );\n  }\n  if (props.tasks.length === 0) {\n    return (\n      <Alert severity=\"info\" className={classes.alert}>\n        <AlertTitle>Info</AlertTitle>\n        No archived tasks at this time.\n      </Alert>\n    );\n  }\n\n  const columns: TableColumn[] = [\n    { key: \"id\", label: \"ID\", align: \"left\" },\n    { key: \"type\", label: \"Type\", align: \"left\" },\n    { key: \"payload\", label: \"Payload\", align: \"left\" },\n    { key: \"last_failed\", label: \"Last Failed\", align: \"left\" },\n    { key: \"last_error\", label: \"Last Error\", align: \"left\" },\n    { key: \"actions\", label: \"Actions\", align: \"center\" },\n  ];\n\n  const rowCount = props.tasks.length;\n  const numSelected = selectedIds.length;\n  return (\n    <div>\n      {!window.READ_ONLY && (\n        <TableActions\n          showIconButtons={numSelected > 0}\n          iconButtonActions={[\n            {\n              tooltip: \"Delete\",\n              icon: <DeleteIcon />,\n              onClick: handleBatchDeleteClick,\n              disabled: props.batchActionPending,\n            },\n            {\n              tooltip: \"Run\",\n              icon: <PlayArrowIcon />,\n              onClick: handleBatchRunClick,\n              disabled: props.batchActionPending,\n            },\n          ]}\n          menuItemActions={[\n            {\n              label: \"Delete All\",\n              onClick: handleDeleteAllClick,\n              disabled: props.allActionPending,\n            },\n            {\n              label: \"Run All\",\n              onClick: handleRunAllClick,\n              disabled: props.allActionPending,\n            },\n          ]}\n        />\n      )}\n      <TableContainer component={Paper}>\n        <Table\n          stickyHeader={true}\n          className={classes.table}\n          aria-label=\"archived tasks table\"\n          size=\"small\"\n        >\n          <TableHead>\n            <TableRow>\n              {!window.READ_ONLY && (\n                <TableCell\n                  padding=\"checkbox\"\n                  classes={{ stickyHeader: classes.stickyHeaderCell }}\n                >\n                  <IconButton>\n                    <Checkbox\n                      indeterminate={numSelected > 0 && numSelected < rowCount}\n                      checked={rowCount > 0 && numSelected === rowCount}\n                      onChange={handleSelectAllClick}\n                      inputProps={{\n                        \"aria-label\": \"select all tasks shown in the table\",\n                      }}\n                    />\n                  </IconButton>\n                </TableCell>\n              )}\n              {columns\n                .filter((col) => {\n                  // Filter out actions column in readonly mode.\n                  return !window.READ_ONLY || col.key !== \"actions\";\n                })\n                .map((col) => (\n                  <TableCell\n                    key={col.key}\n                    align={col.align}\n                    classes={{ stickyHeader: classes.stickyHeaderCell }}\n                  >\n                    {col.label}\n                  </TableCell>\n                ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.tasks.map((task) => (\n              <Row\n                key={task.id}\n                task={task}\n                isSelected={selectedIds.includes(task.id)}\n                onSelectChange={(checked: boolean) => {\n                  if (checked) {\n                    setSelectedIds(selectedIds.concat(task.id));\n                  } else {\n                    setSelectedIds(selectedIds.filter((id) => id !== task.id));\n                  }\n                }}\n                onRunClick={() => {\n                  props.runArchivedTaskAsync(queue, task.id);\n                }}\n                onDeleteClick={() => {\n                  props.deleteArchivedTaskAsync(queue, task.id);\n                }}\n                allActionPending={props.allActionPending}\n                onActionCellEnter={() => setActiveTaskId(task.id)}\n                onActionCellLeave={() => setActiveTaskId(\"\")}\n                showActions={activeTaskId === task.id}\n              />\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={rowsPerPageOptions}\n                colSpan={columns.length + 1}\n                count={props.totalTaskCount}\n                rowsPerPage={pageSize}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onPageChange={handlePageChange}\n                onRowsPerPageChange={handleRowsPerPageChange}\n                ActionsComponent={TablePaginationActions}\n                className={classes.pagination}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nconst useRowStyles = makeStyles((theme) => ({\n  root: {\n    cursor: \"pointer\",\n    \"& #copy-button\": {\n      display: \"none\",\n    },\n    \"&:hover\": {\n      boxShadow: theme.shadows[2],\n    },\n    \"&:hover $copyButton\": {\n      display: \"inline-block\",\n    },\n    \"&:hover .MuiTableCell-root\": {\n      borderBottomColor: theme.palette.background.paper,\n    },\n  },\n  actionCell: {\n    width: \"96px\",\n  },\n  actionButton: {\n    marginLeft: 3,\n    marginRight: 3,\n  },\n  idCell: {\n    width: \"200px\",\n  },\n  copyButton: {\n    display: \"none\",\n  },\n  IdGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\ninterface RowProps {\n  task: TaskInfoExtended;\n  isSelected: boolean;\n  onSelectChange: (checked: boolean) => void;\n  onRunClick: () => void;\n  onDeleteClick: () => void;\n  allActionPending: boolean;\n  showActions: boolean;\n  onActionCellEnter: () => void;\n  onActionCellLeave: () => void;\n}\n\nfunction Row(props: RowProps) {\n  const { task } = props;\n  const classes = useRowStyles();\n  const history = useHistory();\n  return (\n    <TableRow\n      key={task.id}\n      className={classes.root}\n      selected={props.isSelected}\n      onClick={() => history.push(taskDetailsPath(task.queue, task.id))}\n    >\n      {!window.READ_ONLY && (\n        <TableCell padding=\"checkbox\" onClick={(e) => e.stopPropagation()}>\n          <IconButton>\n            <Checkbox\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                props.onSelectChange(event.target.checked)\n              }\n              checked={props.isSelected}\n            />\n          </IconButton>\n        </TableCell>\n      )}\n      <TableCell component=\"th\" scope=\"row\" className={classes.idCell}>\n        <div className={classes.IdGroup}>\n          {uuidPrefix(task.id)}\n          <Tooltip title=\"Copy full ID to clipboard\">\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation();\n                navigator.clipboard.writeText(task.id);\n              }}\n              size=\"small\"\n              className={classes.copyButton}\n            >\n              <FileCopyOutlinedIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </TableCell>\n      <TableCell>{task.type}</TableCell>\n      <TableCell>\n        <SyntaxHighlighter\n          language=\"json\"\n          customStyle={{ margin: 0, maxWidth: 400 }}\n        >\n          {prettifyPayload(task.payload)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell>{timeAgo(task.last_failed_at)}</TableCell>\n      <TableCell>{task.error_message}</TableCell>\n      {!window.READ_ONLY && (\n        <TableCell\n          align=\"center\"\n          className={classes.actionCell}\n          onMouseEnter={props.onActionCellEnter}\n          onMouseLeave={props.onActionCellLeave}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {props.showActions ? (\n            <React.Fragment>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  className={classes.actionButton}\n                  onClick={props.onDeleteClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                >\n                  <DeleteIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Run\">\n                <IconButton\n                  className={classes.actionButton}\n                  onClick={props.onRunClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                >\n                  <PlayArrowIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </React.Fragment>\n          ) : (\n            <IconButton size=\"small\" onClick={props.onActionCellEnter}>\n              <MoreHorizIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\n\nexport default connector(ArchivedTasksTable);\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport React, { useCallback, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { taskRowsPerPageChange } from \"../actions/settingsActions\";\nimport {\n  batchDeleteCompletedTasksAsync,\n  deleteAllCompletedTasksAsync,\n  deleteCompletedTaskAsync,\n  listCompletedTasksAsync,\n} from \"../actions/tasksActions\";\nimport { usePolling } from \"../hooks\";\nimport { taskDetailsPath } from \"../paths\";\nimport { TaskInfoExtended } from \"../reducers/tasksReducer\";\nimport { AppState } from \"../store\";\nimport { TableColumn } from \"../types/table\";\nimport {\n  durationFromSeconds,\n  prettifyPayload,\n  stringifyDuration,\n  timeAgo,\n  uuidPrefix,\n} from \"../utils\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport TableActions from \"./TableActions\";\nimport TablePaginationActions, {\n  rowsPerPageOptions,\n} from \"./TablePaginationActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  stickyHeaderCell: {\n    background: theme.palette.background.paper,\n  },\n  alert: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n  },\n  pagination: {\n    border: \"none\",\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.tasks.completedTasks.loading,\n    error: state.tasks.completedTasks.error,\n    tasks: state.tasks.completedTasks.data,\n    batchActionPending: state.tasks.completedTasks.batchActionPending,\n    allActionPending: state.tasks.completedTasks.allActionPending,\n    pollInterval: state.settings.pollInterval,\n    pageSize: state.settings.taskRowsPerPage,\n  };\n}\n\nconst mapDispatchToProps = {\n  listCompletedTasksAsync,\n  deleteCompletedTaskAsync,\n  deleteAllCompletedTasksAsync,\n  batchDeleteCompletedTasksAsync,\n  taskRowsPerPageChange,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  queue: string; // name of the queue.\n  totalTaskCount: number; // totoal number of completed tasks.\n}\n\nfunction CompletedTasksTable(props: Props & ReduxProps) {\n  const { pollInterval, listCompletedTasksAsync, queue, pageSize } = props;\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  const [activeTaskId, setActiveTaskId] = useState<string>(\"\");\n\n  const handlePageChange = (\n    event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    props.taskRowsPerPageChange(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = props.tasks.map((t) => t.id);\n      setSelectedIds(newSelected);\n    } else {\n      setSelectedIds([]);\n    }\n  };\n\n  const handleDeleteAllClick = () => {\n    props.deleteAllCompletedTasksAsync(queue);\n  };\n\n  const handleBatchDeleteClick = () => {\n    props\n      .batchDeleteCompletedTasksAsync(queue, selectedIds)\n      .then(() => setSelectedIds([]));\n  };\n\n  const fetchData = useCallback(() => {\n    const pageOpts = { page: page + 1, size: pageSize };\n    listCompletedTasksAsync(queue, pageOpts);\n  }, [page, pageSize, queue, listCompletedTasksAsync]);\n\n  usePolling(fetchData, pollInterval);\n\n  if (props.error.length > 0) {\n    return (\n      <Alert severity=\"error\" className={classes.alert}>\n        <AlertTitle>Error</AlertTitle>\n        {props.error}\n      </Alert>\n    );\n  }\n  if (props.tasks.length === 0) {\n    return (\n      <Alert severity=\"info\" className={classes.alert}>\n        <AlertTitle>Info</AlertTitle>\n        No completed tasks at this time.\n      </Alert>\n    );\n  }\n\n  const columns: TableColumn[] = [\n    { key: \"id\", label: \"ID\", align: \"left\" },\n    { key: \"type\", label: \"Type\", align: \"left\" },\n    { key: \"payload\", label: \"Payload\", align: \"left\" },\n    { key: \"completed_at\", label: \"Completed\", align: \"left\" },\n    { key: \"result\", label: \"Result\", align: \"left\" },\n    { key: \"ttl\", label: \"TTL\", align: \"left\" },\n    { key: \"actions\", label: \"Actions\", align: \"center\" },\n  ];\n\n  const rowCount = props.tasks.length;\n  const numSelected = selectedIds.length;\n  return (\n    <div>\n      {!window.READ_ONLY && (\n        <TableActions\n          showIconButtons={numSelected > 0}\n          iconButtonActions={[\n            {\n              tooltip: \"Delete\",\n              icon: <DeleteIcon />,\n              onClick: handleBatchDeleteClick,\n              disabled: props.batchActionPending,\n            },\n          ]}\n          menuItemActions={[\n            {\n              label: \"Delete All\",\n              onClick: handleDeleteAllClick,\n              disabled: props.allActionPending,\n            },\n          ]}\n        />\n      )}\n      <TableContainer component={Paper}>\n        <Table\n          stickyHeader={true}\n          className={classes.table}\n          aria-label=\"archived tasks table\"\n          size=\"small\"\n        >\n          <TableHead>\n            <TableRow>\n              {!window.READ_ONLY && (\n                <TableCell\n                  padding=\"checkbox\"\n                  classes={{ stickyHeader: classes.stickyHeaderCell }}\n                >\n                  <IconButton>\n                    <Checkbox\n                      indeterminate={numSelected > 0 && numSelected < rowCount}\n                      checked={rowCount > 0 && numSelected === rowCount}\n                      onChange={handleSelectAllClick}\n                      inputProps={{\n                        \"aria-label\": \"select all tasks shown in the table\",\n                      }}\n                    />\n                  </IconButton>\n                </TableCell>\n              )}\n              {columns\n                .filter((col) => {\n                  // Filter out actions column in readonly mode.\n                  return !window.READ_ONLY || col.key !== \"actions\";\n                })\n                .map((col) => (\n                  <TableCell\n                    key={col.key}\n                    align={col.align}\n                    classes={{ stickyHeader: classes.stickyHeaderCell }}\n                  >\n                    {col.label}\n                  </TableCell>\n                ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.tasks.map((task) => (\n              <Row\n                key={task.id}\n                task={task}\n                isSelected={selectedIds.includes(task.id)}\n                onSelectChange={(checked: boolean) => {\n                  if (checked) {\n                    setSelectedIds(selectedIds.concat(task.id));\n                  } else {\n                    setSelectedIds(selectedIds.filter((id) => id !== task.id));\n                  }\n                }}\n                onDeleteClick={() => {\n                  props.deleteCompletedTaskAsync(queue, task.id);\n                }}\n                allActionPending={props.allActionPending}\n                onActionCellEnter={() => setActiveTaskId(task.id)}\n                onActionCellLeave={() => setActiveTaskId(\"\")}\n                showActions={activeTaskId === task.id}\n              />\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={rowsPerPageOptions}\n                colSpan={columns.length + 1}\n                count={props.totalTaskCount}\n                rowsPerPage={pageSize}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onPageChange={handlePageChange}\n                onRowsPerPageChange={handleRowsPerPageChange}\n                ActionsComponent={TablePaginationActions}\n                className={classes.pagination}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nconst useRowStyles = makeStyles((theme) => ({\n  root: {\n    cursor: \"pointer\",\n    \"& #copy-button\": {\n      display: \"none\",\n    },\n    \"&:hover\": {\n      boxShadow: theme.shadows[2],\n      \"& #copy-button\": {\n        display: \"inline-block\",\n      },\n    },\n    \"&:hover $copyButton\": {\n      display: \"inline-block\",\n    },\n    \"&:hover .MuiTableCell-root\": {\n      borderBottomColor: theme.palette.background.paper,\n    },\n  },\n  actionCell: {\n    width: \"96px\",\n  },\n  actionButton: {\n    marginLeft: 3,\n    marginRight: 3,\n  },\n  idCell: {\n    width: \"200px\",\n  },\n  copyButton: {\n    display: \"none\",\n  },\n  IdGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\ninterface RowProps {\n  task: TaskInfoExtended;\n  isSelected: boolean;\n  onSelectChange: (checked: boolean) => void;\n  onDeleteClick: () => void;\n  allActionPending: boolean;\n  showActions: boolean;\n  onActionCellEnter: () => void;\n  onActionCellLeave: () => void;\n}\n\nfunction Row(props: RowProps) {\n  const { task } = props;\n  const classes = useRowStyles();\n  const history = useHistory();\n  return (\n    <TableRow\n      key={task.id}\n      className={classes.root}\n      selected={props.isSelected}\n      onClick={() => history.push(taskDetailsPath(task.queue, task.id))}\n    >\n      {!window.READ_ONLY && (\n        <TableCell padding=\"checkbox\" onClick={(e) => e.stopPropagation()}>\n          <IconButton>\n            <Checkbox\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                props.onSelectChange(event.target.checked)\n              }\n              checked={props.isSelected}\n            />\n          </IconButton>\n        </TableCell>\n      )}\n      <TableCell component=\"th\" scope=\"row\" className={classes.idCell}>\n        <div className={classes.IdGroup}>\n          {uuidPrefix(task.id)}\n          <Tooltip title=\"Copy full ID to clipboard\">\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation();\n                navigator.clipboard.writeText(task.id);\n              }}\n              size=\"small\"\n              className={classes.copyButton}\n            >\n              <FileCopyOutlinedIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </TableCell>\n      <TableCell>{task.type}</TableCell>\n      <TableCell>\n        <SyntaxHighlighter\n          language=\"json\"\n          customStyle={{ margin: 0, maxWidth: 400 }}\n        >\n          {prettifyPayload(task.payload)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell>{timeAgo(task.completed_at)}</TableCell>\n      <TableCell>\n        <SyntaxHighlighter\n          language=\"json\"\n          customStyle={{ margin: 0, maxWidth: 400 }}\n        >\n          {prettifyPayload(task.result)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell>\n        {task.ttl_seconds > 0\n          ? `${stringifyDuration(durationFromSeconds(task.ttl_seconds))} left`\n          : `expired`}\n      </TableCell>\n      {!window.READ_ONLY && (\n        <TableCell\n          align=\"center\"\n          className={classes.actionCell}\n          onMouseEnter={props.onActionCellEnter}\n          onMouseLeave={props.onActionCellLeave}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {props.showActions ? (\n            <React.Fragment>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  className={classes.actionButton}\n                  onClick={props.onDeleteClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                >\n                  <DeleteIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </React.Fragment>\n          ) : (\n            <IconButton size=\"small\" onClick={props.onActionCellEnter}>\n              <MoreHorizIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\n\nexport default connector(CompletedTasksTable);\n","import React, { useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Chip from \"@material-ui/core/Chip\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ActiveTasksTable from \"./ActiveTasksTable\";\nimport PendingTasksTable from \"./PendingTasksTable\";\nimport ScheduledTasksTable from \"./ScheduledTasksTable\";\nimport RetryTasksTable from \"./RetryTasksTable\";\nimport ArchivedTasksTable from \"./ArchivedTasksTable\";\nimport CompletedTasksTable from \"./CompletedTasksTable\";\nimport { useHistory } from \"react-router-dom\";\nimport { queueDetailsPath, taskDetailsPath } from \"../paths\";\nimport { QueueInfo } from \"../reducers/queuesReducer\";\nimport { AppState } from \"../store\";\nimport { isDarkTheme } from \"../theme\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  selected: string; // currently selected value\n  value: string; // tab panel will be shown if selected value equals to the value\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, selected, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== selected}\n      id={`scrollable-auto-tabpanel-${selected}`}\n      aria-labelledby={`scrollable-auto-tab-${selected}`}\n      style={{ flex: 1, overflowY: \"scroll\" }}\n      {...other}\n    >\n      {value === selected && children}\n    </div>\n  );\n}\n\nfunction mapStatetoProps(state: AppState, ownProps: Props) {\n  // TODO: Add loading state for each queue.\n  const queueInfo = state.queues.data.find(\n    (q: QueueInfo) => q.name === ownProps.queue\n  );\n  const currentStats = queueInfo\n    ? queueInfo.currentStats\n    : {\n        queue: ownProps.queue,\n        paused: false,\n        size: 0,\n        active: 0,\n        pending: 0,\n        scheduled: 0,\n        retry: 0,\n        archived: 0,\n        completed: 0,\n        processed: 0,\n        failed: 0,\n        timestamp: \"n/a\",\n      };\n  return { currentStats };\n}\n\nconst connector = connect(mapStatetoProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  queue: string;\n  selected: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    background: theme.palette.background.paper,\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(1),\n  },\n  heading: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  chip: {\n    marginLeft: theme.spacing(1),\n  },\n  taskcount: {\n    fontSize: \"12px\",\n    color: theme.palette.text.secondary,\n    background: isDarkTheme(theme)\n      ? \"#303030\"\n      : theme.palette.background.default,\n    textAlign: \"center\",\n    padding: \"3px 6px\",\n    borderRadius: \"10px\",\n    marginLeft: \"2px\",\n  },\n  searchbar: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  search: {\n    position: \"relative\",\n    width: \"312px\",\n    borderRadius: \"18px\",\n    backgroundColor: isDarkTheme(theme) ? \"#303030\" : theme.palette.grey[100],\n    \"&:hover, &:focus\": {\n      backgroundColor: isDarkTheme(theme) ? \"#303030\" : theme.palette.grey[200],\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    width: \"100%\",\n    fontSize: \"0.85rem\",\n  },\n}));\n\nfunction TasksTable(props: Props & ReduxProps) {\n  const { currentStats } = props;\n  const classes = useStyles();\n  const history = useHistory();\n  const chips = [\n    { key: \"active\", label: \"Active\", count: currentStats.active },\n    { key: \"pending\", label: \"Pending\", count: currentStats.pending },\n    { key: \"scheduled\", label: \"Scheduled\", count: currentStats.scheduled },\n    { key: \"retry\", label: \"Retry\", count: currentStats.retry },\n    { key: \"archived\", label: \"Archived\", count: currentStats.archived },\n    { key: \"completed\", label: \"Completed\", count: currentStats.completed },\n  ];\n\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n\n  return (\n    <Paper variant=\"outlined\" className={classes.container}>\n      <div className={classes.header}>\n        <Typography color=\"textPrimary\" className={classes.heading}>\n          Tasks\n        </Typography>\n        <div>\n          {chips.map((c) => (\n            <Chip\n              key={c.key}\n              className={classes.chip}\n              label={\n                <div>\n                  {c.label} <span className={classes.taskcount}>{c.count}</span>\n                </div>\n              }\n              variant=\"outlined\"\n              color={props.selected === c.key ? \"primary\" : \"default\"}\n              onClick={() => history.push(queueDetailsPath(props.queue, c.key))}\n            />\n          ))}\n        </div>\n        <div className={classes.searchbar}>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search by ID\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              value={searchQuery}\n              onChange={(e) => {\n                setSearchQuery(e.target.value);\n              }}\n              inputProps={{\n                \"aria-label\": \"search\",\n                onKeyDown: (e) => {\n                  if (e.key === \"Enter\") {\n                    history.push(\n                      taskDetailsPath(props.queue, searchQuery.trim())\n                    );\n                  }\n                },\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <TabPanel value=\"active\" selected={props.selected}>\n        <ActiveTasksTable\n          queue={props.queue}\n          totalTaskCount={currentStats.active}\n        />\n      </TabPanel>\n      <TabPanel value=\"pending\" selected={props.selected}>\n        <PendingTasksTable\n          queue={props.queue}\n          totalTaskCount={currentStats.pending}\n        />\n      </TabPanel>\n      <TabPanel value=\"scheduled\" selected={props.selected}>\n        <ScheduledTasksTable\n          queue={props.queue}\n          totalTaskCount={currentStats.scheduled}\n        />\n      </TabPanel>\n      <TabPanel value=\"retry\" selected={props.selected}>\n        <RetryTasksTable\n          queue={props.queue}\n          totalTaskCount={currentStats.retry}\n        />\n      </TabPanel>\n      <TabPanel value=\"archived\" selected={props.selected}>\n        <ArchivedTasksTable\n          queue={props.queue}\n          totalTaskCount={currentStats.archived}\n        />\n      </TabPanel>\n      <TabPanel value=\"completed\" selected={props.selected}>\n        <CompletedTasksTable\n          queue={props.queue}\n          totalTaskCount={currentStats.completed}\n        />\n      </TabPanel>\n    </Paper>\n  );\n}\n\nexport default connector(TasksTable);\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport prettyBytes from \"pretty-bytes\";\nimport { AppState } from \"../store\";\nimport { percentage } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  banner: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    display: \"flex\",\n  },\n  bannerItem: {\n    flexGrow: 1,\n    borderLeft: `1px solid ${theme.palette.divider}`,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n}));\n\ninterface Props {\n  qname: string;\n}\n\nfunction mapStateToProps(state: AppState, ownProps: Props) {\n  const queueInfo = state.queues.data.find((q) => q.name === ownProps.qname);\n  return {\n    queue: queueInfo?.currentStats,\n  };\n}\n\nconst connector = connect(mapStateToProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\nfunction QueueInfoBanner(props: Props & ReduxProps) {\n  const classes = useStyles();\n  const { queue, qname } = props;\n  return (\n    <div className={classes.banner}>\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Queue name\n        </Typography>\n        <Typography color=\"textSecondary\">{qname}</Typography>\n      </div>\n\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Queue state\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {queue ? (queue.paused ? \"paused\" : \"run\") : \"-\"}\n        </Typography>\n      </div>\n\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Queue size\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {queue ? queue.size : \"-\"}\n        </Typography>\n      </div>\n\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Memory usage\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {queue ? prettyBytes(queue.memory_usage_bytes) : \"-\"}\n        </Typography>\n      </div>\n\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Latency\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {queue ? queue.display_latency : \"-\"}\n        </Typography>\n      </div>\n\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Processed\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {queue ? queue.processed : \"-\"}\n        </Typography>\n      </div>\n\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Failed\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {queue ? queue.failed : \"-\"}\n        </Typography>\n      </div>\n\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Error rate\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {queue ? percentage(queue.failed, queue.processed) : \"-\"}\n        </Typography>\n      </div>\n    </div>\n  );\n}\n\nexport default connector(QueueInfoBanner);\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { emphasize, withStyles, Theme } from \"@material-ui/core/styles\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { paths as getPaths, queueDetailsPath } from \"../paths\";\nimport { isDarkTheme } from \"../theme\";\n\nconst StyledBreadcrumb = withStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: isDarkTheme(theme)\n      ? \"#303030\"\n      : theme.palette.background.default,\n    height: theme.spacing(3),\n    color: theme.palette.text.secondary,\n    fontWeight: 400,\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    \"&:active\": {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.action.hover, 0.12),\n    },\n  },\n}))(Chip) as typeof Chip; // Note: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\ninterface Props {\n  // All queue names.\n  queues: string[];\n  // Name of the queue currently selected.\n  queueName: string;\n  // ID of the task currently selected (optional).\n  taskId?: string;\n}\n\nexport default function QueueBreadcrumbs(props: Props) {\n  const history = useHistory();\n  const [anchorEl, setAnchorEl] = useState<null | Element>(null);\n  const paths = getPaths();\n\n  const handleClick = (event: React.MouseEvent<Element, MouseEvent>) => {\n    event.preventDefault();\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeMenu = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        <StyledBreadcrumb\n          component={Link}\n          to={paths.HOME}\n          label=\"Queues\"\n          onClick={() => history.push(paths.HOME)}\n        />\n        <StyledBreadcrumb\n          label={props.queueName}\n          deleteIcon={<ExpandMoreIcon />}\n          onClick={handleClick}\n          onDelete={handleClick}\n        />\n        {props.taskId && <StyledBreadcrumb label={`task:${props.taskId}`} />}\n      </Breadcrumbs>\n      <Menu\n        id=\"queue-breadcrumb-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        {props.queues.sort().map((qname) => (\n          <MenuItem\n            key={qname}\n            onClick={() => {\n              history.push(queueDetailsPath(qname));\n              closeMenu();\n            }}\n          >\n            {qname}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TasksTable from \"../components/TasksTable\";\nimport QueueInfoBanner from \"../components/QueueInfoBanner\";\nimport QueueBreadCrumb from \"../components/QueueBreadcrumb\";\nimport { useParams } from \"react-router-dom\";\nimport { listQueuesAsync } from \"../actions/queuesActions\";\nimport { AppState } from \"../store\";\nimport { QueueDetailsRouteParams } from \"../paths\";\nimport { useQuery } from \"../hooks\";\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    queues: state.queues.data.map((q) => q.name),\n  };\n}\n\nconst connector = connect(mapStateToProps, { listQueuesAsync });\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(2),\n  },\n  breadcrumbs: {\n    marginBottom: theme.spacing(2),\n  },\n  banner: {\n    marginBottom: theme.spacing(2),\n  },\n  tasksTable: {\n    marginBottom: theme.spacing(4),\n  },\n}));\n\nconst validStatus = [\n  \"active\",\n  \"pending\",\n  \"scheduled\",\n  \"retry\",\n  \"archived\",\n  \"completed\",\n];\nconst defaultStatus = \"active\";\n\nfunction TasksView(props: ConnectedProps<typeof connector>) {\n  const classes = useStyles();\n  const { qname } = useParams<QueueDetailsRouteParams>();\n  const query = useQuery();\n  let selected = query.get(\"status\");\n  if (!selected || !validStatus.includes(selected)) {\n    selected = defaultStatus;\n  }\n  const { listQueuesAsync } = props;\n\n  useEffect(() => {\n    listQueuesAsync();\n  }, [listQueuesAsync]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container spacing={0} className={classes.container}>\n        <Grid item xs={12} className={classes.breadcrumbs}>\n          <QueueBreadCrumb queues={props.queues} queueName={qname} />\n        </Grid>\n        <Grid item xs={12} className={classes.banner}>\n          <QueueInfoBanner qname={qname} />\n        </Grid>\n        <Grid item xs={12} className={classes.tasksTable}>\n          <TasksTable queue={qname} selected={selected} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default connector(TasksView);\n","import React, { useMemo, useEffect } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { useParams } from \"react-router-dom\";\nimport QueueBreadCrumb from \"../components/QueueBreadcrumb\";\nimport { AppState } from \"../store\";\nimport { getTaskInfoAsync } from \"../actions/tasksActions\";\nimport { TaskDetailsRouteParams } from \"../paths\";\nimport { usePolling } from \"../hooks\";\nimport { listQueuesAsync } from \"../actions/queuesActions\";\nimport SyntaxHighlighter from \"../components/SyntaxHighlighter\";\nimport { durationFromSeconds, stringifyDuration, timeAgo, prettifyPayload } from \"../utils\";\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.tasks.taskInfo.loading,\n    error: state.tasks.taskInfo.error,\n    taskInfo: state.tasks.taskInfo.data,\n    pollInterval: state.settings.pollInterval,\n    queues: state.queues.data.map((q) => q.name), // FIXME: This data may not be available\n  };\n}\n\nconst connector = connect(mapStateToProps, {\n  getTaskInfoAsync,\n  listQueuesAsync,\n});\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(2),\n  },\n  alert: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n  },\n  breadcrumbs: {\n    marginBottom: theme.spacing(2),\n  },\n  infoRow: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(1),\n  },\n  infoKeyCell: {\n    width: \"140px\",\n  },\n  infoValueCell: {\n    width: \"auto\",\n  },\n  footer: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n  },\n}));\n\ntype Props = ConnectedProps<typeof connector>;\n\nfunction TaskDetailsView(props: Props) {\n  const classes = useStyles();\n  const { qname, taskId } = useParams<TaskDetailsRouteParams>();\n  const { getTaskInfoAsync, pollInterval, listQueuesAsync, taskInfo } = props;\n  const history = useHistory();\n\n  const fetchTaskInfo = useMemo(() => {\n    return () => {\n      getTaskInfoAsync(qname, taskId);\n    };\n  }, [qname, taskId, getTaskInfoAsync]);\n\n  usePolling(fetchTaskInfo, pollInterval);\n\n  // Fetch queues data to populate props.queues\n  useEffect(() => {\n    listQueuesAsync();\n  }, [listQueuesAsync]);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={0}>\n        <Grid item xs={12} className={classes.breadcrumbs}>\n          <QueueBreadCrumb\n            queues={props.queues}\n            queueName={qname}\n            taskId={taskId}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          {props.error ? (\n            <Alert severity=\"error\" className={classes.alert}>\n              <AlertTitle>Error</AlertTitle>\n              {props.error}\n            </Alert>\n          ) : (\n            <Paper className={classes.paper} variant=\"outlined\">\n              <Typography variant=\"h6\">Task Info</Typography>\n              <div>\n                <div className={classes.infoRow}>\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.infoKeyCell}\n                  >\n                    ID:{\" \"}\n                  </Typography>\n                  <Typography className={classes.infoValueCell}>\n                    {taskInfo?.id}\n                  </Typography>\n                </div>\n                <div className={classes.infoRow}>\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.infoKeyCell}\n                  >\n                    Type:{\" \"}\n                  </Typography>\n                  <Typography className={classes.infoValueCell}>\n                    {taskInfo?.type}\n                  </Typography>\n                </div>\n                <div className={classes.infoRow}>\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.infoKeyCell}\n                  >\n                    State:{\" \"}\n                  </Typography>\n                  <Typography className={classes.infoValueCell}>\n                    {taskInfo?.state}\n                  </Typography>\n                </div>\n                <div className={classes.infoRow}>\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.infoKeyCell}\n                  >\n                    Queue:{\" \"}\n                  </Typography>\n                  <Typography className={classes.infoValueCell}>\n                    {taskInfo?.queue}\n                  </Typography>\n                </div>\n                <div className={classes.infoRow}>\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.infoKeyCell}\n                  >\n                    Retry:{\" \"}\n                  </Typography>\n                  <Typography className={classes.infoValueCell}>\n                    {taskInfo?.retried}/{taskInfo?.max_retry}\n                  </Typography>\n                </div>\n                <div className={classes.infoRow}>\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.infoKeyCell}\n                  >\n                    Last Failure:{\" \"}\n                  </Typography>\n                  <Typography className={classes.infoValueCell}>\n                    {taskInfo?.last_failed_at ? (\n                      <Typography>\n                        {taskInfo?.error_message} ({taskInfo?.last_failed_at})\n                      </Typography>\n                    ) : (\n                      <Typography> - </Typography>\n                    )}\n                  </Typography>\n                </div>\n                <div className={classes.infoRow}>\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.infoKeyCell}\n                  >\n                    Next Process Time:{\" \"}\n                  </Typography>\n                  {taskInfo?.next_process_at ? (\n                    <Typography>{taskInfo?.next_process_at}</Typography>\n                  ) : (\n                    <Typography> - </Typography>\n                  )}\n                </div>\n              </div>\n              <div className={classes.infoRow}>\n                <Typography variant=\"subtitle2\" className={classes.infoKeyCell}>\n                  Timeout:{\" \"}\n                </Typography>\n                <Typography className={classes.infoValueCell}>\n                  {taskInfo?.timeout_seconds ? (\n                    <Typography>{taskInfo?.timeout_seconds} seconds</Typography>\n                  ) : (\n                    <Typography> - </Typography>\n                  )}\n                </Typography>\n              </div>\n              <div className={classes.infoRow}>\n                <Typography variant=\"subtitle2\" className={classes.infoKeyCell}>\n                  Deadline:{\" \"}\n                </Typography>\n                <Typography className={classes.infoValueCell}>\n                  {taskInfo?.deadline ? (\n                    <Typography>{taskInfo?.deadline}</Typography>\n                  ) : (\n                    <Typography> - </Typography>\n                  )}\n                </Typography>\n              </div>\n              <div className={classes.infoRow}>\n                <Typography variant=\"subtitle2\" className={classes.infoKeyCell}>\n                  Payload:{\" \"}\n                </Typography>\n                <div className={classes.infoValueCell}>\n                  {taskInfo?.payload && (\n                    <SyntaxHighlighter\n                      language=\"json\"\n                      customStyle={{ margin: 0, maxWidth: 400 }}\n                    >\n                      {prettifyPayload(taskInfo.payload)}\n                    </SyntaxHighlighter>\n                  )}\n                </div>\n              </div>\n              {\n                /* Completed Task Only */ taskInfo?.state === \"completed\" && (\n                  <>\n                    <div className={classes.infoRow}>\n                      <Typography\n                        variant=\"subtitle2\"\n                        className={classes.infoKeyCell}\n                      >\n                        Completed:{\" \"}\n                      </Typography>\n                      <div className={classes.infoValueCell}>\n                        <Typography>\n                          {timeAgo(taskInfo.completed_at)} (\n                          {taskInfo.completed_at})\n                        </Typography>\n                      </div>\n                    </div>\n                    <div className={classes.infoRow}>\n                      <Typography\n                        variant=\"subtitle2\"\n                        className={classes.infoKeyCell}\n                      >\n                        Result:{\" \"}\n                      </Typography>\n                      <div className={classes.infoValueCell}>\n                        <SyntaxHighlighter\n                          language=\"json\"\n                          customStyle={{ margin: 0, maxWidth: 400 }}\n                        >\n                          {prettifyPayload(taskInfo.result)}\n                        </SyntaxHighlighter>\n                      </div>\n                    </div>\n                    <div className={classes.infoRow}>\n                      <Typography\n                        variant=\"subtitle2\"\n                        className={classes.infoKeyCell}\n                      >\n                        TTL:{\" \"}\n                      </Typography>\n                      <Typography className={classes.infoValueCell}>\n                        <Typography>\n                          {taskInfo.ttl_seconds > 0\n                            ? `${stringifyDuration(\n                                durationFromSeconds(taskInfo.ttl_seconds)\n                              )} left`\n                            : \"expired\"}\n                        </Typography>\n                      </Typography>\n                    </div>\n                  </>\n                )\n              }\n            </Paper>\n          )}\n          <div className={classes.footer}>\n            <Button\n              startIcon={<ArrowBackIcon />}\n              onClick={() => history.goBack()}\n            >\n              Go Back\n            </Button>\n          </div>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default connector(TaskDetailsView);\n","import React, { useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { pollIntervalChange, selectTheme } from \"../actions/settingsActions\";\nimport { AppState } from \"../store\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { ThemePreference } from \"../reducers/settingsReducer\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  select: {\n    width: \"200px\",\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    pollInterval: state.settings.pollInterval,\n    themePreference: state.settings.themePreference,\n  };\n}\n\nconst mapDispatchToProps = { pollIntervalChange, selectTheme };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction SettingsView(props: PropsFromRedux) {\n  const classes = useStyles();\n\n  const [sliderValue, setSliderValue] = useState(props.pollInterval);\n  const handleSliderValueChange = (event: any, val: number | number[]) => {\n    setSliderValue(val as number);\n  };\n\n  const handleSliderValueCommited = (event: any, val: number | number[]) => {\n    props.pollIntervalChange(val as number);\n  };\n\n  const handleThemeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.selectTheme(event.target.value as ThemePreference);\n  };\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item xs={1} />\n        <Grid item xs={6}>\n          <Typography variant=\"h5\" color=\"textPrimary\">\n            Settings\n          </Typography>\n        </Grid>\n        <Grid item xs={5} />\n\n        <Grid item xs={1} />\n        <Grid item xs={6}>\n          <Paper className={classes.paper} variant=\"outlined\">\n            <Typography color=\"textPrimary\">Polling Interval</Typography>\n            <Typography gutterBottom color=\"textSecondary\" variant=\"subtitle1\">\n              Web UI will fetch live data with the specified interval\n            </Typography>\n            <Typography gutterBottom color=\"textSecondary\" variant=\"subtitle1\">\n              Currently: Every{\" \"}\n              {sliderValue === 1 ? \"second\" : `${sliderValue} seconds`}\n            </Typography>\n            <Slider\n              value={sliderValue}\n              onChange={handleSliderValueChange}\n              onChangeCommitted={handleSliderValueCommited}\n              aria-labelledby=\"continuous-slider\"\n              valueLabelDisplay=\"auto\"\n              step={1}\n              marks={true}\n              min={2}\n              max={20}\n            />\n          </Paper>\n        </Grid>\n        <Grid xs={5} />\n\n        <Grid item xs={1} />\n        <Grid item xs={6}>\n          <Paper className={classes.paper} variant=\"outlined\">\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <Typography color=\"textPrimary\">Dark Theme</Typography>\n              <Select\n                labelId=\"theme-label\"\n                id=\"theme-selected\"\n                value={props.themePreference}\n                onChange={handleThemeChange}\n                label=\"theme preference\"\n                className={classes.select}\n              >\n                <MenuItem value={ThemePreference.SystemDefault}>\n                  System Default\n                </MenuItem>\n                <MenuItem value={ThemePreference.Always}>Always</MenuItem>\n                <MenuItem value={ThemePreference.Never}>Never</MenuItem>\n              </Select>\n            </FormControl>\n          </Paper>\n        </Grid>\n        <Grid item xs={5} />\n      </Grid>\n    </Container>\n  );\n}\n\nexport default connector(SettingsView);\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport { ServerInfo } from \"../api\";\nimport { SortDirection, SortableTableColumn } from \"../types/table\";\nimport { timeAgo, uuidPrefix, prettifyPayload } from \"../utils\";\nimport { queueDetailsPath } from \"../paths\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  fixedCell: {\n    position: \"sticky\",\n    zIndex: 1,\n    left: 0,\n    background: theme.palette.background.paper,\n  },\n}));\n\nenum SortBy {\n  HostPID,\n  Status,\n  ActiveWorkers,\n  Queues,\n  Started,\n}\nconst colConfigs: SortableTableColumn<SortBy>[] = [\n  {\n    label: \"Host:PID\",\n    key: \"host\",\n    sortBy: SortBy.HostPID,\n    align: \"left\",\n  },\n  {\n    label: \"Started\",\n    key: \"started\",\n    sortBy: SortBy.Started,\n    align: \"left\",\n  },\n  {\n    label: \"Status\",\n    key: \"status\",\n    sortBy: SortBy.Status,\n    align: \"left\",\n  },\n  {\n    label: \"Queues\",\n    key: \"queues\",\n    sortBy: SortBy.Queues,\n    align: \"left\",\n  },\n  {\n    label: \"Active Workers\",\n    key: \"workers\",\n    sortBy: SortBy.ActiveWorkers,\n    align: \"left\",\n  },\n];\n\n// sortServers takes a array of server-infos and return a sorted array.\n// It returns a new array and leave the original array untouched.\nfunction sortServerInfos(\n  entries: ServerInfo[],\n  cmpFn: (first: ServerInfo, second: ServerInfo) => number\n): ServerInfo[] {\n  let copy = [...entries];\n  copy.sort(cmpFn);\n  return copy;\n}\n\ninterface Props {\n  servers: ServerInfo[];\n}\n\nexport default function ServersTable(props: Props) {\n  const classes = useStyles();\n  const [sortBy, setSortBy] = useState<SortBy>(SortBy.HostPID);\n  const [sortDir, setSortDir] = useState<SortDirection>(SortDirection.Asc);\n\n  const createSortClickHandler = (sortKey: SortBy) => (e: React.MouseEvent) => {\n    if (sortKey === sortBy) {\n      // Toggle sort direction.\n      const nextSortDir =\n        sortDir === SortDirection.Asc ? SortDirection.Desc : SortDirection.Asc;\n      setSortDir(nextSortDir);\n    } else {\n      // Change the sort key.\n      setSortBy(sortKey);\n    }\n  };\n\n  const cmpFunc = (s1: ServerInfo, s2: ServerInfo): number => {\n    let isS1Smaller = false;\n    switch (sortBy) {\n      case SortBy.HostPID:\n        if (s1.host === s2.host && s1.pid === s2.pid) return 0;\n        if (s1.host === s2.host) {\n          isS1Smaller = s1.pid < s2.pid;\n        } else {\n          isS1Smaller = s1.host < s2.host;\n        }\n        break;\n      case SortBy.Started:\n        const s1StartTime = Date.parse(s1.start_time);\n        const s2StartTime = Date.parse(s2.start_time);\n        if (s1StartTime === s2StartTime) return 0;\n        isS1Smaller = s1StartTime < s2StartTime;\n        break;\n      case SortBy.Status:\n        if (s1.status === s2.status) return 0;\n        isS1Smaller = s1.status < s2.status;\n        break;\n      case SortBy.Queues:\n        const s1Queues = Object.keys(s1.queue_priorities).join(\",\");\n        const s2Queues = Object.keys(s2.queue_priorities).join(\",\");\n        if (s1Queues === s2Queues) return 0;\n        isS1Smaller = s1Queues < s2Queues;\n        break;\n      case SortBy.ActiveWorkers:\n        if (s1.active_workers.length === s2.active_workers.length) {\n          return 0;\n        }\n        isS1Smaller = s1.active_workers.length < s2.active_workers.length;\n        break;\n      default:\n        // eslint-disable-next-line no-throw-literal\n        throw `Unexpected order by value: ${sortBy}`;\n    }\n    if (sortDir === SortDirection.Asc) {\n      return isS1Smaller ? -1 : 1;\n    } else {\n      return isS1Smaller ? 1 : -1;\n    }\n  };\n\n  if (props.servers.length === 0) {\n    return (\n      <Alert severity=\"info\">\n        <AlertTitle>Info</AlertTitle>\n        No servers found at this time.\n      </Alert>\n    );\n  }\n\n  return (\n    <TableContainer>\n      <Table className={classes.table} aria-label=\"server info table\">\n        <TableHead>\n          <TableRow>\n            {colConfigs.map((cfg, i) => (\n              <TableCell\n                key={cfg.key}\n                align={cfg.align}\n                className={clsx(i === 0 && classes.fixedCell)}\n              >\n                <TableSortLabel\n                  active={cfg.sortBy === sortBy}\n                  direction={sortDir}\n                  onClick={createSortClickHandler(cfg.sortBy)}\n                >\n                  {cfg.label}\n                </TableSortLabel>\n              </TableCell>\n            ))}\n            <TableCell />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {sortServerInfos(props.servers, cmpFunc).map((srv) => (\n            <Row key={srv.id} server={srv} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\ninterface RowProps {\n  server: ServerInfo;\n}\n\nconst useRowStyles = makeStyles((theme) => ({\n  rowRoot: {\n    \"& > *\": {\n      borderBottom: \"unset\",\n    },\n  },\n  noBorder: {\n    border: \"none\",\n  },\n  link: {\n    color: theme.palette.text.primary,\n  },\n}));\n\nfunction Row(props: RowProps) {\n  const classes = useRowStyles();\n  const { server } = props;\n  const [open, setOpen] = useState<boolean>(false);\n  const qnames = Object.keys(server.queue_priorities);\n  return (\n    <React.Fragment>\n      <TableRow className={classes.rowRoot}>\n        <TableCell>\n          {server.host}:{server.pid}\n        </TableCell>\n        <TableCell>{timeAgo(server.start_time)}</TableCell>\n        <TableCell>{server.status}</TableCell>\n        <TableCell>\n          {qnames.map((qname, idx) => (\n            <span key={qname}>\n              <Link to={queueDetailsPath(qname)} className={classes.link}>\n                {qname}\n              </Link>\n              {idx === qnames.length - 1 ? \"\" : \", \"}\n            </span>\n          ))}\n        </TableCell>\n        <TableCell>\n          {server.active_workers.length}/{server.concurrency}\n        </TableCell>\n        <TableCell>\n          <Tooltip title={open ? \"Hide Details\" : \"Show Details\"}>\n            <IconButton\n              aria-label=\"expand row\"\n              size=\"small\"\n              onClick={() => setOpen(!open)}\n            >\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </IconButton>\n          </Tooltip>\n        </TableCell>\n      </TableRow>\n      <TableRow className={classes.rowRoot}>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Grid container spacing={2}>\n              <Grid item xs={9}>\n                <Typography\n                  variant=\"subtitle1\"\n                  gutterBottom\n                  color=\"textSecondary\"\n                >\n                  Active Workers\n                </Typography>\n                <Table size=\"small\" aria-label=\"active workers\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Task ID</TableCell>\n                      <TableCell>Task Payload</TableCell>\n                      <TableCell>Queue</TableCell>\n                      <TableCell>Started</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {server.active_workers.map((worker) => (\n                      <TableRow key={worker.task_id}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {uuidPrefix(worker.task_id)}\n                        </TableCell>\n                        <TableCell>\n                          <SyntaxHighlighter\n                            language=\"json\"\n                            customStyle={{ margin: 0 }}\n                          >\n                            {prettifyPayload(worker.task_payload)}\n                          </SyntaxHighlighter>\n                        </TableCell>\n                        <TableCell>{worker.queue}</TableCell>\n                        <TableCell>{timeAgo(worker.start_time)}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </Grid>\n              <Grid item xs={3}>\n                <Typography\n                  variant=\"subtitle1\"\n                  gutterBottom\n                  color=\"textSecondary\"\n                >\n                  Queue Priority\n                </Typography>\n                <Table size=\"small\" aria-label=\"active workers\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Queue</TableCell>\n                      <TableCell align=\"right\">Priority</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {qnames.map((qname) => (\n                      <TableRow key={qname}>\n                        <TableCell>\n                          <Link\n                            to={queueDetailsPath(qname)}\n                            className={classes.link}\n                          >\n                            {qname}\n                          </Link>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {server.queue_priorities[qname]}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n                <Box margin={2}>\n                  <Typography variant=\"subtitle2\" component=\"span\">\n                    Strict Priority:{\" \"}\n                  </Typography>\n                  <Typography variant=\"button\" component=\"span\">\n                    {server.strict_priority_enabled ? \"ON\" : \"OFF\"}\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n","import { Dispatch } from \"redux\";\nimport { listServers, ListServersResponse } from \"../api\";\nimport { toErrorString, toErrorStringWithHttpStatus } from \"../utils\";\n\n// List of server related action types.\nexport const LIST_SERVERS_BEGIN = \"LIST_SERVERS_BEGIN\";\nexport const LIST_SERVERS_SUCCESS = \"LIST_SERVERS_SUCCESS\";\nexport const LIST_SERVERS_ERROR = \"LIST_SERVERS_ERROR\";\n\ninterface ListServersBeginAction {\n  type: typeof LIST_SERVERS_BEGIN;\n}\ninterface ListServersSuccessAction {\n  type: typeof LIST_SERVERS_SUCCESS;\n  payload: ListServersResponse;\n}\ninterface ListServersErrorAction {\n  type: typeof LIST_SERVERS_ERROR;\n  error: string; // error description\n}\n\n// Union of all server related actions.\nexport type ServersActionTypes =\n  | ListServersBeginAction\n  | ListServersSuccessAction\n  | ListServersErrorAction;\n\nexport function listServersAsync() {\n  return async (dispatch: Dispatch<ServersActionTypes>) => {\n    dispatch({ type: LIST_SERVERS_BEGIN });\n    try {\n      const response = await listServers();\n      dispatch({\n        type: LIST_SERVERS_SUCCESS,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(`listServersAsync: ${toErrorStringWithHttpStatus(error)}`);\n      dispatch({\n        type: LIST_SERVERS_ERROR,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport ServersTable from \"../components/ServersTable\";\nimport { listServersAsync } from \"../actions/serversActions\";\nimport { AppState } from \"../store\";\nimport { usePolling } from \"../hooks\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  heading: {\n    paddingLeft: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.servers.loading,\n    error: state.servers.error,\n    servers: state.servers.data,\n    pollInterval: state.settings.pollInterval,\n  };\n}\n\nconst connector = connect(mapStateToProps, { listServersAsync });\n\ntype Props = ConnectedProps<typeof connector>;\n\nfunction ServersView(props: Props) {\n  const { pollInterval, listServersAsync } = props;\n  const classes = useStyles();\n\n  usePolling(listServersAsync, pollInterval);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        {props.error === \"\" ? (\n          <Grid item xs={12}>\n            <Paper className={classes.paper} variant=\"outlined\">\n              <Typography variant=\"h6\" className={classes.heading}>\n                Servers\n              </Typography>\n              <ServersTable servers={props.servers} />\n            </Paper>\n          </Grid>\n        ) : (\n          <Grid item xs={12}>\n            <Alert severity=\"error\">\n              <AlertTitle>Error</AlertTitle>\n              Could not retrieve servers live data —{\" \"}\n              <strong>See the logs for details</strong>\n            </Alert>\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default connector(ServersView);\n","import { Dispatch } from \"redux\";\nimport { getRedisInfo, RedisInfoResponse } from \"../api\";\nimport { toErrorString, toErrorStringWithHttpStatus } from \"../utils\";\n\n// List of redis-info related action types.\nexport const GET_REDIS_INFO_BEGIN = \"GET_REDIS_INFO_BEGIN\";\nexport const GET_REDIS_INFO_SUCCESS = \"GET_REDIS_INFO_SUCCESS\";\nexport const GET_REDIS_INFO_ERROR = \"GET_REDIS_INFO_ERROR\";\n\ninterface GetRedisInfoBeginAction {\n  type: typeof GET_REDIS_INFO_BEGIN;\n}\n\ninterface GetRedisInfoSuccessAction {\n  type: typeof GET_REDIS_INFO_SUCCESS;\n  payload: RedisInfoResponse;\n}\n\ninterface GetRedisInfoErrorAction {\n  type: typeof GET_REDIS_INFO_ERROR;\n  error: string;\n}\n\n// Union of all redis-info related actions.\nexport type RedisInfoActionTypes =\n  | GetRedisInfoBeginAction\n  | GetRedisInfoErrorAction\n  | GetRedisInfoSuccessAction;\n\nexport function getRedisInfoAsync() {\n  return async (dispatch: Dispatch<RedisInfoActionTypes>) => {\n    dispatch({ type: GET_REDIS_INFO_BEGIN });\n    try {\n      const response = await getRedisInfo();\n      dispatch({ type: GET_REDIS_INFO_SUCCESS, payload: response });\n    } catch (error) {\n      console.error(`getRedisInfoAsync: ${toErrorStringWithHttpStatus(error)}`);\n      dispatch({\n        type: GET_REDIS_INFO_ERROR,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { QueueLocation } from \"../api\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n}));\n\ninterface Props {\n  queueLocations: QueueLocation[];\n}\n\nexport default function QueueLocationTable(props: Props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer>\n      <Table className={classes.table} aria-label=\"queue location table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Queue</TableCell>\n            <TableCell>KeySlot</TableCell>\n            <TableCell>Node Addresses</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.queueLocations.map((loc) => (\n            <TableRow key={loc.queue}>\n              <TableCell component=\"th\" scope=\"row\">\n                {loc.queue}\n              </TableCell>\n              <TableCell>{loc.keyslot}</TableCell>\n              <TableCell>{loc.nodes.join(\", \")}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport SyntaxHighlighter from \"../components/SyntaxHighlighter\";\nimport { getRedisInfoAsync } from \"../actions/redisInfoActions\";\nimport { usePolling } from \"../hooks\";\nimport { AppState } from \"../store\";\nimport { timeAgoUnix } from \"../utils\";\nimport { RedisInfo } from \"../api\";\nimport QueueLocationTable from \"../components/QueueLocationTable\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.redis.loading,\n    error: state.redis.error,\n    redisInfo: state.redis.data,\n    redisAddress: state.redis.address,\n    redisInfoRaw: state.redis.rawData,\n    redisClusterEnabled: state.redis.cluster,\n    redisClusterNodesRaw: state.redis.rawClusterNodes,\n    queueLocations: state.redis.queueLocations,\n    pollInterval: state.settings.pollInterval,\n    themePreference: state.settings.themePreference,\n  };\n}\n\nconst connector = connect(mapStateToProps, { getRedisInfoAsync });\ntype Props = ConnectedProps<typeof connector>;\n\nfunction RedisInfoView(props: Props) {\n  const classes = useStyles();\n  const {\n    pollInterval,\n    getRedisInfoAsync,\n    redisInfo,\n    redisInfoRaw,\n    redisClusterEnabled,\n    redisClusterNodesRaw,\n    queueLocations,\n  } = props;\n  usePolling(getRedisInfoAsync, pollInterval);\n\n  // Metrics to show\n  // - Used Memory\n  // - Memory Fragmentation Ratio\n  // - Connected Clients\n  // - Connected Replicas (slaves)\n  // - Persistence (rdb_last_save_time, rdb_changes_since_last_save)\n  // - Errors (rejected_connections)\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        {props.error === \"\" ? (\n          <>\n            <Grid item xs={12}>\n              <Typography variant=\"h5\" color=\"textPrimary\">\n                {redisClusterEnabled ? \"Redis Cluster Info\" : \"Redis Info\"}\n              </Typography>\n              {!redisClusterEnabled && (\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                  Connected to: {props.redisAddress}\n                </Typography>\n              )}\n            </Grid>\n            {queueLocations && queueLocations.length > 0 && (\n              <Grid item xs={12}>\n                <Typography variant=\"h6\" color=\"textSecondary\">\n                  Queue Location in Cluster\n                </Typography>\n                <QueueLocationTable queueLocations={queueLocations} />\n              </Grid>\n            )}\n            {redisClusterNodesRaw && (\n              <>\n                <Grid item xs={12}>\n                  <Typography variant=\"h6\" color=\"textSecondary\">\n                    <Link\n                      href=\"https://redis.io/commands/cluster-nodes\"\n                      target=\"_\"\n                    >\n                      CLUSTER NODES\n                    </Link>{\" \"}\n                    Command Output\n                  </Typography>\n                  <SyntaxHighlighter language=\"yaml\">\n                    {redisClusterNodesRaw}\n                  </SyntaxHighlighter>\n                </Grid>\n              </>\n            )}\n            {redisInfo && !redisClusterEnabled && (\n              <RedisMetricCards redisInfo={redisInfo} />\n            )}\n            {redisInfoRaw && (\n              <>\n                <Grid item xs={6}>\n                  <Typography variant=\"h6\" color=\"textSecondary\">\n                    {redisClusterEnabled ? (\n                      <Link\n                        href=\"https://redis.io/commands/cluster-info\"\n                        target=\"_\"\n                      >\n                        CLUSTER INFO\n                      </Link>\n                    ) : (\n                      <Link href=\"https://redis.io/commands/info\" target=\"_\">\n                        INFO\n                      </Link>\n                    )}{\" \"}\n                    Command Output\n                  </Typography>\n                  <SyntaxHighlighter language=\"yaml\">\n                    {redisInfoRaw}\n                  </SyntaxHighlighter>\n                </Grid>\n              </>\n            )}\n          </>\n        ) : (\n          <Grid item xs={12}>\n            <Alert severity=\"error\">\n              <AlertTitle>Error</AlertTitle>\n              Could not retrieve redis live data —{\" \"}\n              <strong>See the logs for details</strong>\n            </Alert>\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n}\n\nfunction RedisMetricCards(props: { redisInfo: RedisInfo }) {\n  const { redisInfo } = props;\n  return (\n    <>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Server\n        </Typography>\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard title=\"Version\" content={redisInfo.redis_version} />\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard\n          title=\"Uptime\"\n          content={`${redisInfo.uptime_in_days} days`}\n        />\n      </Grid>\n      <Grid item xs={6} />\n      <Grid item xs={12}>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Memory\n        </Typography>\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard title=\"Used Memory\" content={redisInfo.used_memory_human} />\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard\n          title=\"Peak Memory Used\"\n          content={redisInfo.used_memory_peak_human}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard\n          title=\"Memory Fragmentation Ratio\"\n          content={redisInfo.mem_fragmentation_ratio}\n        />\n      </Grid>\n      <Grid item xs={3} />\n      <Grid item xs={12}>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Connections\n        </Typography>\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard\n          title=\"Connected Clients\"\n          content={redisInfo.connected_clients}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard\n          title=\"Connected Replicas\"\n          content={redisInfo.connected_slaves}\n        />\n      </Grid>\n      <Grid item xs={6} />\n      <Grid item xs={12}>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Persistence\n        </Typography>\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard\n          title=\"Last Save to Disk\"\n          content={timeAgoUnix(parseInt(redisInfo.rdb_last_save_time))}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard\n          title=\"Number of Changes Since Last Dump\"\n          content={redisInfo.rdb_changes_since_last_save}\n        />\n      </Grid>\n      <Grid item xs={6} />\n    </>\n  );\n}\n\ninterface MetricCardProps {\n  title: string;\n  content: string;\n}\n\nfunction MetricCard(props: MetricCardProps) {\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography\n          gutterBottom\n          color=\"textPrimary\"\n          variant=\"h5\"\n          align=\"center\"\n        >\n          {props.content}\n        </Typography>\n        <Typography color=\"textSecondary\" variant=\"subtitle2\" align=\"center\">\n          {props.title}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default connector(RedisInfoView);\n","import { Dispatch } from \"redux\";\nimport { getMetrics, MetricsResponse } from \"../api\";\nimport { toErrorString, toErrorStringWithHttpStatus } from \"../utils\";\n\n// List of metrics related action types.\nexport const GET_METRICS_BEGIN = \"GET_METRICS_BEGIN\";\nexport const GET_METRICS_SUCCESS = \"GET_METRICS_SUCCESS\";\nexport const GET_METRICS_ERROR = \"GET_METRICS_ERROR\";\n\ninterface GetMetricsBeginAction {\n  type: typeof GET_METRICS_BEGIN;\n}\n\ninterface GetMetricsSuccessAction {\n  type: typeof GET_METRICS_SUCCESS;\n  payload: MetricsResponse;\n}\n\ninterface GetMetricsErrorAction {\n  type: typeof GET_METRICS_ERROR;\n  error: string;\n}\n\n// Union of all metrics related actions.\nexport type MetricsActionTypes =\n  | GetMetricsBeginAction\n  | GetMetricsSuccessAction\n  | GetMetricsErrorAction;\n\nexport function getMetricsAsync(\n  endTime: number,\n  duration: number,\n  queues: string[]\n) {\n  return async (dispatch: Dispatch<MetricsActionTypes>) => {\n    dispatch({ type: GET_METRICS_BEGIN });\n    try {\n      const response = await getMetrics(endTime, duration, queues);\n      dispatch({ type: GET_METRICS_SUCCESS, payload: response });\n    } catch (error) {\n      console.error(`getMetricsAsync: ${toErrorStringWithHttpStatus(error)}`);\n      dispatch({\n        type: GET_METRICS_ERROR,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n","import { useTheme } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Metrics } from \"../api\";\n\ninterface Props {\n  data: Metrics[];\n\n  // both startTime and endTime are in unix time (seconds)\n  startTime: number;\n  endTime: number;\n\n  // (optional): Tick formatter function for YAxis\n  yAxisTickFormatter?: (val: number) => string;\n}\n\n// interface that rechart understands.\ninterface ChartData {\n  timestamp: number;\n  [qname: string]: number;\n}\n\nfunction toChartData(metrics: Metrics[]): ChartData[] {\n  if (metrics.length === 0) {\n    return [];\n  }\n  let byTimestamp: { [key: number]: ChartData } = {};\n  for (let x of metrics) {\n    for (let [ts, val] of x.values) {\n      if (!byTimestamp[ts]) {\n        byTimestamp[ts] = { timestamp: ts };\n      }\n      const qname = x.metric.queue;\n      if (qname) {\n        byTimestamp[ts][qname] = parseFloat(val);\n      }\n    }\n  }\n  return Object.values(byTimestamp);\n}\n\nconst lineColors = [\n  \"#2085ec\",\n  \"#72b4eb\",\n  \"#0a417a\",\n  \"#8464a0\",\n  \"#cea9bc\",\n  \"#323232\",\n];\n\nfunction QueueMetricsChart(props: Props) {\n  const theme = useTheme();\n\n  const data = toChartData(props.data);\n  const keys = props.data.map((x) => x.metric.queue);\n  return (\n    <ResponsiveContainer height={260}>\n      <LineChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          minTickGap={10}\n          dataKey=\"timestamp\"\n          domain={[props.startTime, props.endTime]}\n          tickFormatter={(timestamp: number) =>\n            new Date(timestamp * 1000).toLocaleTimeString()\n          }\n          type=\"number\"\n          scale=\"time\"\n          stroke={theme.palette.text.secondary}\n        />\n        <YAxis\n          tickFormatter={props.yAxisTickFormatter}\n          stroke={theme.palette.text.secondary}\n        />\n        <Tooltip\n          labelFormatter={(timestamp: number) => {\n            return new Date(timestamp * 1000).toLocaleTimeString();\n          }}\n        />\n        <Legend />\n        {keys.map((key, idx) => (\n          <Line\n            key={key}\n            type=\"monotone\"\n            dataKey={key}\n            stroke={lineColors[idx % lineColors.length]}\n            dot={false}\n          />\n        ))}\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n\nQueueMetricsChart.defaultProps = {\n  yAxisTickFormatter: (val: number) => val.toString(),\n};\n\nexport default QueueMetricsChart;\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Button, { ButtonProps } from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport dayjs from \"dayjs\";\nimport { currentUnixtime, parseDuration } from \"../utils\";\nimport { AppState } from \"../store\";\nimport { isDarkTheme } from \"../theme\";\n\nfunction mapStateToProps(state: AppState) {\n  return { pollInterval: state.settings.pollInterval };\n}\n\nconst connector = connect(mapStateToProps);\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props extends ReduxProps {\n  // Specifies the endtime in Unix time seconds.\n  endTimeSec: number;\n  onEndTimeChange: (t: number, isEndTimeFixed: boolean) => void;\n\n  // Specifies the duration in seconds.\n  durationSec: number;\n  onDurationChange: (d: number, isEndTimeFixed: boolean) => void;\n\n  // All available queues.\n  queues: string[];\n  // Selected queues.\n  selectedQueues: string[];\n  addQueue: (qname: string) => void;\n  removeQueue: (qname: string) => void;\n}\n\ninterface State {\n  endTimeOption: EndTimeOption;\n  durationOption: DurationOption;\n  customEndTime: string; // text shown in input field\n  customDuration: string; // text shown in input field\n  customEndTimeError: string;\n  customDurationError: string;\n}\n\ntype EndTimeOption = \"real_time\" | \"freeze_at_now\" | \"custom\";\ntype DurationOption = \"1h\" | \"6h\" | \"1d\" | \"8d\" | \"30d\" | \"custom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  endTimeCaption: {\n    marginRight: theme.spacing(1),\n  },\n  shiftButtons: {\n    marginLeft: theme.spacing(1),\n  },\n  buttonGroupRoot: {\n    height: 29,\n    position: \"relative\",\n    top: 1,\n  },\n  endTimeShiftControls: {\n    padding: theme.spacing(1),\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderBottomColor: theme.palette.divider,\n    borderBottomWidth: 1,\n    borderBottomStyle: \"solid\",\n  },\n  leftShiftButtons: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(2),\n  },\n  rightShiftButtons: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginLeft: theme.spacing(2),\n  },\n  controlsContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  controlSelectorBox: {\n    display: \"flex\",\n    minWidth: 490,\n    padding: theme.spacing(2),\n  },\n  controlEndTimeSelector: {\n    width: \"50%\",\n  },\n  controlDurationSelector: {\n    width: \"50%\",\n  },\n  radioButtonRoot: {\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  formControlLabel: {\n    fontSize: 14,\n  },\n  buttonLabel: {\n    textTransform: \"none\",\n    fontSize: 12,\n  },\n  formControlRoot: {\n    width: \"100%\",\n    margin: 0,\n  },\n  formLabel: {\n    fontSize: 14,\n    fontWeight: 500,\n    marginBottom: theme.spacing(1),\n  },\n  customInputField: {\n    marginTop: theme.spacing(1),\n  },\n  filterButton: {\n    marginLeft: theme.spacing(1),\n  },\n  queueFilters: {\n    padding: theme.spacing(2),\n    maxHeight: 400,\n  },\n  checkbox: {\n    padding: 6,\n  },\n}));\n\n// minute, hour, day in seconds\nconst minute = 60;\nconst hour = 60 * minute;\nconst day = 24 * hour;\n\nfunction getInitialState(endTimeSec: number, durationSec: number): State {\n  let endTimeOption: EndTimeOption = \"real_time\";\n  let customEndTime = \"\";\n  let durationOption: DurationOption = \"1h\";\n  let customDuration = \"\";\n\n  const now = currentUnixtime();\n  // Account for 1s difference, may just happen to elapse 1s\n  // between the parent component's render and this component's render.\n  if (now <= endTimeSec && endTimeSec <= now + 1) {\n    endTimeOption = \"real_time\";\n  } else {\n    endTimeOption = \"custom\";\n    customEndTime = new Date(endTimeSec * 1000).toISOString();\n  }\n\n  switch (durationSec) {\n    case 1 * hour:\n      durationOption = \"1h\";\n      break;\n    case 6 * hour:\n      durationOption = \"6h\";\n      break;\n    case 1 * day:\n      durationOption = \"1d\";\n      break;\n    case 8 * day:\n      durationOption = \"8d\";\n      break;\n    case 30 * day:\n      durationOption = \"30d\";\n      break;\n    default:\n      durationOption = \"custom\";\n      customDuration = durationSec + \"s\";\n  }\n\n  return {\n    endTimeOption,\n    customEndTime,\n    customEndTimeError: \"\",\n    durationOption,\n    customDuration,\n    customDurationError: \"\",\n  };\n}\n\nfunction MetricsFetchControls(props: Props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState<State>(\n    getInitialState(props.endTimeSec, props.durationSec)\n  );\n  const [timePopoverAnchorElem, setTimePopoverAnchorElem] =\n    React.useState<HTMLButtonElement | null>(null);\n\n  const [queuePopoverAnchorElem, setQueuePopoverAnchorElem] =\n    React.useState<HTMLButtonElement | null>(null);\n\n  const handleEndTimeOptionChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const selectedOpt = (event.target as HTMLInputElement)\n      .value as EndTimeOption;\n    setState((prevState) => ({\n      ...prevState,\n      endTimeOption: selectedOpt,\n      customEndTime: \"\",\n      customEndTimeError: \"\",\n    }));\n    switch (selectedOpt) {\n      case \"real_time\":\n        props.onEndTimeChange(currentUnixtime(), /*isEndTimeFixed=*/ false);\n        break;\n      case \"freeze_at_now\":\n        props.onEndTimeChange(currentUnixtime(), /*isEndTimeFixed=*/ true);\n        break;\n      case \"custom\":\n      // No-op\n    }\n  };\n\n  const handleDurationOptionChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const selectedOpt = (event.target as HTMLInputElement)\n      .value as DurationOption;\n    setState((prevState) => ({\n      ...prevState,\n      durationOption: selectedOpt,\n      customDuration: \"\",\n      customDurationError: \"\",\n    }));\n    const isEndTimeFixed = state.endTimeOption !== \"real_time\";\n    switch (selectedOpt) {\n      case \"1h\":\n        props.onDurationChange(1 * hour, isEndTimeFixed);\n        break;\n      case \"6h\":\n        props.onDurationChange(6 * hour, isEndTimeFixed);\n        break;\n      case \"1d\":\n        props.onDurationChange(1 * day, isEndTimeFixed);\n        break;\n      case \"8d\":\n        props.onDurationChange(8 * day, isEndTimeFixed);\n        break;\n      case \"30d\":\n        props.onDurationChange(30 * day, isEndTimeFixed);\n        break;\n      case \"custom\":\n      // No-op\n    }\n  };\n\n  const handleCustomDurationChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    event.persist(); // https://reactjs.org/docs/legacy-event-pooling.html\n    setState((prevState) => ({\n      ...prevState,\n      customDuration: event.target.value,\n    }));\n  };\n\n  const handleCustomEndTimeChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    event.persist(); // https://reactjs.org/docs/legacy-event-pooling.html\n    setState((prevState) => ({\n      ...prevState,\n      customEndTime: event.target.value,\n    }));\n  };\n\n  const handleCustomDurationKeyDown = (\n    event: React.KeyboardEvent<HTMLInputElement>\n  ) => {\n    if (event.key === \"Enter\") {\n      try {\n        const d = parseDuration(state.customDuration);\n        setState((prevState) => ({\n          ...prevState,\n          durationOption: \"custom\",\n          customDurationError: \"\",\n        }));\n        props.onDurationChange(d, state.endTimeOption !== \"real_time\");\n      } catch (error) {\n        setState((prevState) => ({\n          ...prevState,\n          customDurationError: \"Duration invalid\",\n        }));\n      }\n    }\n  };\n\n  const handleCustomEndTimeKeyDown = (\n    event: React.KeyboardEvent<HTMLInputElement>\n  ) => {\n    if (event.key === \"Enter\") {\n      const timeUsecOrNaN = Date.parse(state.customEndTime);\n      if (isNaN(timeUsecOrNaN)) {\n        setState((prevState) => ({\n          ...prevState,\n          customEndTimeError: \"End time invalid\",\n        }));\n        return;\n      }\n      setState((prevState) => ({\n        ...prevState,\n        endTimeOption: \"custom\",\n        customEndTimeError: \"\",\n      }));\n      props.onEndTimeChange(\n        Math.floor(timeUsecOrNaN / 1000),\n        /* isEndTimeFixed= */ true\n      );\n    }\n  };\n\n  const handleOpenTimePopover = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setTimePopoverAnchorElem(event.currentTarget);\n  };\n\n  const handleCloseTimePopover = () => {\n    setTimePopoverAnchorElem(null);\n  };\n\n  const handleOpenQueuePopover = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setQueuePopoverAnchorElem(event.currentTarget);\n  };\n\n  const handleCloseQueuePopover = () => {\n    setQueuePopoverAnchorElem(null);\n  };\n\n  const isTimePopoverOpen = Boolean(timePopoverAnchorElem);\n  const isQueuePopoverOpen = Boolean(queuePopoverAnchorElem);\n\n  React.useEffect(() => {\n    if (state.endTimeOption === \"real_time\") {\n      const id = setInterval(() => {\n        props.onEndTimeChange(currentUnixtime(), /*isEndTimeFixed=*/ false);\n      }, props.pollInterval * 1000);\n      return () => clearInterval(id);\n    }\n  });\n\n  const shiftBy = (deltaSec: number) => {\n    return () => {\n      const now = currentUnixtime();\n      const endTime = props.endTimeSec + deltaSec;\n      if (now <= endTime) {\n        setState((prevState) => ({\n          ...prevState,\n          customEndTime: \"\",\n          endTimeOption: \"real_time\",\n        }));\n        props.onEndTimeChange(now, /*isEndTimeFixed=*/ false);\n        return;\n      }\n      setState((prevState) => ({\n        ...prevState,\n        endTimeOption: \"custom\",\n        customEndTime: new Date(endTime * 1000).toISOString(),\n      }));\n      props.onEndTimeChange(endTime, /*isEndTimeFixed=*/ true);\n    };\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography\n        variant=\"caption\"\n        color=\"textPrimary\"\n        className={classes.endTimeCaption}\n      >\n        {formatTime(props.endTimeSec)}\n      </Typography>\n      <div>\n        <Button\n          aria-describedby={isTimePopoverOpen ? \"time-popover\" : undefined}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={handleOpenTimePopover}\n          size=\"small\"\n          classes={{\n            label: classes.buttonLabel,\n          }}\n        >\n          {state.endTimeOption === \"real_time\" ? \"Realtime\" : \"Historical\"}:{\" \"}\n          {state.durationOption === \"custom\"\n            ? state.customDuration\n            : state.durationOption}\n        </Button>\n        <Popover\n          id={isTimePopoverOpen ? \"time-popover\" : undefined}\n          open={isTimePopoverOpen}\n          anchorEl={timePopoverAnchorElem}\n          onClose={handleCloseTimePopover}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n        >\n          <div className={classes.endTimeShiftControls}>\n            <div className={classes.leftShiftButtons}>\n              <ShiftButton\n                direction=\"left\"\n                text=\"2h\"\n                onClick={shiftBy(-2 * hour)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"left\"\n                text=\"1h\"\n                onClick={shiftBy(-1 * hour)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"left\"\n                text=\"30m\"\n                onClick={shiftBy(-30 * minute)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"left\"\n                text=\"15m\"\n                onClick={shiftBy(-15 * minute)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"left\"\n                text=\"5m\"\n                onClick={shiftBy(-5 * minute)}\n                dense={true}\n              />\n            </div>\n            <div className={classes.rightShiftButtons}>\n              <ShiftButton\n                direction=\"right\"\n                text=\"5m\"\n                onClick={shiftBy(5 * minute)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"right\"\n                text=\"15m\"\n                onClick={shiftBy(15 * minute)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"right\"\n                text=\"30m\"\n                onClick={shiftBy(30 * minute)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"right\"\n                text=\"1h\"\n                onClick={shiftBy(1 * hour)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"right\"\n                text=\"2h\"\n                onClick={shiftBy(2 * hour)}\n                dense={true}\n              />\n            </div>\n          </div>\n          <div className={classes.controlSelectorBox}>\n            <div className={classes.controlEndTimeSelector}>\n              <FormControl\n                component=\"fieldset\"\n                margin=\"dense\"\n                classes={{ root: classes.formControlRoot }}\n              >\n                <FormLabel className={classes.formLabel} component=\"legend\">\n                  End Time\n                </FormLabel>\n                <RadioGroup\n                  aria-label=\"end_time\"\n                  name=\"end_time\"\n                  value={state.endTimeOption}\n                  onChange={handleEndTimeOptionChange}\n                >\n                  <RadioInput value=\"real_time\" label=\"Real Time\" />\n                  <RadioInput value=\"freeze_at_now\" label=\"Freeze at now\" />\n                  <RadioInput value=\"custom\" label=\"Custom End Time\" />\n                </RadioGroup>\n                <div className={classes.customInputField}>\n                  <TextField\n                    id=\"custom-endtime\"\n                    label=\"yyyy-mm-dd hh:mm:ssz\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={handleCustomEndTimeChange}\n                    value={state.customEndTime}\n                    onKeyDown={handleCustomEndTimeKeyDown}\n                    error={state.customEndTimeError !== \"\"}\n                    helperText={state.customEndTimeError}\n                  />\n                </div>\n              </FormControl>\n            </div>\n            <div className={classes.controlDurationSelector}>\n              <FormControl\n                component=\"fieldset\"\n                margin=\"dense\"\n                classes={{ root: classes.formControlRoot }}\n              >\n                <FormLabel className={classes.formLabel} component=\"legend\">\n                  Duration\n                </FormLabel>\n                <RadioGroup\n                  aria-label=\"duration\"\n                  name=\"duration\"\n                  value={state.durationOption}\n                  onChange={handleDurationOptionChange}\n                >\n                  <RadioInput value=\"1h\" label=\"1h\" />\n                  <RadioInput value=\"6h\" label=\"6h\" />\n                  <RadioInput value=\"1d\" label=\"1 day\" />\n                  <RadioInput value=\"8d\" label=\"8 days\" />\n                  <RadioInput value=\"30d\" label=\"30 days\" />\n                  <RadioInput value=\"custom\" label=\"Custom Duration\" />\n                </RadioGroup>\n                <div className={classes.customInputField}>\n                  <TextField\n                    id=\"custom-duration\"\n                    label=\"duration\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={handleCustomDurationChange}\n                    value={state.customDuration}\n                    onKeyDown={handleCustomDurationKeyDown}\n                    error={state.customDurationError !== \"\"}\n                    helperText={state.customDurationError}\n                  />\n                </div>\n              </FormControl>\n            </div>\n          </div>\n        </Popover>\n      </div>\n      <div className={classes.shiftButtons}>\n        <ButtonGroup\n          classes={{ root: classes.buttonGroupRoot }}\n          size=\"small\"\n          color=\"primary\"\n          aria-label=\"shift buttons\"\n        >\n          <ShiftButton\n            direction=\"left\"\n            text={\n              state.durationOption === \"custom\" ? \"1h\" : state.durationOption\n            }\n            color=\"primary\"\n            onClick={\n              state.durationOption === \"custom\"\n                ? shiftBy(-1 * hour)\n                : shiftBy(-props.durationSec)\n            }\n          />\n          <ShiftButton\n            direction=\"right\"\n            text={\n              state.durationOption === \"custom\" ? \"1h\" : state.durationOption\n            }\n            color=\"primary\"\n            onClick={\n              state.durationOption === \"custom\"\n                ? shiftBy(1 * hour)\n                : shiftBy(props.durationSec)\n            }\n          />\n        </ButtonGroup>\n      </div>\n      <div className={classes.filterButton}>\n        <IconButton\n          aria-label=\"filter\"\n          size=\"small\"\n          onClick={handleOpenQueuePopover}\n        >\n          <FilterListIcon />\n        </IconButton>\n        <Popover\n          id={isQueuePopoverOpen ? \"queue-popover\" : undefined}\n          open={isQueuePopoverOpen}\n          anchorEl={queuePopoverAnchorElem}\n          onClose={handleCloseQueuePopover}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n        >\n          <FormControl className={classes.queueFilters}>\n            <FormLabel className={classes.formLabel} component=\"legend\">\n              Queues\n            </FormLabel>\n            <FormGroup>\n              {props.queues.map((qname) => (\n                <FormControlLabel\n                  key={qname}\n                  control={\n                    <Checkbox\n                      size=\"small\"\n                      checked={props.selectedQueues.includes(qname)}\n                      onChange={() => {\n                        if (props.selectedQueues.includes(qname)) {\n                          props.removeQueue(qname);\n                        } else {\n                          props.addQueue(qname);\n                        }\n                      }}\n                      name={qname}\n                      className={classes.checkbox}\n                    />\n                  }\n                  label={qname}\n                  classes={{ label: classes.formControlLabel }}\n                />\n              ))}\n            </FormGroup>\n          </FormControl>\n        </Popover>\n      </div>\n    </div>\n  );\n}\n\n/****************** Helper functions/components *******************/\n\nfunction formatTime(unixtime: number): string {\n  const tz = new Date(unixtime * 1000)\n    .toLocaleTimeString(\"en-us\", { timeZoneName: \"short\" })\n    .split(\" \")[2];\n  return dayjs.unix(unixtime).format(\"ddd, DD MMM YYYY HH:mm:ss \") + tz;\n}\n\ninterface RadioInputProps {\n  value: string;\n  label: string;\n}\n\nfunction RadioInput(props: RadioInputProps) {\n  const classes = useStyles();\n  return (\n    <FormControlLabel\n      classes={{ label: classes.formControlLabel }}\n      value={props.value}\n      control={\n        <Radio size=\"small\" classes={{ root: classes.radioButtonRoot }} />\n      }\n      label={props.label}\n    />\n  );\n}\n\ninterface ShiftButtonProps extends ButtonProps {\n  text: string;\n  onClick: () => void;\n  direction: \"left\" | \"right\";\n  dense?: boolean;\n}\n\nconst useShiftButtonStyles = makeStyles((theme: Theme) => ({\n  root: {\n    minWidth: 40,\n    fontWeight: (props: ShiftButtonProps) => (props.dense ? 400 : 500),\n  },\n  label: { fontSize: 12, textTransform: \"none\" },\n  iconRoot: {\n    marginRight: (props: ShiftButtonProps) =>\n      props.direction === \"left\" ? (props.dense ? -8 : -4) : 0,\n    marginLeft: (props: ShiftButtonProps) =>\n      props.direction === \"right\" ? (props.dense ? -8 : -4) : 0,\n    color: (props: ShiftButtonProps) =>\n      props.color\n        ? props.color\n        : theme.palette.grey[isDarkTheme(theme) ? 200 : 700],\n  },\n}));\n\nfunction ShiftButton(props: ShiftButtonProps) {\n  const classes = useShiftButtonStyles(props);\n  return (\n    <Button\n      {...props}\n      classes={{\n        root: classes.root,\n        label: classes.label,\n      }}\n      size=\"small\"\n    >\n      {props.direction === \"left\" && (\n        <ArrowLeftIcon classes={{ root: classes.iconRoot }} />\n      )}\n      {props.text}\n      {props.direction === \"right\" && (\n        <ArrowRightIcon classes={{ root: classes.iconRoot }} />\n      )}\n    </Button>\n  );\n}\n\nShiftButton.defaultProps = {\n  dense: false,\n};\n\nexport default connect(mapStateToProps)(MetricsFetchControls);\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport prettyBytes from \"pretty-bytes\";\nimport { getMetricsAsync } from \"../actions/metricsActions\";\nimport { listQueuesAsync } from \"../actions/queuesActions\";\nimport { AppState } from \"../store\";\nimport QueueMetricsChart from \"../components/QueueMetricsChart\";\nimport Tooltip from \"../components/Tooltip\";\nimport { currentUnixtime } from \"../utils\";\nimport MetricsFetchControls from \"../components/MetricsFetchControls\";\nimport { useQuery } from \"../hooks\";\nimport { PrometheusMetricsResponse } from \"../api\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: 30,\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  controlsContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    position: \"fixed\",\n    background: theme.palette.background.paper,\n    zIndex: theme.zIndex.appBar,\n    right: 0,\n    top: 64, // app-bar height\n    width: \"100%\",\n    padding: theme.spacing(2),\n  },\n  chartInfo: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(1),\n  },\n  infoIcon: {\n    marginLeft: theme.spacing(1),\n    color: theme.palette.grey[500],\n    cursor: \"pointer\",\n  },\n  errorMessage: {\n    marginLeft: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  warningIcon: {\n    color: \"#ff6700\",\n    marginRight: 6,\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.metrics.loading,\n    error: state.metrics.error,\n    data: state.metrics.data,\n    pollInterval: state.settings.pollInterval,\n    queues: state.queues.data.map((q) => q.name),\n  };\n}\n\nconst connector = connect(mapStateToProps, {\n  getMetricsAsync,\n  listQueuesAsync,\n});\ntype Props = ConnectedProps<typeof connector>;\n\nconst ENDTIME_URL_PARAM_KEY = \"end\";\nconst DURATION_URL_PARAM_KEY = \"duration\";\n\nfunction MetricsView(props: Props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const query = useQuery();\n\n  const endTimeStr = query.get(ENDTIME_URL_PARAM_KEY);\n  const endTime = endTimeStr ? parseFloat(endTimeStr) : currentUnixtime(); // default to now\n\n  const durationStr = query.get(DURATION_URL_PARAM_KEY);\n  const duration = durationStr ? parseFloat(durationStr) : 60 * 60; // default to 1h\n\n  const { pollInterval, getMetricsAsync, listQueuesAsync, data } = props;\n\n  const [endTimeSec, setEndTimeSec] = React.useState(endTime);\n  const [durationSec, setDurationSec] = React.useState(duration);\n  const [selectedQueues, setSelectedQueues] = React.useState<string[]>([]);\n\n  const handleEndTimeChange = (endTime: number, isEndTimeFixed: boolean) => {\n    const urlQuery = isEndTimeFixed\n      ? {\n          [ENDTIME_URL_PARAM_KEY]: endTime,\n          [DURATION_URL_PARAM_KEY]: durationSec,\n        }\n      : {\n          [DURATION_URL_PARAM_KEY]: durationSec,\n        };\n    history.push({\n      ...history.location,\n      search: queryString.stringify(urlQuery),\n    });\n    setEndTimeSec(endTime);\n  };\n\n  const handleDurationChange = (duration: number, isEndTimeFixed: boolean) => {\n    const urlQuery = isEndTimeFixed\n      ? {\n          [ENDTIME_URL_PARAM_KEY]: endTimeSec,\n          [DURATION_URL_PARAM_KEY]: duration,\n        }\n      : {\n          [DURATION_URL_PARAM_KEY]: duration,\n        };\n    history.push({\n      ...history.location,\n      search: queryString.stringify(urlQuery),\n    });\n    setDurationSec(duration);\n  };\n\n  const handleAddQueue = (qname: string) => {\n    if (selectedQueues.includes(qname)) {\n      return;\n    }\n    setSelectedQueues(selectedQueues.concat(qname));\n  };\n\n  const handleRemoveQueue = (qname: string) => {\n    if (selectedQueues.length === 1) {\n      return; // ensure that selected queues doesn't go down to zero once user selected\n    }\n    if (selectedQueues.length === 0) {\n      // when user first select filter (remove once of the queues),\n      // we need to lazily initialize the selectedQueues with the rest (all queues but the selected one).\n      setSelectedQueues(props.queues.filter((q) => q !== qname));\n      return;\n    }\n    setSelectedQueues(selectedQueues.filter((q) => q !== qname));\n  };\n\n  React.useEffect(() => {\n    listQueuesAsync();\n  }, [listQueuesAsync]);\n\n  React.useEffect(() => {\n    getMetricsAsync(endTimeSec, durationSec, selectedQueues);\n  }, [pollInterval, getMetricsAsync, durationSec, endTimeSec, selectedQueues]);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <div className={classes.controlsContainer}>\n        <MetricsFetchControls\n          endTimeSec={endTimeSec}\n          onEndTimeChange={handleEndTimeChange}\n          durationSec={durationSec}\n          onDurationChange={handleDurationChange}\n          queues={props.queues}\n          selectedQueues={\n            // If none are selected (e.g. initial state), no filters should apply.\n            selectedQueues.length === 0 ? props.queues : selectedQueues\n          }\n          addQueue={handleAddQueue}\n          removeQueue={handleRemoveQueue}\n        />\n      </div>\n      <Grid container spacing={3}>\n        {data?.tasks_processed_per_second && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Tasks Processed\"\n              description=\"Number of tasks processed (both succeeded and failed) per second.\"\n              metrics={data.tasks_processed_per_second}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n            />\n          </Grid>\n        )}\n        {data?.tasks_failed_per_second && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Tasks Failed\"\n              description=\"Number of tasks failed per second.\"\n              metrics={data.tasks_failed_per_second}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n            />\n          </Grid>\n        )}\n        {data?.error_rate && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Error Rate\"\n              description=\"Rate of task failures\"\n              metrics={data.error_rate}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n            />\n          </Grid>\n        )}\n        {data?.queue_size && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Queue Size\"\n              description=\"Total number of tasks in a given queue.\"\n              metrics={data.queue_size}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n            />\n          </Grid>\n        )}\n        {data?.queue_latency_seconds && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Queue Latency\"\n              description=\"Latency of queue, measured by the oldest pending task in the queue.\"\n              metrics={data.queue_latency_seconds}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n              yAxisTickFormatter={(val: number) => val + \"s\"}\n            />\n          </Grid>\n        )}\n        {data?.queue_size && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Queue Memory Usage (approx)\"\n              description=\"Memory usage by queue. Approximate value by sampling a few tasks in a queue.\"\n              metrics={data.queue_memory_usage_approx_bytes}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n              yAxisTickFormatter={(val: number) => {\n                try {\n                  return prettyBytes(val);\n                } catch (error) {\n                  return val + \"B\";\n                }\n              }}\n            />\n          </Grid>\n        )}\n        {data?.pending_tasks_by_queue && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Pending Tasks\"\n              description=\"Number of pending tasks in a given queue.\"\n              metrics={data.pending_tasks_by_queue}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n            />\n          </Grid>\n        )}\n        {data?.retry_tasks_by_queue && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Retry Tasks\"\n              description=\"Number of retry tasks in a given queue.\"\n              metrics={data.retry_tasks_by_queue}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n            />\n          </Grid>\n        )}\n        {data?.archived_tasks_by_queue && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Archived Tasks\"\n              description=\"Number of archived tasks in a given queue.\"\n              metrics={data.archived_tasks_by_queue}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default connector(MetricsView);\n\n/******** Helper components ********/\n\ninterface ChartRowProps {\n  title: string;\n  description: string;\n  metrics: PrometheusMetricsResponse;\n  endTime: number;\n  startTime: number;\n  yAxisTickFormatter?: (val: number) => string;\n}\n\nfunction ChartRow(props: ChartRowProps) {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.chartInfo}>\n        <Typography color=\"textPrimary\">{props.title}</Typography>\n        <Tooltip title={<div>{props.description}</div>}>\n          <InfoIcon fontSize=\"small\" className={classes.infoIcon} />\n        </Tooltip>\n        {props.metrics.status === \"error\" && (\n          <div className={classes.errorMessage}>\n            <WarningIcon fontSize=\"small\" className={classes.warningIcon} />\n            <Typography color=\"textSecondary\">\n              Failed to get metrics data: {props.metrics.error}\n            </Typography>\n          </div>\n        )}\n      </div>\n      <QueueMetricsChart\n        data={\n          props.metrics.status === \"error\"\n            ? []\n            : props.metrics.data?.result || []\n        }\n        endTime={props.endTime}\n        startTime={props.startTime}\n        yAxisTickFormatter={props.yAxisTickFormatter}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  headingText: {\n    fontWeight: \"bold\",\n  },\n}));\n\nexport default function PageNotFoundView() {\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            className={classes.headingText}\n          >\n            Oops!\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" align=\"center\">\n            404 - Page Not Found\n          </Typography>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","var _g, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogoColor(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"none\",\n    height: 397,\n    viewBox: \"0 0 1663 397\",\n    width: 1663,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#2f80ed\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m206.548 169.585c-.557-23.718 13.058-45.343 34.682-55.094 29.6-13.347 64.54-.124 77.887 29.477l15.238 12.411.787-19.637c-17.331-38.4361-62.701-55.6064-101.137-38.2754-28.077 12.6594-45.753 40.7374-45.031 71.5204l.722 32.337 7.225 16.025 10.183-23.874z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m107.46 139.032c2.407 5.339 5.56 10.213 9.32 14.511-5.737 1.125-11.386 2.914-16.8471 5.377-38.4362 17.331-55.6065 62.701-38.2754 101.137l15.2377 12.412.7867-19.637c-13.3469-29.601-.1238-64.541 29.4761-77.888 13.93-6.281 29.44-6.923 43.805-1.844l-4.244 11.213 42.371-6.199-27.65-32.7-4.255 11.246c-2.446-.879-4.918-1.63-7.408-2.253-11.712-3.279-21.294-11.514-26.294-22.6-9.274-20.57-.085-44.85 20.484-54.1248 20.57-9.2749 44.85-.0862 54.125 20.4834l16.024-7.2255c-13.259-29.4054-47.969-42.5414-77.374-29.2824s-42.5414 47.9693-29.282 77.3743z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m162.795 298.333c28.076-12.66 45.753-40.737 45.03-71.521l-.721-32.337-17.408 7.85.555 24.89c.557 23.717-13.057 45.343-34.682 55.093-29.6 13.347-64.5399.124-77.8868-29.476l-16.0244 7.225c17.331 38.437 62.7012 55.607 101.1372 38.276z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m289.641 221.854c-13.93 6.281-29.439 6.924-43.805 1.845l4.244-11.213-42.371 6.199 27.65 32.699 4.256-11.245c2.446.879 4.917 1.63 7.407 2.253 11.713 3.278 21.295 11.513 26.294 22.6 9.274 20.57.086 44.85-20.484 54.125-20.569 9.275-44.849.086-54.124-20.484l-16.025 7.226c13.259 29.405 47.969 42.541 77.375 29.282 29.405-13.259 42.541-47.969 29.282-77.374-2.407-5.339-5.561-10.213-9.321-14.511 5.738-1.125 11.386-2.915 16.847-5.377 38.437-17.331 55.607-62.701 38.276-101.137l-16.024 7.225c13.346 29.601.123 64.541-29.477 77.887z\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m517.32 233.008h-80.896l-20.992 52.992h-13.568l67.584-168.96h15.104l67.584 168.96h-13.568zm-4.608-11.776-29.44-73.728-6.144-17.92h-.256l-6.144 17.408-29.44 74.24zm108.05 67.328c-12.971 0-24.235-2.56-33.792-7.68s-16.128-12.544-19.712-22.272l10.496-6.912c2.56 8.533 7.765 14.933 15.616 19.2s17.493 6.4 28.928 6.4c11.605 0 20.651-2.219 27.136-6.656 6.656-4.437 9.984-10.325 9.984-17.664 0-6.315-2.816-11.349-8.448-15.104s-15.531-6.912-29.696-9.472c-17.92-3.243-30.549-7.595-37.888-13.056s-11.008-13.227-11.008-23.296c0-6.656 2.048-12.8 6.144-18.432s9.899-10.069 17.408-13.312 16.043-4.864 25.6-4.864c13.483 0 24.235 2.56 32.256 7.68 8.192 5.12 13.824 12.971 16.896 23.552l-11.008 6.4c-4.779-17.579-17.493-26.368-38.144-26.368-6.827 0-13.056 1.109-18.688 3.328-5.461 2.219-9.813 5.205-13.056 8.96-3.072 3.584-4.608 7.509-4.608 11.776 0 6.997 2.901 12.459 8.704 16.384s16.043 7.168 30.72 9.728c17.408 2.901 29.696 7.083 36.864 12.544s10.752 13.141 10.752 23.04c0 10.923-4.693 19.712-14.08 26.368-9.216 6.485-21.675 9.728-37.376 9.728zm122.732 20.992c-4.779 11.605-10.069 19.712-15.872 24.32-5.803 4.779-13.141 7.168-22.016 7.168-10.581 0-18.688-3.157-24.32-9.472l4.864-11.008c4.096 6.144 10.581 9.216 19.456 9.216 5.973 0 11.008-1.707 15.104-5.12 4.267-3.243 8.192-9.301 11.776-18.176l8.192-20.48-13.312-31.744-40.704-96.256h14.592l39.168 97.024 6.4 17.152 6.912-18.432 37.632-95.744h13.824zm149.444-154.112c14.677 0 26.453 4.096 35.328 12.288 9.045 8.192 13.568 19.968 13.568 35.328v82.944h-12.8v-78.848c0-13.653-3.328-23.808-9.984-30.464s-15.787-9.984-27.392-9.984c-8.192 0-15.787 1.877-22.784 5.632s-12.629 9.216-16.896 16.384c-4.096 7.168-6.144 15.531-6.144 25.088v72.192h-12.8v-128h11.52l.512 25.856c4.096-9.216 10.325-16.213 18.688-20.992 8.533-4.949 18.261-7.424 29.184-7.424zm203.692 2.56v181.76h-12.8v-80.896c-3.93 9.216-9.99 16.469-18.18 21.76s-17.83 7.936-28.93 7.936c-18.09 0-32.42-5.888-43.006-17.664-10.411-11.776-15.616-28.075-15.616-48.896s5.205-37.12 15.616-48.896c10.586-11.776 24.916-17.664 43.006-17.664 11.44 0 21.34 2.816 29.7 8.448 8.36 5.461 14.33 13.056 17.92 22.784l.77-28.672zm-58.37 119.296c13.31 0 23.98-4.437 32-13.312 8.19-9.045 12.71-21.248 13.57-36.608v-10.752c-.69-15.36-5.12-27.477-13.32-36.352-8.19-9.045-18.94-13.568-32.25-13.568-14.85 0-26.46 4.949-34.82 14.848-8.361 9.728-12.542 23.211-12.542 40.448s4.181 30.805 12.542 40.704c8.36 9.728 19.97 14.592 34.82 14.592zm259.93-122.368c14.5 0 26.11 4.096 34.81 12.288 8.71 8.192 13.06 19.712 13.06 34.56v83.712h-7.17v-82.944c0-13.141-3.75-23.296-11.26-30.464s-17.67-10.752-30.47-10.752c-9.21 0-17.66 2.219-25.34 6.656-7.51 4.267-13.48 10.155-17.92 17.664-4.27 7.339-6.4 15.36-6.4 24.064v76.288h-7.17v-82.944c0-13.141-3.75-23.296-11.26-30.464-7.51-7.339-17.67-11.008-30.47-11.008-9.04 0-17.4 2.219-25.08 6.656-7.51 4.267-13.49 10.155-17.92 17.664-4.44 7.339-6.66 15.531-6.66 24.576v75.52h-7.17v-128h6.66l.25 30.464c3.59-10.069 9.99-18.091 19.2-24.064 9.22-5.973 19.8-8.96 31.75-8.96 12.29 0 22.53 2.987 30.72 8.96 8.36 5.973 13.65 14.507 15.87 25.6 3.07-10.411 9.39-18.859 18.94-25.344 9.56-6.485 20.57-9.728 33.03-9.728zm142.29.512c18.61 0 33.2 5.888 43.78 17.664 10.75 11.776 16.13 28.075 16.13 48.896s-5.38 37.12-16.13 48.896c-10.58 11.776-25.17 17.664-43.78 17.664-18.77 0-33.53-5.888-44.28-17.664-10.76-11.947-16.13-28.245-16.13-48.896s5.37-36.864 16.13-48.64c10.75-11.947 25.51-17.92 44.28-17.92zm0 6.144c-16.55 0-29.61 5.376-39.16 16.128-9.39 10.752-14.08 25.515-14.08 44.288s4.69 33.536 14.08 44.288c9.55 10.752 22.61 16.128 39.16 16.128 16.39 0 29.27-5.376 38.66-16.128s14.08-25.515 14.08-44.288-4.69-33.536-14.08-44.288-22.27-16.128-38.66-16.128zm153.9-6.144c14.85 0 26.54 4.096 35.08 12.288 8.7 8.192 13.05 19.712 13.05 34.56v83.712h-7.17v-81.92c0-13.653-3.75-24.149-11.26-31.488s-17.75-11.008-30.72-11.008c-9.22 0-17.66 2.219-25.34 6.656-7.51 4.267-13.49 10.155-17.92 17.664-4.44 7.339-6.66 15.616-6.66 24.832v75.264h-7.17v-128h6.66v30.72c3.58-10.24 9.98-18.347 19.2-24.32 9.21-5.973 19.97-8.96 32.25-8.96z\",\n    fill: \"#828282\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogoColor);\nexport default __webpack_public_path__ + \"static/media/logo-color.c2b0c1f3.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogoWhite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"none\",\n    height: 397,\n    viewBox: \"0 0 1663 397\",\n    width: 1663,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#f2f2f2\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m206.548 169.585c-.556-23.718 13.058-45.343 34.682-55.094 29.6-13.347 64.54-.124 77.887 29.477l15.238 12.411.787-19.637c-17.331-38.4361-62.701-55.6064-101.137-38.2754-28.077 12.6594-45.753 40.7374-45.031 71.5204l.722 32.337 7.225 16.025 10.183-23.874z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m107.46 139.032c2.407 5.339 5.56 10.213 9.321 14.511-5.738 1.125-11.387 2.914-16.8479 5.377-38.4363 17.331-55.6066 62.701-38.2755 101.137l15.2377 12.412.7867-19.637c-13.3469-29.601-.1238-64.541 29.477-77.888 13.929-6.281 29.439-6.923 43.804-1.844l-4.244 11.213 42.371-6.199-27.649-32.7-4.256 11.246c-2.446-.879-4.917-1.63-7.407-2.253-11.713-3.279-21.295-11.514-26.294-22.6-9.275-20.57-.086-44.85 20.484-54.1248 20.569-9.2749 44.849-.0862 54.124 20.4834l16.024-7.2255c-13.259-29.4054-47.969-42.5414-77.374-29.2824s-42.5413 47.9693-29.282 77.3743z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m162.795 298.333c28.076-12.66 45.753-40.737 45.03-71.521l-.721-32.337-17.408 7.85.555 24.89c.557 23.717-13.057 45.343-34.682 55.093-29.6 13.347-64.5399.124-77.8868-29.476l-16.0244 7.225c17.331 38.437 62.7012 55.607 101.1372 38.276z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m289.641 221.854c-13.929 6.281-29.439 6.924-43.804 1.845l4.243-11.213-42.371 6.199 27.65 32.699 4.256-11.245c2.446.879 4.917 1.63 7.407 2.253 11.713 3.278 21.295 11.513 26.294 22.6 9.274 20.57.086 44.85-20.484 54.125-20.569 9.275-44.849.086-54.124-20.484l-16.025 7.226c13.259 29.405 47.969 42.541 77.375 29.282 29.405-13.259 42.541-47.969 29.282-77.374-2.407-5.339-5.561-10.213-9.321-14.511 5.738-1.125 11.386-2.915 16.848-5.377 38.436-17.331 55.606-62.701 38.275-101.137l-16.024 7.225c13.346 29.601.123 64.541-29.477 77.887z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m517.32 233.008h-80.896l-20.992 52.992h-13.568l67.584-168.96h15.104l67.584 168.96h-13.568zm-4.608-11.776-29.44-73.728-6.144-17.92h-.256l-6.144 17.408-29.44 74.24zm108.05 67.328c-12.971 0-24.235-2.56-33.792-7.68s-16.128-12.544-19.712-22.272l10.496-6.912c2.56 8.533 7.765 14.933 15.616 19.2s17.493 6.4 28.928 6.4c11.605 0 20.651-2.219 27.136-6.656 6.656-4.437 9.984-10.325 9.984-17.664 0-6.315-2.816-11.349-8.448-15.104s-15.531-6.912-29.696-9.472c-17.92-3.243-30.549-7.595-37.888-13.056s-11.008-13.227-11.008-23.296c0-6.656 2.048-12.8 6.144-18.432s9.899-10.069 17.408-13.312 16.043-4.864 25.6-4.864c13.483 0 24.235 2.56 32.256 7.68 8.192 5.12 13.824 12.971 16.896 23.552l-11.008 6.4c-4.779-17.579-17.493-26.368-38.144-26.368-6.827 0-13.056 1.109-18.688 3.328-5.461 2.219-9.813 5.205-13.056 8.96-3.072 3.584-4.608 7.509-4.608 11.776 0 6.997 2.901 12.459 8.704 16.384s16.043 7.168 30.72 9.728c17.408 2.901 29.696 7.083 36.864 12.544s10.752 13.141 10.752 23.04c0 10.923-4.693 19.712-14.08 26.368-9.216 6.485-21.675 9.728-37.376 9.728zm122.732 20.992c-4.779 11.605-10.069 19.712-15.872 24.32-5.803 4.779-13.141 7.168-22.016 7.168-10.581 0-18.688-3.157-24.32-9.472l4.864-11.008c4.096 6.144 10.581 9.216 19.456 9.216 5.973 0 11.008-1.707 15.104-5.12 4.267-3.243 8.192-9.301 11.776-18.176l8.192-20.48-13.312-31.744-40.704-96.256h14.592l39.168 97.024 6.4 17.152 6.912-18.432 37.632-95.744h13.824zm149.444-154.112c14.677 0 26.453 4.096 35.328 12.288 9.045 8.192 13.568 19.968 13.568 35.328v82.944h-12.8v-78.848c0-13.653-3.328-23.808-9.984-30.464s-15.787-9.984-27.392-9.984c-8.192 0-15.787 1.877-22.784 5.632s-12.629 9.216-16.896 16.384c-4.096 7.168-6.144 15.531-6.144 25.088v72.192h-12.8v-128h11.52l.512 25.856c4.096-9.216 10.325-16.213 18.688-20.992 8.533-4.949 18.261-7.424 29.184-7.424zm203.692 2.56v181.76h-12.8v-80.896c-3.93 9.216-9.99 16.469-18.18 21.76s-17.83 7.936-28.93 7.936c-18.09 0-32.42-5.888-43.006-17.664-10.411-11.776-15.616-28.075-15.616-48.896s5.205-37.12 15.616-48.896c10.586-11.776 24.916-17.664 43.006-17.664 11.44 0 21.34 2.816 29.7 8.448 8.36 5.461 14.33 13.056 17.92 22.784l.77-28.672zm-58.37 119.296c13.31 0 23.98-4.437 32-13.312 8.19-9.045 12.71-21.248 13.57-36.608v-10.752c-.69-15.36-5.12-27.477-13.32-36.352-8.19-9.045-18.94-13.568-32.25-13.568-14.85 0-26.46 4.949-34.82 14.848-8.361 9.728-12.542 23.211-12.542 40.448s4.181 30.805 12.542 40.704c8.36 9.728 19.97 14.592 34.82 14.592zm259.93-122.368c14.5 0 26.11 4.096 34.81 12.288 8.71 8.192 13.06 19.712 13.06 34.56v83.712h-7.17v-82.944c0-13.141-3.75-23.296-11.26-30.464s-17.67-10.752-30.47-10.752c-9.21 0-17.66 2.219-25.34 6.656-7.51 4.267-13.48 10.155-17.92 17.664-4.27 7.339-6.4 15.36-6.4 24.064v76.288h-7.17v-82.944c0-13.141-3.75-23.296-11.26-30.464-7.51-7.339-17.67-11.008-30.47-11.008-9.04 0-17.4 2.219-25.08 6.656-7.51 4.267-13.49 10.155-17.92 17.664-4.44 7.339-6.66 15.531-6.66 24.576v75.52h-7.17v-128h6.66l.25 30.464c3.59-10.069 9.99-18.091 19.2-24.064 9.22-5.973 19.8-8.96 31.75-8.96 12.29 0 22.53 2.987 30.72 8.96 8.36 5.973 13.65 14.507 15.87 25.6 3.07-10.411 9.39-18.859 18.94-25.344 9.56-6.485 20.57-9.728 33.03-9.728zm142.29.512c18.61 0 33.2 5.888 43.78 17.664 10.75 11.776 16.13 28.075 16.13 48.896s-5.38 37.12-16.13 48.896c-10.58 11.776-25.17 17.664-43.78 17.664-18.77 0-33.53-5.888-44.28-17.664-10.76-11.947-16.13-28.245-16.13-48.896s5.37-36.864 16.13-48.64c10.75-11.947 25.51-17.92 44.28-17.92zm0 6.144c-16.55 0-29.61 5.376-39.16 16.128-9.39 10.752-14.08 25.515-14.08 44.288s4.69 33.536 14.08 44.288c9.55 10.752 22.61 16.128 39.16 16.128 16.39 0 29.27-5.376 38.66-16.128s14.08-25.515 14.08-44.288-4.69-33.536-14.08-44.288-22.27-16.128-38.66-16.128zm153.9-6.144c14.85 0 26.54 4.096 35.08 12.288 8.7 8.192 13.05 19.712 13.05 34.56v83.712h-7.17v-81.92c0-13.653-3.75-24.149-11.26-31.488s-17.75-11.008-30.72-11.008c-9.22 0-17.66 2.219-25.34 6.656-7.51 4.267-13.49 10.155-17.92 17.664-4.44 7.339-6.66 15.616-6.66 24.832v75.264h-7.17v-128h6.66v30.72c3.58-10.24 9.98-18.347 19.2-24.32 9.21-5.973 19.97-8.96 32.25-8.96z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogoWhite);\nexport default __webpack_public_path__ + \"static/media/logo-white.3fa2ac55.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { makeStyles, Theme, ThemeProvider } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport LayersIcon from \"@material-ui/icons/Layers\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DoubleArrowIcon from \"@material-ui/icons/DoubleArrow\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { AppState } from \"./store\";\nimport { paths as getPaths } from \"./paths\";\nimport { isDarkTheme, useTheme } from \"./theme\";\nimport { closeSnackbar } from \"./actions/snackbarActions\";\nimport { toggleDrawer } from \"./actions/settingsActions\";\nimport ListItemLink from \"./components/ListItemLink\";\nimport SchedulersView from \"./views/SchedulersView\";\nimport DashboardView from \"./views/DashboardView\";\nimport TasksView from \"./views/TasksView\";\nimport TaskDetailsView from \"./views/TaskDetailsView\";\nimport SettingsView from \"./views/SettingsView\";\nimport ServersView from \"./views/ServersView\";\nimport RedisInfoView from \"./views/RedisInfoView\";\nimport MetricsView from \"./views/MetricsView\";\nimport PageNotFoundView from \"./views/PageNotFoundView\";\nimport { ReactComponent as Logo } from \"./images/logo-color.svg\";\nimport { ReactComponent as LogoDarkTheme } from \"./images/logo-white.svg\";\n\nconst drawerWidth = 220;\n\n// FIXME: For some reason, the following code does not work:\n//     makeStyles(theme => ({ /* use theme here */}));\n// Using closure to work around this problem.\nconst useStyles = (theme: Theme) =>\n  makeStyles({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: {\n      paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: \"0 8px\",\n      ...theme.mixins.toolbar,\n    },\n    appBar: {\n      backgroundColor: theme.palette.background.paper,\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(1),\n      color: isDarkTheme(theme)\n        ? theme.palette.grey[100]\n        : theme.palette.grey[700],\n    },\n    menuButtonHidden: {\n      display: \"none\",\n    },\n    drawerPaper: {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      border: \"none\",\n    },\n    drawerPaperClose: {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    },\n    snackbar: {\n      background: theme.palette.grey[\"A400\"],\n      color: \"#ffffff\",\n    },\n    snackbarCloseIcon: {\n      color: theme.palette.grey[400],\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContainer: {\n      display: \"flex\",\n      width: \"100vw\",\n    },\n    content: {\n      flex: 1,\n      height: \"100vh\",\n      overflow: \"hidden\",\n      background: theme.palette.background.paper,\n    },\n    contentWrapper: {\n      height: \"100%\",\n      display: \"flex\",\n      paddingTop: \"64px\", // app-bar height\n      overflow: \"scroll\",\n    },\n    sidebarContainer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      height: \"100%\",\n      flexDirection: \"column\",\n    },\n    listItem: {\n      borderTopRightRadius: \"24px\",\n      borderBottomRightRadius: \"24px\",\n    },\n  });\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    snackbar: state.snackbar,\n    themePreference: state.settings.themePreference,\n    isDrawerOpen: state.settings.isDrawerOpen,\n  };\n}\n\nconst mapDispatchToProps = {\n  closeSnackbar,\n  toggleDrawer,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nfunction SlideUpTransition(props: TransitionProps) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction App(props: ConnectedProps<typeof connector>) {\n  const theme = useTheme(props.themePreference);\n  const classes = useStyles(theme)();\n  const paths = getPaths();\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div className={classes.root}>\n          <AppBar\n            position=\"absolute\"\n            className={classes.appBar}\n            variant=\"outlined\"\n          >\n            <Toolbar className={classes.toolbar}>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={props.toggleDrawer}\n                className={classes.menuButton}\n              >\n                <MenuIcon />\n              </IconButton>\n              {isDarkTheme(theme) ? (\n                <LogoDarkTheme width={200} height={48} />\n              ) : (\n                <Logo width={200} height={48} />\n              )}\n            </Toolbar>\n          </AppBar>\n          <div className={classes.mainContainer}>\n            <Drawer\n              variant=\"permanent\"\n              classes={{\n                paper: clsx(\n                  classes.drawerPaper,\n                  !props.isDrawerOpen && classes.drawerPaperClose\n                ),\n              }}\n              open={props.isDrawerOpen}\n            >\n              <Snackbar\n                anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n                open={props.snackbar.isOpen}\n                autoHideDuration={6000}\n                onClose={props.closeSnackbar}\n                TransitionComponent={SlideUpTransition}\n              >\n                <SnackbarContent\n                  message={props.snackbar.message}\n                  className={classes.snackbar}\n                  action={\n                    <IconButton\n                      size=\"small\"\n                      aria-label=\"close\"\n                      color=\"inherit\"\n                      onClick={props.closeSnackbar}\n                    >\n                      <CloseIcon\n                        className={classes.snackbarCloseIcon}\n                        fontSize=\"small\"\n                      />\n                    </IconButton>\n                  }\n                />\n              </Snackbar>\n              <div className={classes.appBarSpacer} />\n              <div className={classes.sidebarContainer}>\n                <List>\n                  <div>\n                    <ListItemLink\n                      to={paths.HOME}\n                      primary=\"Queues\"\n                      icon={<BarChartIcon />}\n                    />\n                    <ListItemLink\n                      to={paths.SERVERS}\n                      primary=\"Servers\"\n                      icon={<DoubleArrowIcon />}\n                    />\n                    <ListItemLink\n                      to={paths.SCHEDULERS}\n                      primary=\"Schedulers\"\n                      icon={<ScheduleIcon />}\n                    />\n                    <ListItemLink\n                      to={paths.REDIS}\n                      primary=\"Redis\"\n                      icon={<LayersIcon />}\n                    />\n                    {window.PROMETHEUS_SERVER_ADDRESS && (\n                      <ListItemLink\n                        to={paths.QUEUE_METRICS}\n                        primary=\"Metrics\"\n                        icon={<TimelineIcon />}\n                      />\n                    )}\n                  </div>\n                </List>\n                <List>\n                  <ListItemLink\n                    to={paths.SETTINGS}\n                    primary=\"Settings\"\n                    icon={<SettingsIcon />}\n                  />\n                  <ListItem\n                    button\n                    component=\"a\"\n                    className={classes.listItem}\n                    href=\"https://github.com/hibiken/asynqmon/issues\"\n                    target=\"_blank\"\n                  >\n                    <ListItemIcon>\n                      <FeedbackIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Send Feedback\" />\n                  </ListItem>\n                </List>\n              </div>\n            </Drawer>\n            <main className={classes.content}>\n              <div className={classes.contentWrapper}>\n                <Switch>\n                  <Route exact path={paths.TASK_DETAILS}>\n                    <TaskDetailsView />\n                  </Route>\n                  <Route exact path={paths.QUEUE_DETAILS}>\n                    <TasksView />\n                  </Route>\n                  <Route exact path={paths.SCHEDULERS}>\n                    <SchedulersView />\n                  </Route>\n                  <Route exact path={paths.SERVERS}>\n                    <ServersView />\n                  </Route>\n                  <Route exact path={paths.REDIS}>\n                    <RedisInfoView />\n                  </Route>\n                  <Route exact path={paths.SETTINGS}>\n                    <SettingsView />\n                  </Route>\n                  <Route exact path={paths.HOME}>\n                    <DashboardView />\n                  </Route>\n                  <Route exact path={paths.QUEUE_METRICS}>\n                    <MetricsView />\n                  </Route>\n                  <Route path=\"*\">\n                    <PageNotFoundView />\n                  </Route>\n                </Switch>\n              </div>\n            </main>\n          </div>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default connector(App);\n","import {\n  LIST_QUEUES_SUCCESS,\n  LIST_QUEUES_BEGIN,\n  QueuesActionTypes,\n  PAUSE_QUEUE_BEGIN,\n  PAUSE_QUEUE_SUCCESS,\n  PAUSE_QUEUE_ERROR,\n  RESUME_QUEUE_BEGIN,\n  RESUME_QUEUE_ERROR,\n  RESUME_QUEUE_SUCCESS,\n  DELETE_QUEUE_BEGIN,\n  DELETE_QUEUE_ERROR,\n  DELETE_QUEUE_SUCCESS,\n  LIST_QUEUES_ERROR,\n} from \"../actions/queuesActions\";\nimport {\n  BATCH_DELETE_ARCHIVED_TASKS_SUCCESS,\n  BATCH_DELETE_RETRY_TASKS_SUCCESS,\n  BATCH_DELETE_SCHEDULED_TASKS_SUCCESS,\n  BATCH_ARCHIVE_RETRY_TASKS_SUCCESS,\n  BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS,\n  BATCH_RUN_ARCHIVED_TASKS_SUCCESS,\n  BATCH_RUN_RETRY_TASKS_SUCCESS,\n  BATCH_RUN_SCHEDULED_TASKS_SUCCESS,\n  DELETE_ALL_ARCHIVED_TASKS_SUCCESS,\n  DELETE_ALL_RETRY_TASKS_SUCCESS,\n  DELETE_ALL_SCHEDULED_TASKS_SUCCESS,\n  DELETE_ARCHIVED_TASK_SUCCESS,\n  DELETE_RETRY_TASK_SUCCESS,\n  DELETE_SCHEDULED_TASK_SUCCESS,\n  ARCHIVE_ALL_RETRY_TASKS_SUCCESS,\n  ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS,\n  ARCHIVE_RETRY_TASK_SUCCESS,\n  ARCHIVE_SCHEDULED_TASK_SUCCESS,\n  LIST_ACTIVE_TASKS_SUCCESS,\n  LIST_ARCHIVED_TASKS_SUCCESS,\n  LIST_PENDING_TASKS_SUCCESS,\n  LIST_RETRY_TASKS_SUCCESS,\n  LIST_SCHEDULED_TASKS_SUCCESS,\n  RUN_ALL_ARCHIVED_TASKS_SUCCESS,\n  RUN_ALL_RETRY_TASKS_SUCCESS,\n  RUN_ALL_SCHEDULED_TASKS_SUCCESS,\n  RUN_ARCHIVED_TASK_SUCCESS,\n  RUN_RETRY_TASK_SUCCESS,\n  RUN_SCHEDULED_TASK_SUCCESS,\n  TasksActionTypes,\n  ARCHIVE_PENDING_TASK_SUCCESS,\n  DELETE_PENDING_TASK_SUCCESS,\n  BATCH_ARCHIVE_PENDING_TASKS_SUCCESS,\n  BATCH_DELETE_PENDING_TASKS_SUCCESS,\n  ARCHIVE_ALL_PENDING_TASKS_SUCCESS,\n  DELETE_ALL_PENDING_TASKS_SUCCESS,\n  DELETE_COMPLETED_TASK_SUCCESS,\n  DELETE_ALL_COMPLETED_TASKS_SUCCESS,\n  BATCH_DELETE_COMPLETED_TASKS_SUCCESS,\n} from \"../actions/tasksActions\";\nimport { Queue } from \"../api\";\n\ninterface QueuesState {\n  loading: boolean;\n  data: QueueInfo[];\n  error: string;\n}\n\nexport interface QueueInfo {\n  name: string; // name of the queue.\n  currentStats: Queue;\n  requestPending: boolean; // indicates pause/resume/delete action is pending on this queue\n}\n\nconst initialState: QueuesState = { data: [], loading: false, error: \"\" };\n\nfunction queuesReducer(\n  state = initialState,\n  action: QueuesActionTypes | TasksActionTypes\n): QueuesState {\n  switch (action.type) {\n    case LIST_QUEUES_BEGIN:\n      return { ...state, loading: true };\n\n    case LIST_QUEUES_SUCCESS:\n      const { queues } = action.payload;\n      return {\n        ...state,\n        loading: false,\n        error: \"\",\n        data: queues.map((q: Queue) => ({\n          name: q.queue,\n          currentStats: q,\n          requestPending: false,\n        })),\n      };\n\n    case LIST_QUEUES_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n\n    case DELETE_QUEUE_BEGIN:\n    case PAUSE_QUEUE_BEGIN:\n    case RESUME_QUEUE_BEGIN: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return { ...queueInfo, requestPending: true };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_QUEUE_SUCCESS: {\n      const newData = state.data.filter(\n        (queueInfo) => queueInfo.name !== action.queue\n      );\n      return { ...state, data: newData };\n    }\n\n    case PAUSE_QUEUE_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          requestPending: false,\n          currentStats: { ...queueInfo.currentStats, paused: true },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case RESUME_QUEUE_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          requestPending: false,\n          currentStats: { ...queueInfo.currentStats, paused: false },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_QUEUE_ERROR:\n    case PAUSE_QUEUE_ERROR:\n    case RESUME_QUEUE_ERROR: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          requestPending: false,\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case LIST_ACTIVE_TASKS_SUCCESS:\n    case LIST_PENDING_TASKS_SUCCESS:\n    case LIST_SCHEDULED_TASKS_SUCCESS:\n    case LIST_RETRY_TASKS_SUCCESS:\n    case LIST_ARCHIVED_TASKS_SUCCESS: {\n      const newData = state.data\n        .filter((queueInfo) => queueInfo.name !== action.queue)\n        .concat({\n          name: action.queue,\n          currentStats: action.payload.stats,\n          requestPending: false,\n        });\n      return { ...state, data: newData };\n    }\n\n    case RUN_SCHEDULED_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending: queueInfo.currentStats.pending + 1,\n            scheduled: queueInfo.currentStats.scheduled - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case RUN_RETRY_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending: queueInfo.currentStats.pending + 1,\n            retry: queueInfo.currentStats.retry - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case RUN_ARCHIVED_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending: queueInfo.currentStats.pending + 1,\n            archived: queueInfo.currentStats.archived - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case ARCHIVE_PENDING_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived: queueInfo.currentStats.archived + 1,\n            pending: queueInfo.currentStats.pending - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case ARCHIVE_SCHEDULED_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived: queueInfo.currentStats.archived + 1,\n            scheduled: queueInfo.currentStats.scheduled - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case ARCHIVE_RETRY_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived: queueInfo.currentStats.archived + 1,\n            retry: queueInfo.currentStats.retry - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_PENDING_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - 1,\n            pending: queueInfo.currentStats.pending - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_SCHEDULED_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - 1,\n            scheduled: queueInfo.currentStats.scheduled - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_ARCHIVE_PENDING_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived:\n              queueInfo.currentStats.archived +\n              action.payload.archived_ids.length,\n            pending:\n              queueInfo.currentStats.pending -\n              action.payload.archived_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_DELETE_PENDING_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size:\n              queueInfo.currentStats.size - action.payload.deleted_ids.length,\n            pending:\n              queueInfo.currentStats.pending -\n              action.payload.deleted_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case ARCHIVE_ALL_PENDING_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived:\n              queueInfo.currentStats.archived + queueInfo.currentStats.pending,\n            pending: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_ALL_PENDING_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - action.deleted,\n            pending: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_RUN_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending:\n              queueInfo.currentStats.pending +\n              action.payload.pending_ids.length,\n            scheduled:\n              queueInfo.currentStats.scheduled -\n              action.payload.pending_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived:\n              queueInfo.currentStats.archived +\n              action.payload.archived_ids.length,\n            scheduled:\n              queueInfo.currentStats.scheduled -\n              action.payload.archived_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_DELETE_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size:\n              queueInfo.currentStats.size - action.payload.deleted_ids.length,\n            scheduled:\n              queueInfo.currentStats.scheduled -\n              action.payload.deleted_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case RUN_ALL_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending:\n              queueInfo.currentStats.pending + queueInfo.currentStats.scheduled,\n            scheduled: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived:\n              queueInfo.currentStats.archived +\n              queueInfo.currentStats.scheduled,\n            scheduled: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_ALL_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - action.deleted,\n            scheduled: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_RETRY_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - 1,\n            retry: queueInfo.currentStats.retry - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_RUN_RETRY_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending:\n              queueInfo.currentStats.pending +\n              action.payload.pending_ids.length,\n            retry:\n              queueInfo.currentStats.retry - action.payload.pending_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_ARCHIVE_RETRY_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived:\n              queueInfo.currentStats.pending +\n              action.payload.archived_ids.length,\n            retry:\n              queueInfo.currentStats.retry - action.payload.archived_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_DELETE_RETRY_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size:\n              queueInfo.currentStats.size - action.payload.deleted_ids.length,\n            retry:\n              queueInfo.currentStats.retry - action.payload.deleted_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case RUN_ALL_RETRY_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending:\n              queueInfo.currentStats.pending + queueInfo.currentStats.retry,\n            retry: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case ARCHIVE_ALL_RETRY_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived:\n              queueInfo.currentStats.archived + queueInfo.currentStats.retry,\n            retry: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_ALL_RETRY_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - action.deleted,\n            retry: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_ARCHIVED_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - 1,\n            archived: queueInfo.currentStats.archived - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_COMPLETED_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - 1,\n            completed: queueInfo.currentStats.completed - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_RUN_ARCHIVED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending:\n              queueInfo.currentStats.pending +\n              action.payload.pending_ids.length,\n            archived:\n              queueInfo.currentStats.archived -\n              action.payload.pending_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_DELETE_ARCHIVED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size:\n              queueInfo.currentStats.size - action.payload.deleted_ids.length,\n            archived:\n              queueInfo.currentStats.archived -\n              action.payload.deleted_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_DELETE_COMPLETED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size:\n              queueInfo.currentStats.size - action.payload.deleted_ids.length,\n            completed:\n              queueInfo.currentStats.completed -\n              action.payload.deleted_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case RUN_ALL_ARCHIVED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending:\n              queueInfo.currentStats.pending + queueInfo.currentStats.archived,\n            archived: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_ALL_ARCHIVED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - action.deleted,\n            archived: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_ALL_COMPLETED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - action.deleted,\n            completed: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default queuesReducer;\n","import {\n  LIST_ACTIVE_TASKS_BEGIN,\n  LIST_ACTIVE_TASKS_SUCCESS,\n  LIST_ACTIVE_TASKS_ERROR,\n  TasksActionTypes,\n  LIST_PENDING_TASKS_BEGIN,\n  LIST_PENDING_TASKS_SUCCESS,\n  LIST_PENDING_TASKS_ERROR,\n  LIST_SCHEDULED_TASKS_BEGIN,\n  LIST_SCHEDULED_TASKS_SUCCESS,\n  LIST_SCHEDULED_TASKS_ERROR,\n  LIST_RETRY_TASKS_BEGIN,\n  LIST_RETRY_TASKS_SUCCESS,\n  LIST_RETRY_TASKS_ERROR,\n  LIST_ARCHIVED_TASKS_BEGIN,\n  LIST_ARCHIVED_TASKS_SUCCESS,\n  LIST_ARCHIVED_TASKS_ERROR,\n  LIST_COMPLETED_TASKS_BEGIN,\n  LIST_COMPLETED_TASKS_SUCCESS,\n  LIST_COMPLETED_TASKS_ERROR,\n  CANCEL_ACTIVE_TASK_BEGIN,\n  CANCEL_ACTIVE_TASK_SUCCESS,\n  CANCEL_ACTIVE_TASK_ERROR,\n  DELETE_RETRY_TASK_BEGIN,\n  DELETE_RETRY_TASK_SUCCESS,\n  DELETE_RETRY_TASK_ERROR,\n  DELETE_SCHEDULED_TASK_BEGIN,\n  DELETE_SCHEDULED_TASK_SUCCESS,\n  DELETE_SCHEDULED_TASK_ERROR,\n  DELETE_ARCHIVED_TASK_BEGIN,\n  DELETE_ARCHIVED_TASK_SUCCESS,\n  DELETE_ARCHIVED_TASK_ERROR,\n  BATCH_DELETE_ARCHIVED_TASKS_BEGIN,\n  BATCH_DELETE_ARCHIVED_TASKS_SUCCESS,\n  BATCH_DELETE_ARCHIVED_TASKS_ERROR,\n  RUN_ARCHIVED_TASK_BEGIN,\n  RUN_ARCHIVED_TASK_SUCCESS,\n  RUN_ARCHIVED_TASK_ERROR,\n  BATCH_RUN_ARCHIVED_TASKS_BEGIN,\n  BATCH_RUN_ARCHIVED_TASKS_ERROR,\n  BATCH_RUN_ARCHIVED_TASKS_SUCCESS,\n  DELETE_ALL_ARCHIVED_TASKS_BEGIN,\n  DELETE_ALL_ARCHIVED_TASKS_SUCCESS,\n  DELETE_ALL_ARCHIVED_TASKS_ERROR,\n  RUN_ALL_ARCHIVED_TASKS_BEGIN,\n  RUN_ALL_ARCHIVED_TASKS_ERROR,\n  RUN_ALL_ARCHIVED_TASKS_SUCCESS,\n  BATCH_DELETE_RETRY_TASKS_ERROR,\n  BATCH_RUN_RETRY_TASKS_ERROR,\n  BATCH_DELETE_RETRY_TASKS_SUCCESS,\n  BATCH_RUN_RETRY_TASKS_SUCCESS,\n  BATCH_DELETE_RETRY_TASKS_BEGIN,\n  BATCH_RUN_RETRY_TASKS_BEGIN,\n  DELETE_ALL_RETRY_TASKS_ERROR,\n  RUN_ALL_RETRY_TASKS_ERROR,\n  DELETE_ALL_RETRY_TASKS_SUCCESS,\n  RUN_ALL_RETRY_TASKS_SUCCESS,\n  DELETE_ALL_RETRY_TASKS_BEGIN,\n  RUN_ALL_RETRY_TASKS_BEGIN,\n  BATCH_DELETE_SCHEDULED_TASKS_ERROR,\n  BATCH_RUN_SCHEDULED_TASKS_ERROR,\n  BATCH_DELETE_SCHEDULED_TASKS_SUCCESS,\n  BATCH_RUN_SCHEDULED_TASKS_SUCCESS,\n  BATCH_DELETE_SCHEDULED_TASKS_BEGIN,\n  BATCH_RUN_SCHEDULED_TASKS_BEGIN,\n  DELETE_ALL_SCHEDULED_TASKS_ERROR,\n  RUN_ALL_SCHEDULED_TASKS_ERROR,\n  DELETE_ALL_SCHEDULED_TASKS_SUCCESS,\n  RUN_ALL_SCHEDULED_TASKS_SUCCESS,\n  DELETE_ALL_SCHEDULED_TASKS_BEGIN,\n  RUN_ALL_SCHEDULED_TASKS_BEGIN,\n  RUN_RETRY_TASK_BEGIN,\n  RUN_RETRY_TASK_SUCCESS,\n  RUN_RETRY_TASK_ERROR,\n  RUN_SCHEDULED_TASK_BEGIN,\n  RUN_SCHEDULED_TASK_SUCCESS,\n  RUN_SCHEDULED_TASK_ERROR,\n  ARCHIVE_SCHEDULED_TASK_BEGIN,\n  ARCHIVE_SCHEDULED_TASK_SUCCESS,\n  ARCHIVE_SCHEDULED_TASK_ERROR,\n  ARCHIVE_ALL_SCHEDULED_TASKS_BEGIN,\n  ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS,\n  ARCHIVE_ALL_SCHEDULED_TASKS_ERROR,\n  BATCH_ARCHIVE_SCHEDULED_TASKS_BEGIN,\n  BATCH_ARCHIVE_SCHEDULED_TASKS_ERROR,\n  BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS,\n  ARCHIVE_RETRY_TASK_BEGIN,\n  ARCHIVE_RETRY_TASK_SUCCESS,\n  ARCHIVE_RETRY_TASK_ERROR,\n  ARCHIVE_ALL_RETRY_TASKS_BEGIN,\n  ARCHIVE_ALL_RETRY_TASKS_SUCCESS,\n  ARCHIVE_ALL_RETRY_TASKS_ERROR,\n  BATCH_ARCHIVE_RETRY_TASKS_SUCCESS,\n  BATCH_ARCHIVE_RETRY_TASKS_BEGIN,\n  BATCH_ARCHIVE_RETRY_TASKS_ERROR,\n  BATCH_CANCEL_ACTIVE_TASKS_BEGIN,\n  BATCH_CANCEL_ACTIVE_TASKS_SUCCESS,\n  BATCH_CANCEL_ACTIVE_TASKS_ERROR,\n  CANCEL_ALL_ACTIVE_TASKS_BEGIN,\n  CANCEL_ALL_ACTIVE_TASKS_SUCCESS,\n  CANCEL_ALL_ACTIVE_TASKS_ERROR,\n  ARCHIVE_PENDING_TASK_BEGIN,\n  DELETE_PENDING_TASK_BEGIN,\n  ARCHIVE_PENDING_TASK_SUCCESS,\n  DELETE_PENDING_TASK_SUCCESS,\n  ARCHIVE_PENDING_TASK_ERROR,\n  DELETE_PENDING_TASK_ERROR,\n  ARCHIVE_ALL_PENDING_TASKS_BEGIN,\n  DELETE_ALL_PENDING_TASKS_BEGIN,\n  ARCHIVE_ALL_PENDING_TASKS_SUCCESS,\n  DELETE_ALL_PENDING_TASKS_SUCCESS,\n  ARCHIVE_ALL_PENDING_TASKS_ERROR,\n  DELETE_ALL_PENDING_TASKS_ERROR,\n  BATCH_ARCHIVE_PENDING_TASKS_BEGIN,\n  BATCH_DELETE_PENDING_TASKS_BEGIN,\n  BATCH_ARCHIVE_PENDING_TASKS_SUCCESS,\n  BATCH_DELETE_PENDING_TASKS_SUCCESS,\n  BATCH_ARCHIVE_PENDING_TASKS_ERROR,\n  BATCH_DELETE_PENDING_TASKS_ERROR,\n  GET_TASK_INFO_BEGIN,\n  GET_TASK_INFO_ERROR,\n  GET_TASK_INFO_SUCCESS,\n  DELETE_COMPLETED_TASK_BEGIN,\n  DELETE_COMPLETED_TASK_ERROR,\n  DELETE_COMPLETED_TASK_SUCCESS,\n  DELETE_ALL_COMPLETED_TASKS_BEGIN,\n  DELETE_ALL_COMPLETED_TASKS_ERROR,\n  DELETE_ALL_COMPLETED_TASKS_SUCCESS,\n  BATCH_DELETE_COMPLETED_TASKS_BEGIN,\n  BATCH_DELETE_COMPLETED_TASKS_ERROR,\n  BATCH_DELETE_COMPLETED_TASKS_SUCCESS,\n} from \"../actions/tasksActions\";\nimport { TaskInfo } from \"../api\";\n\nexport interface ActiveTaskExtended extends TaskInfo {\n  // Indicates that a request has been sent for this\n  // task and awaiting for a response.\n  requestPending: boolean;\n\n  // Incidates that a cancelation signal has been\n  // published for this task.\n  canceling: boolean;\n}\n\nexport interface TaskInfoExtended extends TaskInfo {\n  // Indicates that a request has been sent for this\n  // task and awaiting for a response.\n  requestPending: boolean;\n}\n\ninterface TasksState {\n  activeTasks: {\n    loading: boolean;\n    batchActionPending: boolean;\n    allActionPending: boolean;\n    error: string;\n    data: ActiveTaskExtended[];\n  };\n  pendingTasks: {\n    loading: boolean;\n    batchActionPending: boolean;\n    allActionPending: boolean;\n    error: string;\n    data: TaskInfoExtended[];\n  };\n  scheduledTasks: {\n    loading: boolean;\n    batchActionPending: boolean;\n    allActionPending: boolean;\n    error: string;\n    data: TaskInfoExtended[];\n  };\n  retryTasks: {\n    loading: boolean;\n    batchActionPending: boolean;\n    allActionPending: boolean;\n    error: string;\n    data: TaskInfoExtended[];\n  };\n  archivedTasks: {\n    loading: boolean;\n    batchActionPending: boolean;\n    allActionPending: boolean;\n    error: string;\n    data: TaskInfoExtended[];\n  };\n  completedTasks: {\n    loading: boolean;\n    batchActionPending: boolean;\n    allActionPending: boolean;\n    error: string;\n    data: TaskInfoExtended[];\n  };\n  taskInfo: {\n    loading: boolean;\n    error: string;\n    data?: TaskInfo;\n  };\n}\n\nconst initialState: TasksState = {\n  activeTasks: {\n    loading: false,\n    batchActionPending: false,\n    allActionPending: false,\n    error: \"\",\n    data: [],\n  },\n  pendingTasks: {\n    loading: false,\n    batchActionPending: false,\n    allActionPending: false,\n    error: \"\",\n    data: [],\n  },\n  scheduledTasks: {\n    loading: false,\n    batchActionPending: false,\n    allActionPending: false,\n    error: \"\",\n    data: [],\n  },\n  retryTasks: {\n    loading: false,\n    batchActionPending: false,\n    allActionPending: false,\n    error: \"\",\n    data: [],\n  },\n  archivedTasks: {\n    loading: false,\n    batchActionPending: false,\n    allActionPending: false,\n    error: \"\",\n    data: [],\n  },\n  completedTasks: {\n    loading: false,\n    batchActionPending: false,\n    allActionPending: false,\n    error: \"\",\n    data: [],\n  },\n  taskInfo: {\n    loading: false,\n    error: \"\",\n  },\n};\n\nfunction tasksReducer(\n  state = initialState,\n  action: TasksActionTypes\n): TasksState {\n  switch (action.type) {\n    case GET_TASK_INFO_BEGIN:\n      return {\n        ...state,\n        taskInfo: {\n          ...state.taskInfo,\n          loading: true,\n        },\n      };\n\n    case GET_TASK_INFO_ERROR:\n      return {\n        ...state,\n        taskInfo: {\n          loading: false,\n          error: action.error,\n        },\n      };\n\n    case GET_TASK_INFO_SUCCESS:\n      return {\n        ...state,\n        taskInfo: {\n          loading: false,\n          error: \"\",\n          data: action.payload,\n        },\n      };\n\n    case LIST_ACTIVE_TASKS_BEGIN:\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          loading: true,\n        },\n      };\n\n    case LIST_ACTIVE_TASKS_SUCCESS:\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          loading: false,\n          error: \"\",\n          data: action.payload.tasks.map((task) => ({\n            ...task,\n            canceling: false,\n            requestPending: false,\n          })),\n        },\n      };\n\n    case LIST_ACTIVE_TASKS_ERROR:\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          loading: false,\n          error: action.error,\n          data: [],\n        },\n      };\n\n    case LIST_PENDING_TASKS_BEGIN:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          loading: true,\n        },\n      };\n\n    case LIST_PENDING_TASKS_SUCCESS:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          loading: false,\n          error: \"\",\n          data: action.payload.tasks.map((task) => ({\n            ...task,\n            requestPending: false,\n          })),\n        },\n      };\n\n    case LIST_PENDING_TASKS_ERROR:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          loading: false,\n          error: action.error,\n          data: [],\n        },\n      };\n\n    case LIST_SCHEDULED_TASKS_BEGIN:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          loading: true,\n        },\n      };\n\n    case LIST_SCHEDULED_TASKS_SUCCESS:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          loading: false,\n          error: \"\",\n          data: action.payload.tasks.map((task) => ({\n            ...task,\n            requestPending: false,\n          })),\n        },\n      };\n\n    case LIST_SCHEDULED_TASKS_ERROR:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          loading: false,\n          error: action.error,\n          data: [],\n        },\n      };\n\n    case LIST_RETRY_TASKS_BEGIN:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          loading: true,\n        },\n      };\n\n    case LIST_RETRY_TASKS_SUCCESS:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          loading: false,\n          error: \"\",\n          data: action.payload.tasks.map((task) => ({\n            ...task,\n            requestPending: false,\n          })),\n        },\n      };\n\n    case LIST_RETRY_TASKS_ERROR:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          loading: false,\n          error: action.error,\n          data: [],\n        },\n      };\n\n    case LIST_ARCHIVED_TASKS_BEGIN:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          loading: true,\n        },\n      };\n\n    case LIST_ARCHIVED_TASKS_SUCCESS:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          loading: false,\n          error: \"\",\n          data: action.payload.tasks.map((task) => ({\n            ...task,\n            requestPending: false,\n          })),\n        },\n      };\n\n    case LIST_ARCHIVED_TASKS_ERROR:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          loading: false,\n          error: action.error,\n          data: [],\n        },\n      };\n\n    case LIST_COMPLETED_TASKS_BEGIN:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          loading: true,\n        },\n      };\n\n    case LIST_COMPLETED_TASKS_SUCCESS:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          loading: false,\n          error: \"\",\n          data: action.payload.tasks.map((task) => ({\n            ...task,\n            requestPending: false,\n          })),\n        },\n      };\n\n    case LIST_COMPLETED_TASKS_ERROR:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          loading: false,\n          error: action.error,\n          data: [],\n        },\n      };\n\n    case DELETE_COMPLETED_TASK_BEGIN:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          data: state.completedTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: true };\n          }),\n        },\n      };\n\n    case DELETE_COMPLETED_TASK_SUCCESS:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          data: state.completedTasks.data.filter(\n            (task) => task.id !== action.taskId\n          ),\n        },\n      };\n\n    case DELETE_COMPLETED_TASK_ERROR:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          data: state.completedTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: false };\n          }),\n        },\n      };\n\n    case DELETE_ALL_COMPLETED_TASKS_BEGIN:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          allActionPending: true,\n        },\n      };\n\n    case DELETE_ALL_COMPLETED_TASKS_SUCCESS:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          allActionPending: false,\n          data: [],\n        },\n      };\n\n    case DELETE_ALL_COMPLETED_TASKS_ERROR:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          allActionPending: false,\n        },\n      };\n\n    case BATCH_DELETE_COMPLETED_TASKS_BEGIN:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          batchActionPending: true,\n          data: state.completedTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: true,\n            };\n          }),\n        },\n      };\n\n    case BATCH_DELETE_COMPLETED_TASKS_SUCCESS: {\n      const newData = state.completedTasks.data.filter(\n        (task) => !action.payload.deleted_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_DELETE_COMPLETED_TASKS_ERROR:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          batchActionPending: false,\n          data: state.completedTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: false,\n            };\n          }),\n        },\n      };\n\n    case CANCEL_ACTIVE_TASK_BEGIN: {\n      const newData = state.activeTasks.data.map((task) => {\n        if (task.id !== action.taskId) {\n          return task;\n        }\n        return { ...task, requestPending: true };\n      });\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          data: newData,\n        },\n      };\n    }\n\n    case CANCEL_ACTIVE_TASK_SUCCESS: {\n      const newData = state.activeTasks.data.map((task) => {\n        if (task.id !== action.taskId) {\n          return task;\n        }\n        return { ...task, requestPending: false, canceling: true };\n      });\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          data: newData,\n        },\n      };\n    }\n\n    case CANCEL_ACTIVE_TASK_ERROR:\n      const newData = state.activeTasks.data.map((task) => {\n        if (task.id !== action.taskId) {\n          return task;\n        }\n        return { ...task, requestPending: false };\n      });\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          data: newData,\n        },\n      };\n\n    case BATCH_CANCEL_ACTIVE_TASKS_BEGIN: {\n      const newData = state.activeTasks.data.map((task) => {\n        if (!action.taskIds.includes(task.id)) {\n          return task;\n        }\n        return { ...task, requestPending: true };\n      });\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          batchActionPending: true,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_CANCEL_ACTIVE_TASKS_SUCCESS: {\n      const newData = state.activeTasks.data.map((task) => {\n        if (action.payload.canceled_ids.includes(task.id)) {\n          return { ...task, canceling: true, requestPending: false };\n        }\n        if (action.payload.error_ids.includes(task.id)) {\n          return { ...task, requestPending: false };\n        }\n        return task;\n      });\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_CANCEL_ACTIVE_TASKS_ERROR: {\n      const newData = state.activeTasks.data.map((task) => {\n        return { ...task, requestPending: false };\n      });\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case CANCEL_ALL_ACTIVE_TASKS_BEGIN: {\n      const newData = state.activeTasks.data.map((task) => ({\n        ...task,\n        requestPending: true,\n      }));\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          allActionPending: true,\n          data: newData,\n        },\n      };\n    }\n\n    case CANCEL_ALL_ACTIVE_TASKS_SUCCESS: {\n      const newData = state.activeTasks.data.map((task) => ({\n        ...task,\n        requestPending: false,\n        canceling: true,\n      }));\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          allActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case CANCEL_ALL_ACTIVE_TASKS_ERROR: {\n      const newData = state.activeTasks.data.map((task) => ({\n        ...task,\n        requestPending: false,\n      }));\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          allActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case ARCHIVE_PENDING_TASK_BEGIN:\n    case DELETE_PENDING_TASK_BEGIN:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          data: state.pendingTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: true };\n          }),\n        },\n      };\n\n    case ARCHIVE_PENDING_TASK_SUCCESS:\n    case DELETE_PENDING_TASK_SUCCESS:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          data: state.pendingTasks.data.filter(\n            (task) => task.id !== action.taskId\n          ),\n        },\n      };\n\n    case ARCHIVE_PENDING_TASK_ERROR:\n    case DELETE_PENDING_TASK_ERROR:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          data: state.pendingTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: false };\n          }),\n        },\n      };\n\n    case ARCHIVE_ALL_PENDING_TASKS_BEGIN:\n    case DELETE_ALL_PENDING_TASKS_BEGIN:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          allActionPending: true,\n        },\n      };\n\n    case ARCHIVE_ALL_PENDING_TASKS_SUCCESS:\n    case DELETE_ALL_PENDING_TASKS_SUCCESS:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          allActionPending: false,\n          data: [],\n        },\n      };\n\n    case ARCHIVE_ALL_PENDING_TASKS_ERROR:\n    case DELETE_ALL_PENDING_TASKS_ERROR:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          allActionPending: false,\n        },\n      };\n\n    case BATCH_ARCHIVE_PENDING_TASKS_BEGIN:\n    case BATCH_DELETE_PENDING_TASKS_BEGIN:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          batchActionPending: true,\n          data: state.pendingTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: true,\n            };\n          }),\n        },\n      };\n\n    case BATCH_ARCHIVE_PENDING_TASKS_SUCCESS: {\n      const newData = state.pendingTasks.data.filter(\n        (task) => !action.payload.archived_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_DELETE_PENDING_TASKS_SUCCESS: {\n      const newData = state.pendingTasks.data.filter(\n        (task) => !action.payload.deleted_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_ARCHIVE_PENDING_TASKS_ERROR:\n    case BATCH_DELETE_PENDING_TASKS_ERROR:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          batchActionPending: false,\n          data: state.pendingTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: false,\n            };\n          }),\n        },\n      };\n\n    case RUN_SCHEDULED_TASK_BEGIN:\n    case ARCHIVE_SCHEDULED_TASK_BEGIN:\n    case DELETE_SCHEDULED_TASK_BEGIN:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          data: state.scheduledTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: true };\n          }),\n        },\n      };\n\n    case RUN_SCHEDULED_TASK_SUCCESS:\n    case ARCHIVE_SCHEDULED_TASK_SUCCESS:\n    case DELETE_SCHEDULED_TASK_SUCCESS:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          data: state.scheduledTasks.data.filter(\n            (task) => task.id !== action.taskId\n          ),\n        },\n      };\n\n    case RUN_SCHEDULED_TASK_ERROR:\n    case ARCHIVE_SCHEDULED_TASK_ERROR:\n    case DELETE_SCHEDULED_TASK_ERROR:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          data: state.scheduledTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: false };\n          }),\n        },\n      };\n\n    case RUN_ALL_SCHEDULED_TASKS_BEGIN:\n    case ARCHIVE_ALL_SCHEDULED_TASKS_BEGIN:\n    case DELETE_ALL_SCHEDULED_TASKS_BEGIN:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          allActionPending: true,\n        },\n      };\n\n    case RUN_ALL_SCHEDULED_TASKS_SUCCESS:\n    case ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS:\n    case DELETE_ALL_SCHEDULED_TASKS_SUCCESS:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          allActionPending: false,\n          data: [],\n        },\n      };\n\n    case RUN_ALL_SCHEDULED_TASKS_ERROR:\n    case ARCHIVE_ALL_SCHEDULED_TASKS_ERROR:\n    case DELETE_ALL_SCHEDULED_TASKS_ERROR:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          allActionPending: false,\n        },\n      };\n\n    case BATCH_RUN_SCHEDULED_TASKS_BEGIN:\n    case BATCH_ARCHIVE_SCHEDULED_TASKS_BEGIN:\n    case BATCH_DELETE_SCHEDULED_TASKS_BEGIN:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          batchActionPending: true,\n          data: state.scheduledTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: true,\n            };\n          }),\n        },\n      };\n\n    case BATCH_RUN_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.scheduledTasks.data.filter(\n        (task) => !action.payload.pending_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.scheduledTasks.data.filter(\n        (task) => !action.payload.archived_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_DELETE_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.scheduledTasks.data.filter(\n        (task) => !action.payload.deleted_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_RUN_SCHEDULED_TASKS_ERROR:\n    case BATCH_ARCHIVE_SCHEDULED_TASKS_ERROR:\n    case BATCH_DELETE_SCHEDULED_TASKS_ERROR:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          batchActionPending: false,\n          data: state.scheduledTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: false,\n            };\n          }),\n        },\n      };\n\n    case RUN_RETRY_TASK_BEGIN:\n    case ARCHIVE_RETRY_TASK_BEGIN:\n    case DELETE_RETRY_TASK_BEGIN:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          data: state.retryTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: true };\n          }),\n        },\n      };\n\n    case RUN_RETRY_TASK_SUCCESS:\n    case ARCHIVE_RETRY_TASK_SUCCESS:\n    case DELETE_RETRY_TASK_SUCCESS:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          data: state.retryTasks.data.filter(\n            (task) => task.id !== action.taskId\n          ),\n        },\n      };\n\n    case RUN_RETRY_TASK_ERROR:\n    case ARCHIVE_RETRY_TASK_ERROR:\n    case DELETE_RETRY_TASK_ERROR:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          data: state.retryTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: false };\n          }),\n        },\n      };\n\n    case RUN_ALL_RETRY_TASKS_BEGIN:\n    case ARCHIVE_ALL_RETRY_TASKS_BEGIN:\n    case DELETE_ALL_RETRY_TASKS_BEGIN:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          allActionPending: true,\n        },\n      };\n\n    case RUN_ALL_RETRY_TASKS_SUCCESS:\n    case ARCHIVE_ALL_RETRY_TASKS_SUCCESS:\n    case DELETE_ALL_RETRY_TASKS_SUCCESS:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          allActionPending: false,\n          data: [],\n        },\n      };\n\n    case RUN_ALL_RETRY_TASKS_ERROR:\n    case ARCHIVE_ALL_RETRY_TASKS_ERROR:\n    case DELETE_ALL_RETRY_TASKS_ERROR:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          allActionPending: false,\n        },\n      };\n\n    case BATCH_RUN_RETRY_TASKS_BEGIN:\n    case BATCH_ARCHIVE_RETRY_TASKS_BEGIN:\n    case BATCH_DELETE_RETRY_TASKS_BEGIN:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          batchActionPending: true,\n          data: state.retryTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: true,\n            };\n          }),\n        },\n      };\n\n    case BATCH_RUN_RETRY_TASKS_SUCCESS: {\n      const newData = state.retryTasks.data.filter(\n        (task) => !action.payload.pending_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_ARCHIVE_RETRY_TASKS_SUCCESS: {\n      const newData = state.retryTasks.data.filter(\n        (task) => !action.payload.archived_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_DELETE_RETRY_TASKS_SUCCESS: {\n      const newData = state.retryTasks.data.filter(\n        (task) => !action.payload.deleted_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_RUN_RETRY_TASKS_ERROR:\n    case BATCH_ARCHIVE_RETRY_TASKS_ERROR:\n    case BATCH_DELETE_RETRY_TASKS_ERROR:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          batchActionPending: false,\n          data: state.retryTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: false,\n            };\n          }),\n        },\n      };\n\n    case RUN_ARCHIVED_TASK_BEGIN:\n    case DELETE_ARCHIVED_TASK_BEGIN:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          data: state.archivedTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: true };\n          }),\n        },\n      };\n\n    case RUN_ARCHIVED_TASK_SUCCESS:\n    case DELETE_ARCHIVED_TASK_SUCCESS:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          data: state.archivedTasks.data.filter(\n            (task) => task.id !== action.taskId\n          ),\n        },\n      };\n\n    case RUN_ARCHIVED_TASK_ERROR:\n    case DELETE_ARCHIVED_TASK_ERROR:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          data: state.archivedTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: false };\n          }),\n        },\n      };\n\n    case RUN_ALL_ARCHIVED_TASKS_BEGIN:\n    case DELETE_ALL_ARCHIVED_TASKS_BEGIN:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          allActionPending: true,\n        },\n      };\n\n    case RUN_ALL_ARCHIVED_TASKS_SUCCESS:\n    case DELETE_ALL_ARCHIVED_TASKS_SUCCESS:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          allActionPending: false,\n          data: [],\n        },\n      };\n\n    case RUN_ALL_ARCHIVED_TASKS_ERROR:\n    case DELETE_ALL_ARCHIVED_TASKS_ERROR:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          allActionPending: false,\n        },\n      };\n\n    case BATCH_RUN_ARCHIVED_TASKS_BEGIN:\n    case BATCH_DELETE_ARCHIVED_TASKS_BEGIN:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          batchActionPending: true,\n          data: state.archivedTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: true,\n            };\n          }),\n        },\n      };\n\n    case BATCH_RUN_ARCHIVED_TASKS_SUCCESS: {\n      const newData = state.archivedTasks.data.filter(\n        (task) => !action.payload.pending_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_DELETE_ARCHIVED_TASKS_SUCCESS: {\n      const newData = state.archivedTasks.data.filter(\n        (task) => !action.payload.deleted_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_RUN_ARCHIVED_TASKS_ERROR:\n    case BATCH_DELETE_ARCHIVED_TASKS_ERROR:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          batchActionPending: false,\n          data: state.archivedTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: false,\n            };\n          }),\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default tasksReducer;\n","import {\n  LIST_SERVERS_BEGIN,\n  LIST_SERVERS_ERROR,\n  LIST_SERVERS_SUCCESS,\n  ServersActionTypes,\n} from \"../actions/serversActions\";\nimport { ServerInfo } from \"../api\";\n\ninterface ServersState {\n  loading: boolean;\n  error: string;\n  data: ServerInfo[];\n}\n\nconst initialState: ServersState = {\n  loading: false,\n  error: \"\",\n  data: [],\n};\n\nexport default function serversReducer(\n  state = initialState,\n  action: ServersActionTypes\n): ServersState {\n  switch (action.type) {\n    case LIST_SERVERS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case LIST_SERVERS_SUCCESS:\n      return {\n        loading: false,\n        error: \"\",\n        data: action.payload.servers,\n      };\n\n    case LIST_SERVERS_ERROR:\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  CLOSE_SNACKBAR,\n  SnackbarActionTypes,\n} from \"../actions/snackbarActions\";\nimport {\n  BATCH_CANCEL_ACTIVE_TASKS_SUCCESS,\n  BATCH_DELETE_ARCHIVED_TASKS_SUCCESS,\n  BATCH_DELETE_RETRY_TASKS_SUCCESS,\n  BATCH_DELETE_SCHEDULED_TASKS_SUCCESS,\n  BATCH_ARCHIVE_RETRY_TASKS_SUCCESS,\n  BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS,\n  BATCH_RUN_ARCHIVED_TASKS_SUCCESS,\n  BATCH_RUN_RETRY_TASKS_SUCCESS,\n  BATCH_RUN_SCHEDULED_TASKS_SUCCESS,\n  CANCEL_ALL_ACTIVE_TASKS_SUCCESS,\n  DELETE_ALL_ARCHIVED_TASKS_SUCCESS,\n  DELETE_ALL_RETRY_TASKS_SUCCESS,\n  DELETE_ALL_SCHEDULED_TASKS_SUCCESS,\n  DELETE_ARCHIVED_TASK_SUCCESS,\n  DELETE_RETRY_TASK_SUCCESS,\n  DELETE_SCHEDULED_TASK_SUCCESS,\n  ARCHIVE_ALL_RETRY_TASKS_SUCCESS,\n  ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS,\n  ARCHIVE_RETRY_TASK_SUCCESS,\n  ARCHIVE_SCHEDULED_TASK_SUCCESS,\n  RUN_ALL_ARCHIVED_TASKS_SUCCESS,\n  RUN_ALL_RETRY_TASKS_SUCCESS,\n  RUN_ALL_SCHEDULED_TASKS_SUCCESS,\n  RUN_ARCHIVED_TASK_SUCCESS,\n  RUN_RETRY_TASK_SUCCESS,\n  RUN_SCHEDULED_TASK_SUCCESS,\n  TasksActionTypes,\n  ARCHIVE_PENDING_TASK_SUCCESS,\n  DELETE_PENDING_TASK_SUCCESS,\n  BATCH_ARCHIVE_PENDING_TASKS_SUCCESS,\n  BATCH_DELETE_PENDING_TASKS_SUCCESS,\n  ARCHIVE_ALL_PENDING_TASKS_SUCCESS,\n  DELETE_ALL_PENDING_TASKS_SUCCESS,\n  DELETE_COMPLETED_TASK_SUCCESS,\n  DELETE_ALL_COMPLETED_TASKS_SUCCESS,\n  BATCH_DELETE_COMPLETED_TASKS_SUCCESS,\n} from \"../actions/tasksActions\";\n\ninterface SnackbarState {\n  isOpen: boolean;\n  message: string;\n}\n\nconst initialState: SnackbarState = {\n  isOpen: false,\n  message: \"\",\n};\n\nfunction snackbarReducer(\n  state = initialState,\n  action: TasksActionTypes | SnackbarActionTypes\n): SnackbarState {\n  switch (action.type) {\n    case CLOSE_SNACKBAR:\n      return {\n        // Note: We keep the message state unchanged for\n        // smoother transition animation.\n        ...state,\n        isOpen: false,\n      };\n\n    case BATCH_CANCEL_ACTIVE_TASKS_SUCCESS: {\n      const n = action.payload.canceled_ids.length;\n      return {\n        isOpen: true,\n        message: `Cancelation signal sent to ${n} ${\n          n === 1 ? \"task\" : \"tasks\"\n        }`,\n      };\n    }\n\n    case CANCEL_ALL_ACTIVE_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Cancelation signal sent to all tasks in ${action.queue} queue`,\n      };\n\n    case RUN_SCHEDULED_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Scheduled task is now pending`,\n      };\n\n    case RUN_RETRY_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Retry task is now pending`,\n      };\n\n    case RUN_ARCHIVED_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Archived task is now pending`,\n      };\n\n    case ARCHIVE_PENDING_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Pending task is now archived`,\n      };\n\n    case ARCHIVE_SCHEDULED_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Scheduled task is now archived`,\n      };\n\n    case ARCHIVE_RETRY_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Retry task is now archived`,\n      };\n\n    case DELETE_PENDING_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Pending task deleted`,\n      };\n\n    case DELETE_SCHEDULED_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Scheduled task deleted`,\n      };\n\n    case BATCH_RUN_SCHEDULED_TASKS_SUCCESS: {\n      const n = action.payload.pending_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} scheduled ${\n          n === 1 ? \"task is\" : \"tasks are\"\n        } now pending`,\n      };\n    }\n\n    case BATCH_ARCHIVE_PENDING_TASKS_SUCCESS: {\n      const n = action.payload.archived_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} pending ${\n          n === 1 ? \"task is\" : \"tasks are\"\n        } now archived`,\n      };\n    }\n\n    case BATCH_DELETE_PENDING_TASKS_SUCCESS: {\n      const n = action.payload.deleted_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} pending ${n === 1 ? \"task\" : \"tasks\"} deleted`,\n      };\n    }\n\n    case BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS: {\n      const n = action.payload.archived_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} scheduled ${\n          n === 1 ? \"task is\" : \"tasks are\"\n        } now archived`,\n      };\n    }\n\n    case BATCH_DELETE_SCHEDULED_TASKS_SUCCESS: {\n      const n = action.payload.deleted_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} scheduled ${n === 1 ? \"task\" : \"tasks\"} deleted`,\n      };\n    }\n\n    case ARCHIVE_ALL_PENDING_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All pending tasks are now archived\",\n      };\n\n    case DELETE_ALL_PENDING_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All pending tasks deleted\",\n      };\n\n    case RUN_ALL_SCHEDULED_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All scheduled tasks are now pending\",\n      };\n\n    case ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All scheduled tasks are now archived\",\n      };\n\n    case DELETE_ALL_SCHEDULED_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All scheduled tasks deleted\",\n      };\n\n    case DELETE_RETRY_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Retry task deleted`,\n      };\n\n    case BATCH_RUN_RETRY_TASKS_SUCCESS: {\n      const n = action.payload.pending_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} retry ${n === 1 ? \"task is\" : \"tasks are\"} now pending`,\n      };\n    }\n\n    case BATCH_ARCHIVE_RETRY_TASKS_SUCCESS: {\n      const n = action.payload.archived_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} retry ${n === 1 ? \"task is\" : \"tasks are\"} now archived`,\n      };\n    }\n\n    case BATCH_DELETE_RETRY_TASKS_SUCCESS: {\n      const n = action.payload.deleted_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} retry ${n === 1 ? \"task\" : \"tasks\"} deleted`,\n      };\n    }\n\n    case RUN_ALL_RETRY_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All retry tasks are now pending\",\n      };\n\n    case ARCHIVE_ALL_RETRY_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All retry tasks are now archived\",\n      };\n\n    case DELETE_ALL_RETRY_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All retry tasks deleted\",\n      };\n\n    case DELETE_ARCHIVED_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Archived task deleted`,\n      };\n\n    case BATCH_RUN_ARCHIVED_TASKS_SUCCESS: {\n      const n = action.payload.pending_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} archived ${\n          n === 1 ? \"task is\" : \"tasks are\"\n        } now pending`,\n      };\n    }\n\n    case BATCH_DELETE_ARCHIVED_TASKS_SUCCESS: {\n      const n = action.payload.deleted_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} archived ${n === 1 ? \"task\" : \"tasks\"} deleted`,\n      };\n    }\n\n    case RUN_ALL_ARCHIVED_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All archived tasks are now pending\",\n      };\n\n    case DELETE_ALL_ARCHIVED_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All archived tasks deleted\",\n      };\n\n    case DELETE_COMPLETED_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Completed task deleted`,\n      };\n\n    case DELETE_ALL_COMPLETED_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All completed tasks deleted\",\n      };\n\n    case BATCH_DELETE_COMPLETED_TASKS_SUCCESS:\n      const n = action.payload.deleted_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} completed ${n === 1 ? \"task\" : \"tasks\"} deleted`,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default snackbarReducer;\n","import {\n  LIST_QUEUES_SUCCESS,\n  QueuesActionTypes,\n} from \"../actions/queuesActions\";\nimport {\n  LIST_QUEUE_STATS_BEGIN,\n  LIST_QUEUE_STATS_ERROR,\n  LIST_QUEUE_STATS_SUCCESS,\n  QueueStatsActionTypes,\n} from \"../actions/queueStatsActions\";\nimport { DailyStat } from \"../api\";\n\ninterface QueueStatsState {\n  loading: boolean;\n  data: { [qname: string]: DailyStat[] };\n}\n\nconst initialState: QueueStatsState = {\n  loading: false,\n  data: {},\n};\n\nexport default function queueStatsReducer(\n  state = initialState,\n  action: QueueStatsActionTypes | QueuesActionTypes\n): QueueStatsState {\n  switch (action.type) {\n    case LIST_QUEUE_STATS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case LIST_QUEUE_STATS_SUCCESS:\n      return {\n        data: action.payload.stats,\n        loading: false,\n      };\n\n    case LIST_QUEUE_STATS_ERROR:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case LIST_QUEUES_SUCCESS: {\n      // Copy to avoid mutation.\n      let newData = { ...state.data };\n      // Update today's stats with most up-to-date data.\n      for (const q of action.payload.queues) {\n        const stats = newData[q.queue];\n        if (!stats) {\n          continue;\n        }\n        const newStats = stats.map((stat) => {\n          if (isSameDate(stat.date, q.timestamp)) {\n            return {\n              ...stat,\n              processed: q.processed,\n              failed: q.failed,\n            };\n          }\n          return stat;\n        });\n        newData[q.queue] = newStats;\n      }\n      return { ...state, data: newData };\n    }\n\n    default:\n      return state;\n  }\n}\n\n// Returns true if two timestamps are from the same date.\nfunction isSameDate(ts1: string, ts2: string): boolean {\n  const date1 = new Date(ts1);\n  const date2 = new Date(ts2);\n  return (\n    date1.getUTCDate() === date2.getUTCDate() &&\n    date1.getUTCMonth() === date2.getUTCMonth() &&\n    date1.getUTCFullYear() === date2.getUTCFullYear()\n  );\n}\n","import {\n  GET_REDIS_INFO_BEGIN,\n  GET_REDIS_INFO_ERROR,\n  GET_REDIS_INFO_SUCCESS,\n  RedisInfoActionTypes,\n} from \"../actions/redisInfoActions\";\nimport { QueueLocation, RedisInfo } from \"../api\";\n\ninterface RedisInfoState {\n  loading: boolean;\n  error: string;\n  address: string;\n  data: RedisInfo | null;\n  rawData: string | null;\n  cluster: boolean;\n  rawClusterNodes: string | null;\n  queueLocations: QueueLocation[] | null;\n}\n\nconst initialState: RedisInfoState = {\n  loading: false,\n  error: \"\",\n  address: \"\",\n  data: null,\n  rawData: null,\n  cluster: false,\n  rawClusterNodes: null,\n  queueLocations: null,\n};\n\nexport default function redisInfoReducer(\n  state = initialState,\n  action: RedisInfoActionTypes\n): RedisInfoState {\n  switch (action.type) {\n    case GET_REDIS_INFO_BEGIN:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case GET_REDIS_INFO_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n\n    case GET_REDIS_INFO_SUCCESS:\n      return {\n        loading: false,\n        error: \"\",\n        address: action.payload.address,\n        data: action.payload.info,\n        rawData: action.payload.raw_info,\n        cluster: action.payload.cluster,\n        rawClusterNodes: action.payload.raw_cluster_nodes,\n        queueLocations: action.payload.queue_locations,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_METRICS_BEGIN,\n  GET_METRICS_ERROR,\n  GET_METRICS_SUCCESS,\n  MetricsActionTypes,\n} from \"../actions/metricsActions\";\nimport { MetricsResponse } from \"../api\";\n\ninterface MetricsState {\n  loading: boolean;\n  error: string;\n  data: MetricsResponse | null;\n}\n\nconst initialState: MetricsState = {\n  loading: false,\n  error: \"\",\n  data: null,\n};\n\nexport default function metricsReducer(\n  state = initialState,\n  action: MetricsActionTypes\n): MetricsState {\n  switch (action.type) {\n    case GET_METRICS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case GET_METRICS_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n\n    case GET_METRICS_SUCCESS:\n      return {\n        loading: false,\n        error: \"\",\n        data: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { initialState as settingsInitialState } from \"./reducers/settingsReducer\"\nimport { AppState } from \"./store\";\n\nconst LOCAL_STORAGE_KEY = \"asynqmon:state\";\n\nexport function loadState(): Partial<AppState> {\n  try {\n    const serializedState = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (serializedState === null) {\n      return {};\n    }\n    const savedState = JSON.parse(serializedState);\n    return {\n      settings: {\n        ...settingsInitialState,\n        ...(savedState.settings || {}),\n      }\n    }\n  } catch (err) {\n    console.log(\"loadState: could not load state \", err)\n    return {};\n  }\n}\n\nexport function saveState(state: AppState) {\n  try {\n    const serializedState = JSON.stringify({ settings: state.settings });\n    localStorage.setItem(LOCAL_STORAGE_KEY, serializedState);\n  } catch (err) {\n    console.error(\"saveState: could not save state: \", err);\n  }\n}\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport settingsReducer from \"./reducers/settingsReducer\";\nimport queuesReducer from \"./reducers/queuesReducer\";\nimport tasksReducer from \"./reducers/tasksReducer\";\nimport serversReducer from \"./reducers/serversReducer\";\nimport schedulerEntriesReducer from \"./reducers/schedulerEntriesReducer\";\nimport snackbarReducer from \"./reducers/snackbarReducer\";\nimport queueStatsReducer from \"./reducers/queueStatsReducer\";\nimport redisInfoReducer from \"./reducers/redisInfoReducer\";\nimport metricsReducer from \"./reducers/metricsReducer\";\nimport { loadState } from \"./localStorage\";\n\nconst rootReducer = combineReducers({\n  settings: settingsReducer,\n  queues: queuesReducer,\n  tasks: tasksReducer,\n  servers: serversReducer,\n  schedulerEntries: schedulerEntriesReducer,\n  snackbar: snackbarReducer,\n  queueStats: queueStatsReducer,\n  redis: redisInfoReducer,\n  metrics: metricsReducer,\n});\n\nconst preloadedState = loadState();\n\n// AppState is the top-level application state maintained by redux store.\nexport type AppState = ReturnType<typeof rootReducer>;\n\nconst store = configureStore({\n  reducer: rootReducer,\n  preloadedState,\n});\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Prefix used for go template\nconst goTmplActionPrefix = \"/[[\";\n\n// paseses flags (string values) assigned under the window objects by server.\nexport default function parseFlagsUnderWindow() {\n  // ROOT_PATH\n  if (window.FLAG_ROOT_PATH === undefined) {\n    console.log(\"ROOT_PATH is not defined. Falling back to emtpy string\");\n    window.ROOT_PATH = \"\";\n  } else {\n    window.ROOT_PATH = window.FLAG_ROOT_PATH;\n  }\n\n  // PROMETHEUS_SERVER_ADDRESS\n  if (window.FLAG_PROMETHEUS_SERVER_ADDRESS === undefined) {\n    console.log(\n      \"PROMETHEUS_SERVER_ADDRESS is not defined. Falling back to emtpy string\"\n    );\n    window.PROMETHEUS_SERVER_ADDRESS = \"\";\n  } else if (\n    window.FLAG_PROMETHEUS_SERVER_ADDRESS.startsWith(goTmplActionPrefix)\n  ) {\n    console.log(\n      \"PROMETHEUS_SERVER_ADDRESS was not evaluated by the server. Falling back to empty string\"\n    );\n    window.PROMETHEUS_SERVER_ADDRESS = \"\";\n  } else {\n  }\n\n  // READ_ONLY\n  if (window.FLAG_READ_ONLY === undefined) {\n    console.log(\"READ_ONLY is not defined. Falling back to false\");\n    window.READ_ONLY = false;\n  } else if (window.FLAG_READ_ONLY.startsWith(goTmplActionPrefix)) {\n    console.log(\n      \"READ_ONLY was not evaluated by the server. Falling back to false\"\n    );\n    window.READ_ONLY = false;\n  } else {\n    window.READ_ONLY = window.FLAG_READ_ONLY === \"true\";\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport parseFlagsUnderWindow from \"./parseFlags\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { saveState } from \"./localStorage\";\nimport { SettingsState } from \"./reducers/settingsReducer\";\n\nparseFlagsUnderWindow();\n\nlet currentSettings: SettingsState | undefined = undefined;\nstore.subscribe(() => {\n  const prevSettings = currentSettings;\n  currentSettings = store.getState().settings;\n\n  // Write to local-storage only when settings have changed.\n  if (prevSettings !== currentSettings) {\n    saveState(store.getState());\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// TODO(hibiken): Look into this.\nserviceWorker.unregister();\n"],"sourceRoot":""}